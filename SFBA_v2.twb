<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.18.0108.1735                               -->
<workbook source-build='10.4.3 (10400.18.0108.1735)' source-platform='mac' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='SFBAv2' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='all_counties' inline='true' name='federated.05t5ue91e38x1p14vzprt1yk1ekm' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_counties' name='textscan.1rlta800e88u161afwnxh0mfwe9p'>
            <connection class='textscan' directory='/Users/rianne/Downloads/data california' filename='all_counties.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rlta800e88u161afwnxh0mfwe9p' name='all_counties.csv' table='[all_counties#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Id' ordinal='1' />
            <column datatype='integer' name='median_income' ordinal='2' />
            <column datatype='integer' name='median_rent' ordinal='3' />
            <column datatype='string' name='name' ordinal='4' />
            <column datatype='real' name='rank_income' ordinal='5' />
            <column datatype='real' name='rank_rent' ordinal='6' />
            <column datatype='real' name='rent_change' ordinal='7' />
            <column datatype='string' name='sfba' ordinal='8' />
            <column datatype='string' name='state_code' ordinal='9' />
            <column datatype='string' name='type' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_income]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>median_income</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_rent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[median_rent]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>median_rent</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rank_income]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>rank_income</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_rent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rank_rent]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>rank_rent</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rent_change]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>rent_change</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sfba</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sfba]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>sfba</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_code]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>state_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_counties.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='state_name' datatype='string' name='[Calculation_2117043719412518912]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='left([name], (len([name])-4))' />
      </column>
      <column caption='county id' datatype='string' name='[Calculation_570690562950791168]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='RIGHT([Id],5)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='median income' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income]' role='measure' type='quantitative' />
      <column caption='median rent' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Rank Income' datatype='real' default-format='n#,##0;-#,##0' name='[rank_income]' role='measure' type='quantitative' />
      <column caption='Rank Rent' datatype='real' default-format='n#,##0;-#,##0' name='[rank_rent]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[rent_change]' role='measure' type='quantitative' />
      <column caption='Sfba' datatype='string' name='[sfba]' role='dimension' type='nominal' />
      <column caption='State Code' datatype='string' name='[state_code]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;country&quot;' value='United States' />
          <alias key='&quot;sfba&quot;' value='county in SFBA' />
        </aliases>
      </column>
      <column-instance column='[rank_rent]' derivation='Attribute' name='[attr:rank_rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_income]' derivation='None' name='[none:median_income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_rent]' derivation='None' name='[none:median_rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[rank_income]' derivation='None' name='[none:rank_income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rank_rent]' derivation='None' name='[none:rank_rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sfba]' derivation='None' name='[none:sfba:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_code]' derivation='None' name='[none:state_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[median_rent]' derivation='Sum' name='[sum:median_rent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rank_income]' derivation='Sum' name='[sum:rank_income:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rank_rent]' derivation='Sum' name='[sum:rank_rent:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (median income,median rent,Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:median_income:qk]' />
          <groupfilter function='level-members' level='[none:median_rent:qk]' />
          <groupfilter function='level-members' level='[none:type:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (median rent,name,Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:median_rent:qk]' />
          <groupfilter function='level-members' level='[none:name:nk]' />
          <groupfilter function='level-members' level='[none:type:nk]' />
        </groupfilter>
      </group>
      <group delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[usa &amp; ca]' function='reference' />
          <groupfilter field='[top 52]' function='reference' />
        </groupfilter>
      </group>
      <group name='[top 25]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[type]' member='&quot;ca_county&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1482' />
                  <groupfilter function='member' level='[name]' member='&quot;Santa Cruz, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1572' />
                  <groupfilter function='member' level='[name]' member='&quot;Ventura, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1608' />
                  <groupfilter function='member' level='[name]' member='&quot;Orange, CA&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[type]' member='&quot;country&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[median_rent]' member='949' />
                <groupfilter function='member' level='[name]' member='&quot;United States&quot;' />
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[type]' member='&quot;county&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1520' />
                  <groupfilter function='member' level='[name]' member='&quot;Anne Arundel, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1532' />
                  <groupfilter function='member' level='[name]' member='&quot;Charles, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1551' />
                  <groupfilter function='member' level='[name]' member='&quot;Manassas Park city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1558' />
                  <groupfilter function='member' level='[name]' member='&quot;Calvert, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1569' />
                  <groupfilter function='member' level='[name]' member='&quot;Falls Church city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1575' />
                  <groupfilter function='member' level='[name]' member='&quot;New York, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1581' />
                  <groupfilter function='member' level='[name]' member='&quot;Prince William, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1587' />
                  <groupfilter function='member' level='[name]' member='&quot;Honolulu, HI&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1589' />
                  <groupfilter function='member' level='[name]' member='&quot;Suffolk, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1603' />
                  <groupfilter function='member' level='[name]' member='&quot;Nassau, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1611' />
                  <groupfilter function='member' level='[name]' member='&quot;Alexandria city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1615' />
                  <groupfilter function='member' level='[name]' member='&quot;Nantucket, MA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1625' />
                  <groupfilter function='member' level='[name]' member='&quot;Howard, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1647' />
                  <groupfilter function='member' level='[name]' member='&quot;Montgomery, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1705' />
                  <groupfilter function='member' level='[name]' member='&quot;Loudoun, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1750' />
                  <groupfilter function='member' level='[name]' member='&quot;Fairfax city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1779' />
                  <groupfilter function='member' level='[name]' member='&quot;Fairfax, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1861' />
                  <groupfilter function='member' level='[name]' member='&quot;Arlington, VA&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[type]' member='&quot;sfba&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1506' />
                  <groupfilter function='member' level='[name]' member='&quot;Contra Costa, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1632' />
                  <groupfilter function='member' level='[name]' member='&quot;San Francisco, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1764' />
                  <groupfilter function='member' level='[name]' member='&quot;Marin, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1813' />
                  <groupfilter function='member' level='[name]' member='&quot;Santa Clara, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1830' />
                  <groupfilter function='member' level='[name]' member='&quot;San Mateo, CA&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[type]' member='&quot;state&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[median_rent]' member='1297' />
                <groupfilter function='member' level='[name]' member='&quot;California&quot;' />
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[median_rent]' />
            <hierarchy name='[name]' />
            <hierarchy name='[type]' />
          </order>
        </groupfilter>
      </group>
      <group name='[top 52]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='union'>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[type]' member='&quot;county&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1339' />
                  <groupfilter function='member' level='[name]' member='&quot;Placer, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1343' />
                  <groupfilter function='member' level='[name]' member='&quot;Suffolk, MA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1362' />
                  <groupfilter function='member' level='[name]' member='&quot;District of Columbia, DC&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1367' />
                  <groupfilter function='member' level='[name]' member='&quot;Rockland, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1368' />
                  <groupfilter function='member' level='[name]' member='&quot;Spotsylvania, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1376' />
                  <groupfilter function='member' level='[name]' member='&quot;Manassas city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1379' />
                  <groupfilter function='member' level='[name]' member='&quot;Norfolk, MA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1380' />
                  <groupfilter function='member' level='[name]' member='&quot;Bergen, NJ&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1385' />
                  <groupfilter function='member' level='[name]' member='&quot;Fairfield, CT&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1386' />
                  <groupfilter function='member' level='[name]' member='&quot;Middlesex, MA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1388' />
                  <groupfilter function='member' level='[name]' member='&quot;Morris, NJ&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1394' />
                  <groupfilter function='member' level='[name]' member='&quot;Westchester, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1395' />
                  <groupfilter function='member' level='[name]' member='&quot;San Diego, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1401' />
                  <groupfilter function='member' level='[name]' member='&quot;Queens, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1403' />
                  <groupfilter function='member' level='[name]' member='&quot;York, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1417' />
                  <groupfilter function='member' level='[name]' member='&quot;Broomfield, CO&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1423' />
                  <groupfilter function='member' level='[name]' member='&quot;Santa Barbara, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1435' />
                  <groupfilter function='member' level='[name]' member='&quot;Somerset, NJ&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1448' />
                  <groupfilter function='member' level='[name]' member='&quot;Dukes, MA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1459' />
                  <groupfilter function='member' level='[name]' member='&quot;Douglas, CO&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1466' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[name]' member='&quot;Monroe, FL&quot;' />
                    <groupfilter function='member' level='[name]' member='&quot;Stafford, VA&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1482' />
                  <groupfilter function='member' level='[name]' member='&quot;Santa Cruz, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1520' />
                  <groupfilter function='member' level='[name]' member='&quot;Anne Arundel, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1532' />
                  <groupfilter function='member' level='[name]' member='&quot;Charles, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1551' />
                  <groupfilter function='member' level='[name]' member='&quot;Manassas Park city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1558' />
                  <groupfilter function='member' level='[name]' member='&quot;Calvert, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1569' />
                  <groupfilter function='member' level='[name]' member='&quot;Falls Church city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1572' />
                  <groupfilter function='member' level='[name]' member='&quot;Ventura, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1575' />
                  <groupfilter function='member' level='[name]' member='&quot;New York, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1581' />
                  <groupfilter function='member' level='[name]' member='&quot;Prince William, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1587' />
                  <groupfilter function='member' level='[name]' member='&quot;Honolulu, HI&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1589' />
                  <groupfilter function='member' level='[name]' member='&quot;Suffolk, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1603' />
                  <groupfilter function='member' level='[name]' member='&quot;Nassau, NY&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1608' />
                  <groupfilter function='member' level='[name]' member='&quot;Orange, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1611' />
                  <groupfilter function='member' level='[name]' member='&quot;Alexandria city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1615' />
                  <groupfilter function='member' level='[name]' member='&quot;Nantucket, MA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1625' />
                  <groupfilter function='member' level='[name]' member='&quot;Howard, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1647' />
                  <groupfilter function='member' level='[name]' member='&quot;Montgomery, MD&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1705' />
                  <groupfilter function='member' level='[name]' member='&quot;Loudoun, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1750' />
                  <groupfilter function='member' level='[name]' member='&quot;Fairfax city, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1779' />
                  <groupfilter function='member' level='[name]' member='&quot;Fairfax, VA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1861' />
                  <groupfilter function='member' level='[name]' member='&quot;Arlington, VA&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[type]' member='&quot;sfba&quot;' />
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1337' />
                  <groupfilter function='member' level='[name]' member='&quot;Solano, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1380' />
                  <groupfilter function='member' level='[name]' member='&quot;Sonoma, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1432' />
                  <groupfilter function='member' level='[name]' member='&quot;Alameda, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1442' />
                  <groupfilter function='member' level='[name]' member='&quot;Napa, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1506' />
                  <groupfilter function='member' level='[name]' member='&quot;Contra Costa, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1632' />
                  <groupfilter function='member' level='[name]' member='&quot;San Francisco, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1764' />
                  <groupfilter function='member' level='[name]' member='&quot;Marin, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1813' />
                  <groupfilter function='member' level='[name]' member='&quot;Santa Clara, CA&quot;' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[median_rent]' member='1830' />
                  <groupfilter function='member' level='[name]' member='&quot;San Mateo, CA&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[median_rent]' />
            <hierarchy name='[name]' />
            <hierarchy name='[type]' />
          </order>
        </groupfilter>
      </group>
      <group name='[usa &amp; ca]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_rent]' member='949' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[name]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[type]' member='&quot;country&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_rent]' member='1297' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[name]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[type]' member='&quot;state&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/rianne/Downloads/data california/all_counties.tde' schema='Extract' tablename='Extract' update-time='03/30/2018 04:57:06 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_2117043719412518912]' formula='left([name], (len([name])-4))' />
            <calculation column='[Calculation_570690562950791168]' formula='RIGHT([Id],5)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3144' timestamp-start='2018-03-30 04:57:06.813' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>all_counties.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3142</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4934512.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1569.5012722646311</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3141</statistic>
                <statistic aggregation='Stdev' datatype='real'>907.73674808084593</statistic>
                <statistic aggregation='StdevP' datatype='real'>907.59237643013864</statistic>
                <statistic aggregation='Var' datatype='real'>823986.00381638913</statistic>
                <statistic aggregation='VarP' datatype='real'>823723.92175410653</statistic>
                <statistic aggregation='Count' datatype='integer'>3144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10334510872.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Id</remote-alias>
              <ordinal>1</ordinal>
              <family>all_counties.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3143</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0500000US01001&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;0500000US56045&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3144</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3144.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[median_income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_income</remote-alias>
              <ordinal>3</ordinal>
              <family>all_counties.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3010</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>150850981.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47980.591921119594</statistic>
                <statistic aggregation='Min' datatype='integer'>18972</statistic>
                <statistic aggregation='Max' datatype='integer'>125672</statistic>
                <statistic aggregation='Stdev' datatype='real'>12605.80285727816</statistic>
                <statistic aggregation='StdevP' datatype='real'>12603.797958202693</statistic>
                <statistic aggregation='Var' datatype='real'>158906265.67656225</statistic>
                <statistic aggregation='VarP' datatype='real'>158855722.97119439</statistic>
                <statistic aggregation='Count' datatype='integer'>3144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7737361753283.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_rent</remote-name>
              <remote-type>2</remote-type>
              <local-name>[median_rent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_rent</remote-alias>
              <ordinal>4</ordinal>
              <family>all_counties.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>766</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2243094.0</statistic>
                <statistic aggregation='Avg' datatype='real'>713.45229007633588</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1861</statistic>
                <statistic aggregation='Stdev' datatype='real'>198.75244119389276</statistic>
                <statistic aggregation='StdevP' datatype='real'>198.72083046745922</statistic>
                <statistic aggregation='Var' datatype='real'>39502.532880531799</statistic>
                <statistic aggregation='VarP' datatype='real'>39489.968461676668</statistic>
                <statistic aggregation='Count' datatype='integer'>3144</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1724497012.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>5</ordinal>
              <family>all_counties.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3144</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville, SC&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach, SD&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3144</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rank_income</remote-name>
              <remote-type>4</remote-type>
              <local-name>[rank_income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rank_income</remote-alias>
              <ordinal>6</ordinal>
              <family>all_counties.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3143</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4937653.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1571.5</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>3142.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>907.16159898149715</statistic>
                <statistic aggregation='StdevP' datatype='real'>907.01722695878277</statistic>
                <statistic aggregation='Var' datatype='real'>822942.16666666663</statistic>
                <statistic aggregation='VarP' datatype='real'>822680.25</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10344383035.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rank_rent</remote-name>
              <remote-type>4</remote-type>
              <local-name>[rank_rent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rank_rent</remote-alias>
              <ordinal>7</ordinal>
              <family>all_counties.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3143</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4937653.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1571.5</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>3142.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>907.16159898149715</statistic>
                <statistic aggregation='StdevP' datatype='real'>907.01722695878277</statistic>
                <statistic aggregation='Var' datatype='real'>822942.16666666663</statistic>
                <statistic aggregation='VarP' datatype='real'>822680.25</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10344383035.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rent_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rent_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rent_change</remote-alias>
              <ordinal>8</ordinal>
              <family>all_counties.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>205.92743937199998</statistic>
                <statistic aggregation='Avg' datatype='real'>18.720676306545453</statistic>
                <statistic aggregation='Min' datatype='real'>11.882845188299999</statistic>
                <statistic aggregation='Max' datatype='real'>29.3152639087</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.769362918334509</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.5008717064127284</statistic>
                <statistic aggregation='Var' datatype='real'>33.285548483453283</statistic>
                <statistic aggregation='VarP' datatype='real'>30.259589530412079</statistic>
                <statistic aggregation='Count' datatype='integer'>11</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4187.956419953508</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sfba</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sfba]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sfba</remote-alias>
              <ordinal>9</ordinal>
              <family>all_counties.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;sfba&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;sfba&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;sfba&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state_code</remote-alias>
              <ordinal>10</ordinal>
              <family>all_counties.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>11</ordinal>
              <family>all_counties.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;country&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;state&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3144</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_2117043719412518912</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_2117043719412518912]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2117043719412518912</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1879</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Abbeville&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ziebach&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3144</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_570690562950791168</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_570690562950791168]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_570690562950791168</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3143</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;01001&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;56045&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3142</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;29177&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.36194' group-percentage='0.201493' measure-ordering='alphabetic' measure-percentage='0.436567' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:sfba:nk]' palette=':default' type='shape'>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;sfba&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state_code:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:median_rent:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[attr:rank_rent:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:rank_rent:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:rank_rent:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:rank_income:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:rank_income:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sfba:nk]' type='palette'>
            <map to='#57606c'>
              <bucket>&quot;sfba&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Alameda, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Napa, CA&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sonoma, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marin, CA&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;San Mateo, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Contra Costa, CA&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Solano, CA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;ca_county&quot;</bucket>
            </map>
            <map to='#1170aa'>
              <bucket>&quot;sfba&quot;</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>&quot;state&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;county&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:type:nk]' palette=':filled' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;county&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;sfba&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;state&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;ca_county&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Id' />
        <field-sort-custom-order field='Calculation_570690562950791168' />
        <field-sort-custom-order field='median_income' />
        <field-sort-custom-order field='median_rent' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='Calculation_2117043719412518912' />
        <field-sort-custom-order field='sfba' />
        <field-sort-custom-order field='state_code' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='rank_rent' />
        <field-sort-custom-order field='rank_income' />
        <field-sort-custom-order field='rent_change' />
      </field-sort-info>
    </datasource>
    <datasource caption='all (all_newest)' inline='true' name='federated.0mkjoac1rng4a71c93y7b1sobakz' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Census Tract Shapefile Data' name='webdata-direct.0rqv5s701y1rlo18owkch0smb5gx'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;TargetCGId&quot;:5,&quot;ReqType&quot;:&quot;GeoOptions&quot;,&quot;State&quot;:&quot;06&quot;,&quot;County&quot;:&quot;all&quot;,&quot;Tract&quot;:&quot;all&quot;,&quot;SelectPathId&quot;:10}' connectionName='Census Tract Shapefile Data' filename='censustractshapeswdc11.aspx' increment-key='' path='/tableau/' port='80' scriptVersion='' secondary_whitelist='' server='bigbytes.mobyus.com' urlQuery='' username='' usernameAlias='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='all_new' name='excel-direct.0uirfct1h9gedq1b6xdvh0cc095p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/rianne/Downloads/data california/all_new.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Census Tract Shapefile Data].[GEOID]' />
              <expression op='[all].[tract_id]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.0rqv5s701y1rlo18owkch0smb5gx' name='Census Tract Shapefile Data' table='[webdata-direct]' type='table' />
          <relation connection='excel-direct.0uirfct1h9gedq1b6xdvh0cc095p' name='all' table='[all$]' type='table'>
            <columns gridOrigin='A1:AO5206:no:A1:AO5206:0' header='yes' outcome='2'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='tract_id' ordinal='1' />
              <column datatype='string' name='year' ordinal='2' />
              <column datatype='string' name='median_rent' ordinal='3' />
              <column datatype='string' name='median_rent_adj_x' ordinal='4' />
              <column datatype='string' name='median_house_price' ordinal='5' />
              <column datatype='string' name='median_hp_adj_x' ordinal='6' />
              <column datatype='string' name='housing_units' ordinal='7' />
              <column datatype='string' name='rented_units' ordinal='8' />
              <column datatype='string' name='owned_units' ordinal='9' />
              <column datatype='string' name='over_mln' ordinal='10' />
              <column datatype='string' name='over_1500' ordinal='11' />
              <column datatype='string' name='mean_commute' ordinal='12' />
              <column datatype='string' name='more_30' ordinal='13' />
              <column datatype='string' name='more_60' ordinal='14' />
              <column datatype='string' name='median_income_x' ordinal='15' />
              <column datatype='string' name='population' ordinal='16' />
              <column datatype='real' name='people_per_unit' ordinal='17' />
              <column datatype='real' name='rent_change' ordinal='18' />
              <column datatype='real' name='rent_adj_change' ordinal='19' />
              <column datatype='string' name='median_rent_adj_y' ordinal='20' />
              <column datatype='string' name='max_x' ordinal='21' />
              <column datatype='real' name='price_change' ordinal='22' />
              <column datatype='real' name='price_adj_change' ordinal='23' />
              <column datatype='string' name='median_hp_adj_y' ordinal='24' />
              <column datatype='string' name='max_y' ordinal='25' />
              <column datatype='real' name='comm_30_change' ordinal='26' />
              <column datatype='real' name='comm_60_change' ordinal='27' />
              <column datatype='real' name='comm_change' ordinal='28' />
              <column datatype='real' name='y_change' ordinal='29' />
              <column datatype='string' name='median_income_y' ordinal='30' />
              <column datatype='string' name='max' ordinal='31' />
              <column datatype='string' name='low' ordinal='32' />
              <column datatype='string' name='county_id' ordinal='33' />
              <column datatype='string' name='county_name' ordinal='34' />
              <column datatype='string' name='city' ordinal='35' />
              <column datatype='string' name='all_cities' ordinal='36' />
              <column datatype='string' name='lat' ordinal='37' />
              <column datatype='string' name='long' ordinal='38' />
              <column datatype='string' name='name' ordinal='39' />
              <column datatype='string' name='type' ordinal='40' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>GEOID</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[GEOID]</local-name>
            <parent-name>[Census Tract Shapefile Data]</parent-name>
            <remote-alias>GEOID</remote-alias>
            <ordinal>0</ordinal>
            <caption>GEOID</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SubPolygonId</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[SubPolygonId]</local-name>
            <parent-name>[Census Tract Shapefile Data]</parent-name>
            <remote-alias>SubPolygonId</remote-alias>
            <ordinal>1</ordinal>
            <caption>SubPolygonId</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PointOrder</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[PointOrder]</local-name>
            <parent-name>[Census Tract Shapefile Data]</parent-name>
            <remote-alias>PointOrder</remote-alias>
            <ordinal>2</ordinal>
            <caption>PointOrder</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PointLatitude</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[PointLatitude]</local-name>
            <parent-name>[Census Tract Shapefile Data]</parent-name>
            <remote-alias>PointLatitude</remote-alias>
            <ordinal>3</ordinal>
            <caption>PointLatitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PointLongitude</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[PointLongitude]</local-name>
            <parent-name>[Census Tract Shapefile Data]</parent-name>
            <remote-alias>PointLongitude</remote-alias>
            <ordinal>4</ordinal>
            <caption>PointLongitude</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tract_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tract_id]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>tract_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_rent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_rent]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_rent</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_rent_adj_x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_rent_adj_x]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_rent_adj_x</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_house_price</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_house_price]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_house_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_hp_adj_x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_hp_adj_x]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_hp_adj_x</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>housing_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[housing_units]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>housing_units</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rented_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[rented_units]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>rented_units</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owned_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[owned_units]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>owned_units</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over_mln</remote-name>
            <remote-type>130</remote-type>
            <local-name>[over_mln]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>over_mln</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over_1500</remote-name>
            <remote-type>130</remote-type>
            <local-name>[over_1500]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>over_1500</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_commute</remote-name>
            <remote-type>130</remote-type>
            <local-name>[mean_commute]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>mean_commute</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more_30</remote-name>
            <remote-type>130</remote-type>
            <local-name>[more_30]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>more_30</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>more_60</remote-name>
            <remote-type>130</remote-type>
            <local-name>[more_60]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>more_60</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_income_x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_income_x]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_income_x</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>130</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_per_unit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_per_unit]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>people_per_unit</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rent_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>rent_change</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rent_adj_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rent_adj_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>rent_adj_change</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_rent_adj_y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_rent_adj_y]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_rent_adj_y</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_x</remote-name>
            <remote-type>130</remote-type>
            <local-name>[max_x]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>max_x</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>price_change</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_adj_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_adj_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>price_adj_change</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_hp_adj_y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_hp_adj_y]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_hp_adj_y</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[max_y]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>max_y</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comm_30_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[comm_30_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>comm_30_change</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comm_60_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[comm_60_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>comm_60_change</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comm_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[comm_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>comm_change</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[y_change]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>y_change</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_income_y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[median_income_y]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>median_income_y</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max</remote-name>
            <remote-type>130</remote-type>
            <local-name>[max]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>max</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low</remote-name>
            <remote-type>130</remote-type>
            <local-name>[low]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>low</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_id]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>county_id</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>all_cities</remote-name>
            <remote-type>130</remote-type>
            <local-name>[all_cities]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>all_cities</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>130</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>130</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[all]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AO5206:no:A1:AO5206:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Measure Names' datatype='string' name='[:Measure Names]' role='dimension' type='nominal' />
      <column caption='Calculation1' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Calculation_1289085075229982723]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [low] == &apos;low&apos; THEN [y_change] else NULL END' />
      </column>
      <column caption='med Y for low' datatype='real' name='[Calculation_1289085075252887556]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [low] == &apos;low&apos; THEN [median_income_x] ELSE NULL END' />
      </column>
      <column caption='calc_overmln' datatype='real' default-format='p0.0%' name='[Calculation_29766028563066880]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='sum([over_mln]) / sum([owned_units])' />
      </column>
      <column caption='owned_total' datatype='real' default-format='p0%' name='[Calculation_29766028569350146]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([owned_units]) / sum([housing_units])' />
      </column>
      <column caption='price_adj' datatype='real' name='[Calculation_29766028576153604]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [median_house_price] &gt;= 1000000 THEN 1000000 ELSE [median_house_price] END' />
      </column>
      <column caption='pop per unit' datatype='real' name='[Calculation_29766028596404229]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([population]) / SUM([housing_units])' />
      </column>
      <column caption='default' datatype='integer' name='[Calculation_350999341884243968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='max(0)' />
      </column>
      <column caption='adjusted median rent' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_350999341889110017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [median_rent] &gt;= 2000 THEN 2000 ELSE [median_rent] END' />
      </column>
      <column caption='calc_over_1500' datatype='real' default-format='p0%' name='[Calculation_570690563595071490]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='sum([over_1500]) / sum([rented_units])' />
      </column>
      <column caption='cities_tooltip' datatype='string' name='[Calculation_570690563683786757]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([all_cities]) THEN [city] ELSE [all_cities] END' />
      </column>
      <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Mean commute time (bins)' datatype='integer' name='[Mean Commute (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[mean_commute]' peg='0' size='2' />
      </column>
      <column aggregation='None' caption='Median rent (bins)' datatype='integer' name='[Median Rent Adj X (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[median_rent_adj_x]' peg='0' size='200' />
      </column>
      <column caption='Measure Values' datatype='real' name='[Multiple Values]' role='measure' type='quantitative' />
      <column caption='Number of Records' datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
      <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
      <column caption='All Cities' datatype='string' name='[all_cities]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Comm 30 Change' datatype='real' name='[comm_30_change]' role='measure' type='quantitative' />
      <column caption='Comm 60 Change' datatype='real' name='[comm_60_change]' role='measure' type='quantitative' />
      <column caption='Comm Change' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[comm_change]' role='measure' type='quantitative' />
      <column caption='County Id' datatype='string' name='[county_id]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Housing Units' datatype='string' name='[housing_units]' role='dimension' type='nominal' />
      <column caption='Lat' datatype='string' name='[lat]' role='dimension' type='nominal' />
      <column caption='Long' datatype='string' name='[long]' role='dimension' type='nominal' />
      <column caption='Low' datatype='string' name='[low]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='not low income' />
          <alias key='&quot;low&quot;' value='low income' />
        </aliases>
      </column>
      <column caption='Max' datatype='string' name='[max]' role='dimension' type='nominal' />
      <column caption='Max X' datatype='string' name='[max_x]' role='dimension' type='nominal' />
      <column caption='Max Y' datatype='string' name='[max_y]' role='dimension' type='nominal' />
      <column caption='Mean Commute' datatype='real' datatype-customized='true' default-format='n#,##0.0;-#,##0.0' name='[mean_commute]' role='dimension' type='quantitative' />
      <column aggregation='None' caption='med Y for low (bin)' datatype='integer' name='[med Y for low (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[Calculation_1289085075252887556]' peg='0' size='10000' />
      </column>
      <column aggregation='CountD' caption='Median House Price' datatype='real' datatype-customized='true' name='[median_house_price]' role='dimension' type='ordinal' />
      <column caption='Median Hp Adj X' datatype='string' name='[median_hp_adj_x]' role='dimension' type='nominal' />
      <column caption='Median Hp Adj Y' datatype='string' name='[median_hp_adj_y]' role='dimension' type='nominal' />
      <column aggregation='None' caption='median_income_x (bin) 2' datatype='integer' name='[median_income_x (bin) 2]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[median_income_x]' peg='0' size='10000' />
        <aliases>
          <alias key='1' value='10-20K' />
          <alias key='2' value='20-30K' />
          <alias key='3' value='30-40K' />
          <alias key='4' value='40-50K' />
          <alias key='5' value='50-60K' />
          <alias key='6' value='60-70K' />
          <alias key='7' value='70-80K' />
          <alias key='8' value='80-90K' />
          <alias key='9' value='90-100K' />
          <alias key='10' value='100-110K' />
          <alias key='11' value='110-120K' />
        </aliases>
      </column>
      <column aggregation='None' caption='median_income_x (bin)' datatype='integer' name='[median_income_x (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='4' formula='[median_income_x]' peg='0' size='50000' />
      </column>
      <column caption='Median Income X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_x]' role='dimension' type='ordinal' />
      <column caption='Median Income Y' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_y]' role='dimension' type='ordinal' />
      <column caption='median rent' datatype='real' datatype-customized='true' name='[median_rent]' role='dimension' type='quantitative' />
      <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
      <column caption='Median Rent Adj Y' datatype='string' name='[median_rent_adj_y]' role='dimension' type='nominal' />
      <column caption='More 30' datatype='real' datatype-customized='true' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[more_30]' role='dimension' type='ordinal' />
      <column caption='More 60' datatype='real' datatype-customized='true' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[more_60]' role='dimension' type='ordinal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Over 1500' datatype='real' datatype-customized='true' name='[over_1500]' role='dimension' type='ordinal' />
      <column caption='Over Mln' datatype='string' name='[over_mln]' role='dimension' type='nominal' />
      <column caption='Owned Units' datatype='string' name='[owned_units]' role='dimension' type='nominal' />
      <column caption='People Per Unit' datatype='real' name='[people_per_unit]' role='measure' type='quantitative' />
      <column caption='Population' datatype='string' name='[population]' role='dimension' type='nominal' />
      <column caption='Price Adj Change' datatype='real' name='[price_adj_change]' role='measure' type='quantitative' />
      <column caption='Price Change' datatype='real' name='[price_change]' role='measure' type='quantitative' />
      <column caption='Rent Adj Change' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[rent_adj_change]' role='measure' type='quantitative' />
      <column caption='Rent Change' datatype='real' name='[rent_change]' role='measure' type='quantitative' />
      <column caption='Rented Units' datatype='real' datatype-customized='true' name='[rented_units]' role='dimension' type='ordinal' />
      <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='no station' />
        </aliases>
      </column>
      <column caption='Y Change' datatype='real' name='[y_change]' role='measure' type='quantitative' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_350999341889110017]' derivation='None' name='[none:Calculation_350999341889110017:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Mean Commute (bin)]' derivation='None' name='[none:Mean Commute (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Median Rent Adj X (bin)]' derivation='None' name='[none:Median Rent Adj X (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[PointLatitude]' derivation='None' name='[none:PointLatitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[comm_change]' derivation='None' name='[none:comm_change:ok]' pivot='key' type='ordinal' />
      <column-instance column='[comm_change]' derivation='None' name='[none:comm_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[low]' derivation='None' name='[none:low:nk]' pivot='key' type='nominal' />
      <column-instance column='[max_x]' derivation='None' name='[none:max_x:nk]' pivot='key' type='nominal' />
      <column-instance column='[mean_commute]' derivation='None' name='[none:mean_commute:ok]' pivot='key' type='ordinal' />
      <column-instance column='[med Y for low (bin)]' derivation='None' name='[none:med Y for low (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[median_income_x (bin) 2]' derivation='None' name='[none:median_income_x (bin) 2:ok]' pivot='key' type='ordinal' />
      <column-instance column='[median_income_x (bin)]' derivation='None' name='[none:median_income_x (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[median_rent]' derivation='None' name='[none:median_rent:ok]' pivot='key' type='ordinal' />
      <column-instance column='[price_change]' derivation='None' name='[none:price_change:ok]' pivot='key' type='ordinal' />
      <column-instance column='[rent_adj_change]' derivation='None' name='[none:rent_adj_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rent_change]' derivation='None' name='[none:rent_change:ok]' pivot='key' type='ordinal' />
      <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <column-instance column='[y_change]' derivation='None' name='[none:y_change:qk]' pivot='key' type='quantitative' />
      <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
      <group caption='Action (GEOID (Census Tract Shapefile Data))' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data))' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Comm Change)' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Comm Change)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
          <groupfilter function='level-members' level='[none:comm_change:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Low)' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Low)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
          <groupfilter function='level-members' level='[low]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Mean Commute)' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Mean Commute)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
          <groupfilter function='level-members' level='[none:mean_commute:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Price Change)' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Price Change)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
          <groupfilter function='level-members' level='[none:price_change:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Rent Change)' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Rent Change)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
          <groupfilter function='level-members' level='[none:rent_change:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Rent Change,Tract Id)' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),Rent Change,Tract Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
          <groupfilter function='level-members' level='[none:rent_change:ok]' />
          <groupfilter function='level-members' level='[tract_id]' />
        </groupfilter>
      </group>
      <group caption='Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),median rent)' hidden='true' name='[Action (GEOID (Census Tract Shapefile Data),PointOrder (Census Tract Shapefile Data),SubPolygonId (Census Tract Shapefile Data),median rent)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[GEOID]' />
          <groupfilter function='level-members' level='[PointOrder]' />
          <groupfilter function='level-members' level='[SubPolygonId]' />
          <groupfilter function='level-members' level='[none:median_rent:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Mean Commute)' hidden='true' name='[Action (Mean Commute)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:mean_commute:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Rent Change)' hidden='true' name='[Action (Rent Change)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:rent_change:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Rent Change,Tract Id)' hidden='true' name='[Action (Rent Change,Tract Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:rent_change:ok]' />
          <groupfilter function='level-members' level='[tract_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Tract Id)' hidden='true' name='[Action (Tract Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tract_id]' />
        </groupfilter>
      </group>
      <group caption='Action (Tract Id,Low)' hidden='true' name='[Action (Tract Id,Low)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tract_id]' />
          <groupfilter function='level-members' level='[low]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[year]' />
        </groupfilter>
      </group>
      <group caption='Action (adjusted median rent)' hidden='true' name='[Action (adjusted median rent)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_350999341889110017:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (adjusted median rent,Tract Id)' hidden='true' name='[Action (adjusted median rent,Tract Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_350999341889110017:ok]' />
          <groupfilter function='level-members' level='[tract_id]' />
        </groupfilter>
      </group>
      <group caption='Action (median rent)' hidden='true' name='[Action (median rent)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:median_rent:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (median rent,Tract Id)' hidden='true' name='[Action (median rent,Tract Id)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:median_rent:ok]' />
          <groupfilter function='level-members' level='[tract_id]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Comm Change,Rent Change)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:comm_change:qk]' />
          <groupfilter function='level-members' level='[none:rent_change:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (County,rent_adj_change,Tract Id,Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:county_name:nk]' />
          <groupfilter function='level-members' level='[none:rent_adj_change:qk]' />
          <groupfilter function='level-members' level='[none:tract_id:nk]' />
          <groupfilter function='level-members' level='[none:type:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Rent Adj Change,Tract Id,Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:rent_adj_change:qk]' />
          <groupfilter function='level-members' level='[none:tract_id:nk]' />
          <groupfilter function='level-members' level='[none:type:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Rent Adj Change,Y Change)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:rent_adj_change:qk]' />
          <groupfilter function='level-members' level='[none:y_change:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (med Y for low (bin),Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:med Y for low (bin):ok]' />
          <groupfilter function='level-members' level='[none:year:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (median_rent_adj_y,rent_adj_change)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:median_rent_adj_y:qk]' />
          <groupfilter function='level-members' level='[none:rent_adj_change:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (rent_adj_change,Tract Id,Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:rent_adj_change:qk]' />
          <groupfilter function='level-members' level='[none:tract_id:nk]' />
          <groupfilter function='level-members' level='[none:type:nk]' />
        </groupfilter>
      </group>
      <group caption='zero population' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='ISNULL([population])' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[population]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='water tracts' name='[Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[tract_id]' member='&quot;06001990000&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06013990000&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06041990100&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06075017902&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06075980401&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06075990100&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06081990100&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06097990100&quot;' />
        </groupfilter>
      </group>
      <group name='[latest]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='11513.0' />
            <groupfilter function='member' level='[y_change]' member='67.879788065664897' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='12338.0' />
            <groupfilter function='member' level='[y_change]' member='196.34462635759442' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='18908.0' />
            <groupfilter function='member' level='[y_change]' member='113.94647768140469' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='23165.0' />
            <groupfilter function='member' level='[y_change]' member='116.80552557737967' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='24375.0' />
            <groupfilter function='member' level='[y_change]' member='60.332307692307694' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='26311.0' />
            <groupfilter function='member' level='[y_change]' member='85.865227471399791' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='28269.0' />
            <groupfilter function='member' level='[y_change]' member='60.599950475786201' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='28551.0' />
            <groupfilter function='member' level='[y_change]' member='66.915344471296976' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='28966.0' />
            <groupfilter function='member' level='[y_change]' member='85.027273354967889' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='29408.0' />
            <groupfilter function='member' level='[y_change]' member='84.538220892274211' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='30080.0' />
            <groupfilter function='member' level='[y_change]' member='64.803856382978722' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='31719.0' />
            <groupfilter function='member' level='[y_change]' member='61.367004003909329' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='34645.0' />
            <groupfilter function='member' level='[y_change]' member='65.91138692452013' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='37143.0' />
            <groupfilter function='member' level='[y_change]' member='64.528982580836228' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='40000.0' />
            <groupfilter function='member' level='[y_change]' member='164.285' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='40539.0' />
            <groupfilter function='member' level='[y_change]' member='75.645674535632352' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='41287.0' />
            <groupfilter function='member' level='[y_change]' member='65.57754256787851' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='43029.0' />
            <groupfilter function='member' level='[y_change]' member='68.491017685746826' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='43212.0' />
            <groupfilter function='member' level='[y_change]' member='76.936961955012492' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='49113.0' />
            <groupfilter function='member' level='[y_change]' member='61.163032191069576' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='49506.0' />
            <groupfilter function='member' level='[y_change]' member='70.56922393245263' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='50980.0' />
            <groupfilter function='member' level='[y_change]' member='61.522165555119656' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='52076.0' />
            <groupfilter function='member' level='[y_change]' member='60.630616790844151' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='52305.0' />
            <groupfilter function='member' level='[y_change]' member='61.902303795048276' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='52314.0' />
            <groupfilter function='member' level='[y_change]' member='63.078716978246739' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='53542.0' />
            <groupfilter function='member' level='[y_change]' member='114.97142430241681' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='56812.0' />
            <groupfilter function='member' level='[y_change]' member='65.237977891994646' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[median_income_x]' member='58977.0' />
            <groupfilter function='member' level='[y_change]' member='71.44140936297201' />
          </groupfilter>
        </groupfilter>
      </group>
      <group name='[prisons]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[tract_id]' member='&quot;06041122000&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06095253000&quot;' />
        </groupfilter>
      </group>
      <group name='[student housing]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[tract_id]' member='&quot;06001422600&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06055200900&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06085500902&quot;' />
          <groupfilter function='member' level='[tract_id]' member='&quot;06085511608&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/rianne/Downloads/data california/latest_data.tde' schema='Extract' tablename='Extract' update-time='03/29/2018 11:22:58 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1289085075229982723]' formula='IF [low] == &apos;low&apos; THEN [y_change] else NULL END' />
            <calculation column='[Calculation_1289085075252887556]' formula='IF [low] == &apos;low&apos; THEN [median_income_x] ELSE NULL END' />
            <calculation column='[Calculation_29766028576153604]' formula='IF [median_house_price] &gt;= 1000000 THEN 1000000 ELSE [median_house_price] END' />
            <calculation column='[Calculation_350999341889110017]' formula='IF [median_rent] &gt;= 2000 THEN 2000 ELSE [median_rent] END' />
            <calculation column='[Calculation_570690563683786757]' formula='IF ISNULL([all_cities]) THEN [city] ELSE [all_cities] END' />
            <calculation column='[Mean Commute (bin)]' formula='SYS_NUMBIN([mean_commute],2)' />
            <calculation column='[Median Rent Adj X (bin)]' formula='SYS_NUMBIN([median_rent_adj_x],200)' />
            <calculation column='[med Y for low (bin)]' formula='SYS_NUMBIN([Calculation_1289085075252887556],10000)' />
            <calculation column='[median_income_x (bin) 2]' formula='SYS_NUMBIN([median_income_x],10000)' />
            <calculation column='[median_income_x (bin)]' formula='SYS_NUMBIN([median_income_x],50000)' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='84387' timestamp-start='2018-03-29 23:22:58.604' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>all</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5205</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5204</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GEOID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GEOID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GEOID</remote-alias>
              <ordinal>1</ordinal>
              <family>Census Tract Shapefile Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1588</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;06001400100&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;06097990100&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PointLatitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PointLatitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PointLatitude</remote-alias>
              <ordinal>2</ordinal>
              <family>Census Tract Shapefile Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9219</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>36.893000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>38.864199999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PointLongitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PointLongitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PointLongitude</remote-alias>
              <ordinal>3</ordinal>
              <family>Census Tract Shapefile Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8773</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-123.63249999999999</statistic>
                <statistic aggregation='Max' datatype='real'>-121.20820000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PointOrder</remote-name>
              <remote-type>2</remote-type>
              <local-name>[PointOrder]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PointOrder</remote-alias>
              <ordinal>4</ordinal>
              <family>Census Tract Shapefile Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>316</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2138586.0</statistic>
                <statistic aggregation='Avg' datatype='real'>25.342600163532296</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>316</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.854173402337949</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.85394318744401</statistic>
                <statistic aggregation='Var' datatype='real'>1509.6467907789458</statistic>
                <statistic aggregation='VarP' datatype='real'>1509.6289012131267</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>181590384.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SubPolygonId</remote-name>
              <remote-type>16</remote-type>
              <local-name>[SubPolygonId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SubPolygonId</remote-alias>
              <ordinal>5</ordinal>
              <family>Census Tract Shapefile Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>all_cities</remote-name>
              <remote-type>129</remote-type>
              <local-name>[all_cities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>all_cities</remote-alias>
              <ordinal>6</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>66</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Antioch, Brentwood&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Santa Clara, Sunnyvale&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>19551</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>7</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>102</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yountville&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>70959</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>comm_30_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[comm_30_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>comm_30_change</remote-alias>
              <ordinal>8</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>679</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-35.499999999999993</statistic>
                <statistic aggregation='Max' datatype='real'>55.599999999999994</statistic>
                <statistic aggregation='Count' datatype='integer'>81957</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>comm_60_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[comm_60_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>comm_60_change</remote-alias>
              <ordinal>9</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>613</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-31.899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>28.800000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>81957</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>comm_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[comm_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>comm_change</remote-alias>
              <ordinal>10</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1492</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-47.567567567567572</statistic>
                <statistic aggregation='Max' datatype='real'>74.308300395256921</statistic>
                <statistic aggregation='Count' datatype='integer'>81957</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_id</remote-alias>
              <ordinal>11</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;06001&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;06097&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>county_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[county_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>county_name</remote-alias>
              <ordinal>12</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Sonoma&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>housing_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[housing_units]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>housing_units</remote-alias>
              <ordinal>13</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2045</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;998&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>129</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>14</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>70</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;37.502171&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ge9eral&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3111</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>129</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>15</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-121.899179&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ge8eral&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3111</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>low</remote-name>
              <remote-type>129</remote-type>
              <local-name>[low]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>low</remote-alias>
              <ordinal>16</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;low&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;low&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>15993</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;low&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max</remote-name>
              <remote-type>129</remote-type>
              <local-name>[max]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max</remote-alias>
              <ordinal>17</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_x</remote-name>
              <remote-type>129</remote-type>
              <local-name>[max_x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_x</remote-alias>
              <ordinal>18</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;max_rent&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;max_rent&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>8286</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[max_y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_y</remote-alias>
              <ordinal>19</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;max_price&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;max_price&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12255</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mean_commute</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mean_commute]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mean_commute</remote-alias>
              <ordinal>20</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>310</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>7.0</statistic>
                <statistic aggregation='Max' datatype='real'>54.600000000000001</statistic>
                <statistic aggregation='Count' datatype='integer'>82056</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_house_price</remote-name>
              <remote-type>4</remote-type>
              <local-name>[median_house_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_house_price</remote-alias>
              <ordinal>21</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3384</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>22100.0</statistic>
                <statistic aggregation='Max' datatype='real'>2000000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>81357</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_hp_adj_x</remote-name>
              <remote-type>129</remote-type>
              <local-name>[median_hp_adj_x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_hp_adj_x</remote-alias>
              <ordinal>22</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3169</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1000000&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;nan&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_hp_adj_y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[median_hp_adj_y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_hp_adj_y</remote-alias>
              <ordinal>23</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1230</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1000000&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;999500&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>79932</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_income_x</remote-name>
              <remote-type>4</remote-type>
              <local-name>[median_income_x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_income_x</remote-alias>
              <ordinal>24</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4411</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6125.0</statistic>
                <statistic aggregation='Max' datatype='real'>250000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>82092</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_income_y</remote-name>
              <remote-type>4</remote-type>
              <local-name>[median_income_y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_income_y</remote-alias>
              <ordinal>25</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1536</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11440.0</statistic>
                <statistic aggregation='Max' datatype='real'>250000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>82029</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_rent</remote-name>
              <remote-type>4</remote-type>
              <local-name>[median_rent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_rent</remote-alias>
              <ordinal>26</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1496</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>100.0</statistic>
                <statistic aggregation='Max' datatype='real'>3500.0</statistic>
                <statistic aggregation='Count' datatype='integer'>81679</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_rent_adj_x</remote-name>
              <remote-type>4</remote-type>
              <local-name>[median_rent_adj_x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_rent_adj_x</remote-alias>
              <ordinal>27</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1169</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>100.0</statistic>
                <statistic aggregation='Max' datatype='real'>2000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>81679</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_rent_adj_y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[median_rent_adj_y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_rent_adj_y</remote-alias>
              <ordinal>28</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>757</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>79932</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>more_30</remote-name>
              <remote-type>5</remote-type>
              <local-name>[more_30]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>more_30</remote-alias>
              <ordinal>29</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>601</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>82180</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>more_60</remote-name>
              <remote-type>5</remote-type>
              <local-name>[more_60]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>more_60</remote-alias>
              <ordinal>30</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>344</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>47.5</statistic>
                <statistic aggregation='Count' datatype='integer'>82180</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>31</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>75</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12th St. Oakland City Center&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West Oakland&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3111</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>over_1500</remote-name>
              <remote-type>4</remote-type>
              <local-name>[over_1500]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>over_1500</remote-alias>
              <ordinal>32</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1007</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>3843.0</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>over_mln</remote-name>
              <remote-type>129</remote-type>
              <local-name>[over_mln]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>over_mln</remote-alias>
              <ordinal>33</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>850</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;998&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>owned_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[owned_units]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>owned_units</remote-alias>
              <ordinal>34</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1782</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_per_unit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_per_unit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_per_unit</remote-alias>
              <ordinal>35</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4715</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>121.53333333333333</statistic>
                <statistic aggregation='Count' datatype='integer'>82152</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>129</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>36</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3268</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9949&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_adj_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_adj_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_adj_change</remote-alias>
              <ordinal>37</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1371</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-57.518450184501845</statistic>
                <statistic aggregation='Max' datatype='real'>357.31132075471697</statistic>
                <statistic aggregation='Count' datatype='integer'>79932</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_change</remote-alias>
              <ordinal>38</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1496</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-57.518450184501845</statistic>
                <statistic aggregation='Max' datatype='real'>357.31132075471697</statistic>
                <statistic aggregation='Count' datatype='integer'>79932</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rent_adj_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rent_adj_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rent_adj_change</remote-alias>
              <ordinal>39</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1311</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-52.87686996547756</statistic>
                <statistic aggregation='Max' datatype='real'>913.00000000000011</statistic>
                <statistic aggregation='Count' datatype='integer'>79932</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rent_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[rent_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rent_change</remote-alias>
              <ordinal>40</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1490</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-52.87686996547756</statistic>
                <statistic aggregation='Max' datatype='real'>913.00000000000011</statistic>
                <statistic aggregation='Count' datatype='integer'>79932</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rented_units</remote-name>
              <remote-type>4</remote-type>
              <local-name>[rented_units]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rented_units</remote-alias>
              <ordinal>41</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1655</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4469.0</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tract_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tract_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tract_id</remote-alias>
              <ordinal>42</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1588</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;06001400100&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;06097990100&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>43</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bart&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;caltrain&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3111</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>y_change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[y_change]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>y_change</remote-alias>
              <ordinal>44</ordinal>
              <family>all</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1575</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-46.123236095380946</statistic>
                <statistic aggregation='Max' datatype='real'>196.34462635759442</statistic>
                <statistic aggregation='Count' datatype='integer'>82029</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>45</ordinal>
              <family>all</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2010&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2016&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>84387</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1289085075229982723</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1289085075229982723]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1289085075229982723</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>433</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-46.123236095380946</statistic>
                <statistic aggregation='Max' datatype='real'>196.34462635759442</statistic>
                <statistic aggregation='Count' datatype='integer'>15993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1289085075252887556</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Calculation_1289085075252887556]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1289085075252887556</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1247</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11440.0</statistic>
                <statistic aggregation='Max' datatype='real'>115100.0</statistic>
                <statistic aggregation='Count' datatype='integer'>15993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_29766028576153604</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Calculation_29766028576153604]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_29766028576153604</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3169</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>22100.0</statistic>
                <statistic aggregation='Max' datatype='real'>1000000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>81357</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_350999341889110017</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Calculation_350999341889110017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_350999341889110017</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1169</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>100.0</statistic>
                <statistic aggregation='Max' datatype='real'>2000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>81679</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_570690563683786757</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_570690563683786757]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_570690563683786757</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>167</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alameda&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yountville&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>70959</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mean Commute (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Mean Commute (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mean Commute (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>27</statistic>
                <statistic aggregation='Count' datatype='integer'>82056</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median Rent Adj X (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Median Rent Adj X (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Rent Adj X (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>81679</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>med Y for low (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[med Y for low (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>med Y for low (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>11</statistic>
                <statistic aggregation='Count' datatype='integer'>15993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_income_x (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[median_income_x (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_income_x (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>82092</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_income_x (bin) 2</remote-name>
              <remote-type>16</remote-type>
              <local-name>[median_income_x (bin) 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_income_x (bin) 2</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>25</statistic>
                <statistic aggregation='Count' datatype='integer'>82092</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.557836' group-percentage='0.0764925' measure-ordering='alphabetic' measure-percentage='0.365672' rowDisplayCount='1000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0mkjoac1rng4a71c93y7b1sobakz]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointLatitude:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:lat:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:lat:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:median_income_x (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>5</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>50</bucket>
            </map>
            <map to='#2c5986'>
              <bucket>47</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>44</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>43</bucket>
            </map>
            <map to='#35628f'>
              <bucket>42</bucket>
            </map>
            <map to='#376592'>
              <bucket>41</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>40</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>39</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>4</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>38</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>37</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>36</bucket>
            </map>
            <map to='#4575a3'>
              <bucket>35</bucket>
            </map>
            <map to='#4877a5'>
              <bucket>34</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>33</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>32</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>31</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>3</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>30</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>29</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>28</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>27</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>26</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>25</bucket>
            </map>
            <map to='#6394be'>
              <bucket>24</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>2</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>23</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>22</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>21</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>20</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>19</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>18</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>17</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>16</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>1</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>15</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>14</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>13</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>12</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>11</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>10</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>9</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>8</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>0</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>7</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>6</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;bart&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;caltrain&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:median_income_x (bin) 2:ok]' palette='seattle_grays_10_0' type='palette'>
            <map to='#5c6068'>
              <bucket>3</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>8</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>12</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>17</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>24</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>1</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>6</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>15</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>19</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>21</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>5</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>10</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>14</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>20</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>23</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>0</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>2</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>7</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>11</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>16</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>25</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>4</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>9</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>13</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>18</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>22</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:med Y for low (bin):ok]' palette='seattle_grays_10_0' type='palette'>
            <map to='#5c6068'>
              <bucket>3</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>8</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>1</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>6</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>11</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>5</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>10</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>2</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>7</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>4</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>9</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:low:nk]' type='palette'>
            <map to='#5c6068'>
              <bucket>&quot;low&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Median Rent Adj X (bin):ok]' palette='seattle_grays_10_0' type='palette'>
            <map to='#5c6068'>
              <bucket>2</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>7</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>0</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>5</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>10</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>4</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>9</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>1</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>6</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>3</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>8</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Mean Commute (bin):ok]' palette='seattle_grays_10_0' type='palette'>
            <map to='#5c6068'>
              <bucket>5</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>10</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>15</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>20</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>25</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>8</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>13</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>18</bucket>
            </map>
            <map to='#767f8b'>
              <bucket>23</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>7</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>12</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>17</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>22</bucket>
            </map>
            <map to='#989ca3'>
              <bucket>27</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>4</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>9</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>14</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>19</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>24</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>6</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>11</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>16</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>21</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>26</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:max_x:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;max_rent&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='tract_id' />
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='median_rent' />
        <field-sort-custom-order field='median_rent_adj_x' />
        <field-sort-custom-order field='median_house_price' />
        <field-sort-custom-order field='median_hp_adj_x' />
        <field-sort-custom-order field='housing_units' />
        <field-sort-custom-order field='rented_units' />
        <field-sort-custom-order field='owned_units' />
        <field-sort-custom-order field='over_mln' />
        <field-sort-custom-order field='over_1500' />
        <field-sort-custom-order field='mean_commute' />
        <field-sort-custom-order field='more_30' />
        <field-sort-custom-order field='more_60' />
        <field-sort-custom-order field='median_income_x' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='people_per_unit' />
        <field-sort-custom-order field='rent_change' />
        <field-sort-custom-order field='rent_adj_change' />
        <field-sort-custom-order field='median_rent_adj_y' />
        <field-sort-custom-order field='max_x' />
        <field-sort-custom-order field='price_change' />
        <field-sort-custom-order field='price_adj_change' />
        <field-sort-custom-order field='median_hp_adj_y' />
        <field-sort-custom-order field='max_y' />
        <field-sort-custom-order field='comm_30_change' />
        <field-sort-custom-order field='comm_60_change' />
        <field-sort-custom-order field='comm_change' />
        <field-sort-custom-order field='y_change' />
        <field-sort-custom-order field='median_income_y' />
        <field-sort-custom-order field='max' />
        <field-sort-custom-order field='low' />
        <field-sort-custom-order field='county_id' />
        <field-sort-custom-order field='county_name' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='all_cities' />
        <field-sort-custom-order field='GEOID' />
        <field-sort-custom-order field='SubPolygonId' />
        <field-sort-custom-order field='PointOrder' />
        <field-sort-custom-order field='PointLatitude' />
        <field-sort-custom-order field='PointLongitude' />
        <field-sort-custom-order field='F1 (Sheet1)' />
        <field-sort-custom-order field='lat' />
        <field-sort-custom-order field='long' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='type' />
        <field-sort-custom-order field='GEOID (Sheet1)' />
        <field-sort-custom-order field='tract_id (Sheet1)' />
        <field-sort-custom-order field='county_id (Sheet1)' />
        <field-sort-custom-order field='Calculation_1289085075229982723' />
        <field-sort-custom-order field='Calculation_29766028563066880' />
        <field-sort-custom-order field='Calculation_29766028569350146' />
        <field-sort-custom-order field='Calculation_29766028576153604' />
        <field-sort-custom-order field='Calculation_29766028596404229' />
        <field-sort-custom-order field='Calculation_350999341884243968' />
        <field-sort-custom-order field='Calculation_350999341889110017' />
        <field-sort-custom-order field='Calculation_570690563595071490' />
        <field-sort-custom-order field='Calculation_570690563683786757' />
        <field-sort-custom-order field='median_income_x (bin) 2' />
        <field-sort-custom-order field='median_income_x (bin)' />
        <field-sort-custom-order field='Calculation_1289085075252887556' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - y change' type='sheet' worksheet='map y change' />
      <link caption='Filter 10 (generated)' delimiter=',' escape='\' expression='tsl:d%20-%20y%20change?%5Bfederated.0mkjoac1rng4a71c93y7b1sobakz%5D.%5Btract_id%5D~s0=&lt;[GEOID]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='map y change' />
        <param name='target' value='d - y change' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - rent' type='sheet' worksheet='filter' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='# rent tracts,filter' />
        <param name='special-fields' value='all' />
        <param name='target' value='d - rent' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - commute' type='sheet' worksheet='filter' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='filter,balls commute' />
        <param name='special-fields' value='all' />
        <param name='target' value='d - commute' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - low income' type='sheet' worksheet='low income' />
      <link caption='Filter 3 (generated)' delimiter=',' escape='\' expression='tsl:d%20-%20low%20income?%5Bfederated.0mkjoac1rng4a71c93y7b1sobakz%5D.%5Btract_id%5D~s0=&lt;[GEOID]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='low income' />
        <param name='target' value='d - low income' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - % comm' type='sheet' worksheet='% comm' />
      <link caption='Filter 4 (generated)' delimiter=',' escape='\' expression='tsl:d%20-%20%25%20comm?%5Bfederated.0mkjoac1rng4a71c93y7b1sobakz%5D.%5Btract_id%5D~s0=&lt;[GEOID]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='% comm' />
        <param name='target' value='d - % comm' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - house prices' type='sheet' worksheet='Sheet 37' />
      <link caption='Filter 5 (generated)' delimiter=',' escape='\' expression='tsl:d%20-%20house%20prices?%5Bfederated.0mkjoac1rng4a71c93y7b1sobakz%5D.%5BGEOID%5D~s0=&lt;[GEOID]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 37' />
        <param name='target' value='d - house prices' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - new transport' type='sheet' worksheet='Sheet 42' />
      <link caption='Filter 6 (generated)' delimiter=',' escape='\' expression='tsl:d%20-%20new%20transport?%5Bfederated.0mkjoac1rng4a71c93y7b1sobakz%5D.%5Btract_id%5D~s0=&lt;[GEOID]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sheet 42' />
        <param name='target' value='d - new transport' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='d - rent changes' type='sheet' worksheet='rent changes' />
      <link caption='Filter 8 (generated)' delimiter=',' escape='\' expression='tsl:d%20-%20rent%20changes?%5Bfederated.0mkjoac1rng4a71c93y7b1sobakz%5D.%5Btract_id%5D~s0=&lt;[tract_id]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='rent changes' />
        <param name='target' value='d - rent changes' />
      </command>
    </action>
    <datasources>
      <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
    </datasources>
    <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
      <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
      <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='# rent tracts'>
      <layout-options>
        <title>
          <formatted-text>
            <run># of tracts with a median rate of $2,000 or higher</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='default' datatype='integer' name='[Calculation_350999341884243968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(0)' />
            </column>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[tract_id]' derivation='CountD' name='[ctd:tract_id:qk]' pivot='key' type='quantitative' />
            <column caption='median rent' datatype='real' datatype-customized='true' name='[median_rent]' role='dimension' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_rent]' derivation='None' name='[none:median_rent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_350999341884243968]' derivation='User' name='[usr:Calculation_350999341884243968:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent:qk]' included-values='in-range'>
            <min>2000.0</min>
            <max>3500.0</max>
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='County'>
              <formatted-text>
                <run>County</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' />
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#898989' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='% comm'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% change in commute time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='cities_tooltip' datatype='string' name='[Calculation_570690563683786757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([all_cities]) THEN [city] ELSE [all_cities] END' />
            </column>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column caption='All Cities' datatype='string' name='[all_cities]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_570690563683786757]' derivation='Attribute' name='[attr:Calculation_570690563683786757:nk]' pivot='key' type='nominal' />
            <column-instance column='[city]' derivation='Attribute' name='[attr:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='Attribute' name='[attr:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Comm Change' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[comm_change]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[comm_change]' derivation='None' name='[none:comm_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Year)]'>
            <groupfilter function='member' level='[year]' member='&quot;2010&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Year)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]' max='75.0' min='-50.0' num-steps='10' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]' value='change in commute time'>
              <formatted-text>
                <run>change in commute time</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='County'>
              <formatted-text>
                <run>County</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' value='Tract id'>
              <formatted-text>
                <run>Tract id</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:city:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>% change in commute time: </run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>county:&#9;</run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>city/cities: </run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='&gt;30 mins'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% of workers with a commute &gt; 30 mins&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[more_30]' derivation='Avg' name='[avg:more_30:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='More 30' datatype='real' datatype-customized='true' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[more_30]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:more_30:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:more_30:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#898989' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:more_30:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='&gt;60 mins'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% of workers with a commute &gt; 60 mins&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[more_60]' derivation='Avg' name='[avg:more_60:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='More 60' datatype='real' datatype-customized='true' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[more_60]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' direction='ASC' using='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:more_60:qk]' />
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:more_60:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:more_60:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#898989' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:more_60:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SFBA map'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.95999997854232788' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' />
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' />
              <geometry column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Latitude (generated)]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 32'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='price_adj' datatype='real' name='[Calculation_29766028576153604]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [median_house_price] &gt;= 1000000 THEN 1000000 ELSE [median_house_price] END' />
            </column>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_29766028576153604]' derivation='Avg' name='[avg:Calculation_29766028576153604:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_house_price]' derivation='Avg' name='[avg:median_house_price:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Median House Price' datatype='real' datatype-customized='true' name='[median_house_price]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (GEOID (Census Tract Shapefile Data))]'>
            <groupfilter function='level-members' level='[GEOID]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (GEOID (Census Tract Shapefile Data))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_house_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:Calculation_29766028576153604:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_house_price:qk] + [federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:Calculation_29766028576153604:qk])</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 37'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median house price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[student housing]' derivation='InOut' name='[io:student housing:nk]' pivot='key' type='nominal' />
            <column caption='Max Y' datatype='string' name='[max_y]' role='dimension' type='nominal' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_y]' derivation='None' name='[none:max_y:nk]' pivot='key' type='nominal' />
            <column-instance column='[price_adj_change]' derivation='None' name='[none:price_adj_change:qk]' pivot='key' type='quantitative' />
            <column caption='Price Adj Change' datatype='real' name='[price_adj_change]' role='measure' type='quantitative' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:student housing:nk]'>
            <groupfilter function='member' level='[io:student housing:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:city:nk]' member='%null%' />
              <groupfilter from='&quot;Alameda&quot;' function='range' level='[none:city:nk]' to='&quot;Yountville&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:student housing:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:price_adj_change:qk]' max='75.0' min='-75.0' num-steps='15' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:max_y:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:max_y:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:max_y:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='39' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:price_adj_change:qk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:price_adj_change:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='157' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk] + [federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk])</rows>
        <cols>([federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk] + [federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 42'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tracts with a BART and/or Caltrain station(s)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='no station' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='mark-color' value='#e6e6e6' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 43'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Income in low income tracts over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='med Y for low' datatype='real' name='[Calculation_1289085075252887556]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [low] == &apos;low&apos; THEN [median_income_x] ELSE NULL END' />
            </column>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[tract_id]' derivation='CountD' name='[ctd:tract_id:qk]' pivot='key' type='quantitative' />
            <column caption='Low' datatype='string' name='[low]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='not low income' />
                <alias key='&quot;low&quot;' value='low income' />
              </aliases>
            </column>
            <column aggregation='None' caption='med Y for low (bin)' datatype='integer' name='[med Y for low (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[Calculation_1289085075252887556]' peg='0' size='10000' />
            </column>
            <column caption='Median Income X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_x]' role='dimension' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[low]' derivation='None' name='[none:low:nk]' pivot='key' type='nominal' />
            <column-instance column='[med Y for low (bin)]' derivation='None' name='[none:med Y for low (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Exclusions (med Y for low (bin),Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:med Y for low (bin):ok]' />
                <groupfilter function='level-members' level='[none:year:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:med Y for low (bin):ok]' member='%null%' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:year:nk]' member='&quot;2010&quot;' />
                  <groupfilter function='member' level='[none:year:nk]' member='&quot;2013&quot;' />
                  <groupfilter function='member' level='[none:year:nk]' member='&quot;2016&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]'>
            <groupfilter function='level-members' level='[none:low:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Exclusions (med Y for low (bin),Year)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='# of tracts' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:med Y for low (bin):ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'># of tracts: </run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#898989' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]</rows>
        <cols>([federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk] / [federated.0mkjoac1rng4a71c93y7b1sobakz].[none:med Y for low (bin):ok])</cols>
        <show-full-range>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[med Y for low (bin)]</column>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[median_income_x (bin) 2]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 44'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column aggregation='None' caption='Median rent (bins)' datatype='integer' name='[Median Rent Adj X (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='2' formula='[median_rent_adj_x]' peg='0' size='200' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[tract_id]' derivation='CountD' name='[ctd:tract_id:qk]' pivot='key' type='quantitative' />
            <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
            <column-instance column='[Median Rent Adj X (bin)]' derivation='None' name='[none:Median Rent Adj X (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Median Rent Adj X (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Median Rent Adj X (bin):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Median Rent Adj X (bin):ok]' member='%null%' />
                <groupfilter function='member' level='[none:Median Rent Adj X (bin):ok]' member='0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Median Rent Adj X (bin):ok]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='# of tracts' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' value='48' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Median Rent Adj X (bin):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8680663108825684' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk] * [federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk])</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Median Rent Adj X (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Mean Commute (bin)]</column>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Median Rent Adj X (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 45'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column aggregation='None' caption='Mean commute time (bins)' datatype='integer' name='[Mean Commute (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[mean_commute]' peg='0' size='2' />
            </column>
            <column aggregation='None' caption='Median rent (bins)' datatype='integer' name='[Median Rent Adj X (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='2' formula='[median_rent_adj_x]' peg='0' size='200' />
            </column>
            <column-instance column='[tract_id]' derivation='CountD' name='[ctd:tract_id:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Commute' datatype='real' datatype-customized='true' default-format='n#,##0.0;-#,##0.0' name='[mean_commute]' role='dimension' type='quantitative' />
            <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
            <column-instance column='[Mean Commute (bin)]' derivation='None' name='[none:Mean Commute (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Median Rent Adj X (bin)]' derivation='None' name='[none:Median Rent Adj X (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Mean Commute (bin):ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Mean Commute (bin):ok]' />
              <groupfilter function='member' level='[none:Mean Commute (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Median Rent Adj X (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Median Rent Adj X (bin):ok]' />
              <groupfilter function='member' level='[none:Median Rent Adj X (bin):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Median Rent Adj X (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='# of tracts' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Mean Commute (bin):ok]' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Mean Commute (bin):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8020994663238525' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk] * [federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk])</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Mean Commute (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Mean Commute (bin)]</column>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Median Rent Adj X (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 46'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_adj_change]' derivation='None' name='[none:rent_adj_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Rent Adj Change' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[rent_adj_change]' role='measure' type='quantitative' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='no station' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Exclusions (Rent Adj Change,Tract Id,Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:rent_adj_change:qk]' />
                <groupfilter function='level-members' level='[none:tract_id:nk]' />
                <groupfilter function='level-members' level='[none:type:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:type:nk]' member='%null%' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:rent_adj_change:qk]' member='131.74971031286211' />
                      <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06001430400&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:rent_adj_change:qk]' member='132.8358208955224' />
                      <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06085512035&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:rent_adj_change:qk]' member='175.86206896551724' />
                      <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06055201402&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:rent_adj_change:qk]' member='226.72064777327935' />
                      <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06001444100&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:rent_adj_change:qk]' member='481.39534883720927' />
                      <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06013360102&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:rent_adj_change:qk]' member='913.00000000000011' />
                      <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06075980600&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:rent_adj_change:qk]' />
                  <hierarchy name='[none:tract_id:nk]' />
                  <hierarchy name='[none:type:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' included-values='non-null' />
          <sort class='alphabetic' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' direction='ASC' />
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Exclusions (Rent Adj Change,Tract Id,Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='rent change %' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' field-type='quantitative' major-origin='0.0' major-spacing='50.0' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' value='59' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' value='false' />
            <format attr='font-weight' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='wrap' id='refline1' value='on' />
            <format attr='text-align' id='refline1' value='center' />
            <format attr='color' id='refline1' value='#e15759' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='font-size' id='refline1' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' z-order='1' />
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='value' probability='95' scope='per-cell' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>rent change%:&#9;</run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 47'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_rent_adj_x]' derivation='None' name='[none:median_rent_adj_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='no station' />
              </aliases>
            </column>
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' included-values='non-null' />
          <sort class='manual' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;bart&quot;</bucket>
              <bucket>&quot;caltrain&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]'>
            <groupfilter function='member' level='[none:year:nk]' member='&quot;2016&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='average median rent in 2016' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='wrap' id='refline1' value='auto' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='text-align' id='refline1' value='center' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='font-size' id='refline1' value='10' />
            <format attr='color' id='refline1' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' z-order='1' />
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='value' probability='95' scope='per-cell' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.18591159582138062' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 48'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='default' datatype='integer' name='[Calculation_350999341884243968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(0)' />
            </column>
            <column caption='County Id' datatype='string' name='[county_id]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_id]' derivation='CountD' name='[ctd:county_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_350999341884243968]' derivation='User' name='[usr:Calculation_350999341884243968:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:county_id:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.0901985168457031' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:county_id:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='balls commute'>
      <layout-options>
        <title>
          <formatted-text>
            <run># of tracts with a mean commute time over 30 mins</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='default' datatype='integer' name='[Calculation_350999341884243968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(0)' />
            </column>
            <column-instance column='[tract_id]' derivation='CountD' name='[ctd:tract_id:qk]' pivot='key' type='quantitative' />
            <column caption='Mean Commute' datatype='real' datatype-customized='true' default-format='n#,##0.0;-#,##0.0' name='[mean_commute]' role='dimension' type='quantitative' />
            <column-instance column='[mean_commute]' derivation='None' name='[none:mean_commute:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_350999341884243968]' derivation='User' name='[usr:Calculation_350999341884243968:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]' included-values='in-range'>
            <min>30.0</min>
            <max>54.600000000000001</max>
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' />
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#898989' />
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='bp - median y'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[median_income_x]' derivation='Avg' name='[avg:median_income_x:qk]' pivot='key' type='quantitative' />
            <column caption='Median Income X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_x]' role='dimension' type='ordinal' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_income_x:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_income_x:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_income_x:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='bp - y change'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[y_change]' derivation='None' name='[none:y_change:qk]' pivot='key' type='quantitative' />
            <column caption='Y Change' datatype='real' name='[y_change]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='comm time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(average) mean commute time in mins&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[mean_commute]' derivation='Avg' name='[avg:mean_commute:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Mean Commute' datatype='real' datatype-customized='true' default-format='n#,##0.0;-#,##0.0' name='[mean_commute]' role='dimension' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='9'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' direction='ASC' />
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:mean_commute:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='30.0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:mean_commute:qk]' num-steps='6' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:mean_commute:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:mean_commute:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='commute'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mean commute time in minutes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='Mean Commute' datatype='real' datatype-customized='true' default-format='n#,##0.0;-#,##0.0' name='[mean_commute]' role='dimension' type='quantitative' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[mean_commute]' derivation='None' name='[none:mean_commute:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Year)]'>
            <groupfilter function='member' level='[year]' member='&quot;2010&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Year)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='30.0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]' max='60.0' min='0.0' num-steps='6' palette='gray_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]' value='average commute time'>
              <formatted-text>
                <run>average commute time</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='County'>
              <formatted-text>
                <run>County</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='counties_change'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_adj_change]' derivation='None' name='[none:rent_adj_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Rent Adj Change' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[rent_adj_change]' role='measure' type='quantitative' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='no station' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Exclusions (County,rent_adj_change,Tract Id,Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:county_name:nk]' />
                <groupfilter function='level-members' level='[none:rent_adj_change:qk]' />
                <groupfilter function='level-members' level='[none:tract_id:nk]' />
                <groupfilter function='level-members' level='[none:type:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:type:nk]' member='%null%' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Alameda&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:rent_adj_change:qk]' member='226.72064777327935' />
                        <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06001444100&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Contra Costa&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:rent_adj_change:qk]' member='481.39534883720927' />
                        <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06013360102&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:county_name:nk]' member='&quot;San Francisco&quot;' />
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:rent_adj_change:qk]' member='913.00000000000011' />
                        <groupfilter function='member' level='[none:tract_id:nk]' member='&quot;06075980600&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:county_name:nk]' />
                  <hierarchy name='[none:rent_adj_change:qk]' />
                  <hierarchy name='[none:tract_id:nk]' />
                  <hierarchy name='[none:type:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Alameda&quot;' />
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Contra Costa&quot;' />
              <groupfilter from='&quot;San Francisco&quot;' function='range' level='[none:county_name:nk]' to='&quot;Santa Clara&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' direction='ASC' />
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Exclusions (County,rent_adj_change,Tract Id,Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='rent change %' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' value='76' />
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' value='false' />
            <format attr='font-weight' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='text-align' id='refline1' value='center' />
            <format attr='wrap' id='refline1' value='on' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' z-order='1' />
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='value' probability='95' scope='per-cell' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>rent change%:&#9;</run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</rows>
        <cols>([federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk] / [federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='counties_rent'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_rent_adj_x]' derivation='None' name='[none:median_rent_adj_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='no station' />
              </aliases>
            </column>
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Alameda&quot;' />
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Contra Costa&quot;' />
              <groupfilter from='&quot;San Francisco&quot;' function='range' level='[none:county_name:nk]' to='&quot;Santa Clara&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;bart&quot;</bucket>
              <bucket>&quot;caltrain&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]'>
            <groupfilter function='member' level='[none:year:nk]' member='&quot;2016&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='average median rent in 2016' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='text-align' id='refline1' value='center' />
            <format attr='color' id='refline1' value='#555555' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='wrap' id='refline1' value='auto' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' z-order='1' />
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='value' probability='95' scope='per-cell' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.18591159582138062' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]</rows>
        <cols>([federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk] / [federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Book'>Click on a year to see the change over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='default' datatype='integer' name='[Calculation_350999341884243968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(0)' />
            </column>
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_350999341884243968]' derivation='User' name='[usr:Calculation_350999341884243968:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='low income'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Low income tracts (&lt;$60,000) in 2010</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='cities_tooltip' datatype='string' name='[Calculation_570690563683786757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([all_cities]) THEN [city] ELSE [all_cities] END' />
            </column>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column caption='All Cities' datatype='string' name='[all_cities]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_570690563683786757]' derivation='Attribute' name='[attr:Calculation_570690563683786757:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='Attribute' name='[attr:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_income_y]' derivation='Attribute' name='[attr:median_income_y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='Low' datatype='string' name='[low]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='not low income' />
                <alias key='&quot;low&quot;' value='low income' />
              </aliases>
            </column>
            <column caption='Median Income Y' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_y]' role='dimension' type='ordinal' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[low]' derivation='None' name='[none:low:nk]' pivot='key' type='nominal' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' value='City' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:median_income_y:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>median income: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:median_income_y:ok]&gt;</run>
                <run>&#10;county: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]&gt;</run>
                <run>&#10;city/cities: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='low y buckets'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Income in low income tracts over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[tract_id]' derivation='CountD' name='[ctd:tract_id:qk]' pivot='key' type='quantitative' />
            <column caption='Low' datatype='string' name='[low]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='not low income' />
                <alias key='&quot;low&quot;' value='low income' />
              </aliases>
            </column>
            <column aggregation='None' caption='median_income_x (bin) 2' datatype='integer' name='[median_income_x (bin) 2]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='4' formula='[median_income_x]' peg='0' size='10000' />
              <aliases>
                <alias key='1' value='10-20K' />
                <alias key='2' value='20-30K' />
                <alias key='3' value='30-40K' />
                <alias key='4' value='40-50K' />
                <alias key='5' value='50-60K' />
                <alias key='6' value='60-70K' />
                <alias key='7' value='70-80K' />
                <alias key='8' value='80-90K' />
                <alias key='9' value='90-100K' />
                <alias key='10' value='100-110K' />
                <alias key='11' value='110-120K' />
              </aliases>
            </column>
            <column caption='Median Income X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_x]' role='dimension' type='ordinal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[low]' derivation='None' name='[none:low:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_income_x (bin) 2]' derivation='None' name='[none:median_income_x (bin) 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]'>
            <groupfilter function='member' level='[none:low:nk]' member='&quot;low&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='# of tracts' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok]' value='37' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#898989' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]</rows>
        <cols>([federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk] / [federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok])</cols>
        <show-full-range>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[med Y for low (bin)]</column>
          <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[median_income_x (bin) 2]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='map y change'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Gentrification in low income tracts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='Calculation1' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Calculation_1289085075229982723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [low] == &apos;low&apos; THEN [y_change] else NULL END' />
            </column>
            <column caption='cities_tooltip' datatype='string' name='[Calculation_570690563683786757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([all_cities]) THEN [city] ELSE [all_cities] END' />
            </column>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column caption='All Cities' datatype='string' name='[all_cities]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_570690563683786757]' derivation='Attribute' name='[attr:Calculation_570690563683786757:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='Attribute' name='[attr:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_income_y]' derivation='Attribute' name='[attr:median_income_y:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='Low' datatype='string' name='[low]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='not low income' />
                <alias key='&quot;low&quot;' value='low income' />
              </aliases>
            </column>
            <column caption='Median Income Y' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_y]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1289085075229982723]' derivation='None' name='[none:Calculation_1289085075229982723:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1289085075229982723]' derivation='Sum' name='[sum:Calculation_1289085075229982723:qk]' pivot='key' type='quantitative' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Y Change' datatype='real' name='[y_change]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]' included-values='in-range-or-null'>
            <min>-46.123236095380946</min>
            <max>196.34462635759442</max>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]' max='200.0' min='-50.0' num-steps='10' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' value='City'>
              <formatted-text>
                <run>City</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]' value='Median income increase'>
              <formatted-text>
                <run>Median income increase</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:median_income_y:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[sum:Calculation_1289085075229982723:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>income change: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]&gt;</run>
                <run>&#10;county: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]&gt;</run>
                <run>&#10;city/cities: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='median rent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(average) median rent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[median_rent_adj_x]' derivation='Avg' name='[avg:median_rent_adj_x:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_rent_adj_x:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_rent_adj_x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='median rent low'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(average) median rent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[median_rent_adj_x]' derivation='Avg' name='[avg:median_rent_adj_x:qk]' pivot='key' type='quantitative' />
            <column caption='Low' datatype='string' name='[low]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='not low income' />
                <alias key='&quot;low&quot;' value='low income' />
              </aliases>
            </column>
            <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
            <column-instance column='[low]' derivation='None' name='[none:low:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]'>
            <groupfilter function='member' level='[none:low:nk]' member='&quot;low&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_rent_adj_x:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_rent_adj_x:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='median y'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(average) median income&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[median_income_x]' derivation='Avg' name='[avg:median_income_x:qk]' pivot='key' type='quantitative' />
            <column caption='Low' datatype='string' name='[low]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='not low income' />
                <alias key='&quot;low&quot;' value='low income' />
              </aliases>
            </column>
            <column caption='Median Income X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_x]' role='dimension' type='ordinal' />
            <column-instance column='[low]' derivation='None' name='[none:low:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]'>
            <groupfilter function='member' level='[none:low:nk]' member='&quot;low&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' direction='ASC' />
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_income_x:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_income_x:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#898989' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_income_x:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='over 1500'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% of rented houses with a rent over $1,500</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='calc_over_1500' datatype='real' default-format='p0%' name='[Calculation_570690563595071490]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='sum([over_1500]) / sum([rented_units])' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Over 1500' datatype='real' datatype-customized='true' name='[over_1500]' role='dimension' type='ordinal' />
            <column caption='Rented Units' datatype='real' datatype-customized='true' name='[rented_units]' role='dimension' type='ordinal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_570690563595071490]' derivation='User' name='[usr:Calculation_570690563595071490:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]'>
            <groupfilter function='level-members' level='[tract_id]' user:ui-action-filter='[Action8]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Tract Id)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_570690563595071490:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_570690563595071490:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='overall_change'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>5 counties</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_adj_change]' derivation='None' name='[none:rent_adj_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Rent Adj Change' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[rent_adj_change]' role='measure' type='quantitative' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='no station' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Alameda&quot;' />
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Contra Costa&quot;' />
              <groupfilter from='&quot;San Francisco&quot;' function='range' level='[none:county_name:nk]' to='&quot;Santa Clara&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' direction='ASC' />
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='rent change %' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' field-type='quantitative' major-origin='0.0' major-spacing='50.0' max='140.0' min='-65.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' value='false' />
            <format attr='font-weight' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='wrap' id='refline1' value='on' />
            <format attr='text-align' id='refline1' value='center' />
            <format attr='color' id='refline1' value='#e15759' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='font-size' id='refline1' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' z-order='1' />
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='value' probability='95' scope='per-cell' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' z-order='2' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>rent change%:&#9;</run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]&gt;</run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='overall_rent'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Median Rent Adj X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent_adj_x]' role='dimension' type='quantitative' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_rent_adj_x]' derivation='None' name='[none:median_rent_adj_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='no station' />
              </aliases>
            </column>
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Alameda&quot;' />
              <groupfilter function='member' level='[none:county_name:nk]' member='&quot;Contra Costa&quot;' />
              <groupfilter from='&quot;San Francisco&quot;' function='range' level='[none:county_name:nk]' to='&quot;Santa Clara&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;bart&quot;</bucket>
              <bucket>&quot;caltrain&quot;</bucket>
              <bucket>%null%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]'>
            <groupfilter function='member' level='[none:year:nk]' member='&quot;2016&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='average median rent in 2016' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' field-type='quantitative' max='2175.0' min='200.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='wrap' id='refline1' value='auto' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='text-align' id='refline1' value='center' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='font-size' id='refline1' value='10' />
            <format attr='color' id='refline1' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' z-order='1' />
            <reference-line axis-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='value' probability='95' scope='per-cell' value-column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.18591159582138062' />
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='overview rent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median rent in 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_counties' name='federated.05t5ue91e38x1p14vzprt1yk1ekm' />
          </datasources>
          <datasource-dependencies datasource='federated.05t5ue91e38x1p14vzprt1yk1ekm'>
            <column caption='median rent' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[median_rent]' derivation='None' name='[none:median_rent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_rent]' derivation='Sum' name='[sum:median_rent:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;country&quot;' value='United States' />
                <alias key='&quot;sfba&quot;' value='county in SFBA' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[Set 1]' />
          <sort class='computed' column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]' direction='DESC' using='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:median_rent:qk]' />
          <slices>
            <column>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]' field-type='quantitative' max='2194' min='700' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='wrap' field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]' />
              <text column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]' />
              <text column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run> &lt;</run>
                <run>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]</run>
                <run>&gt; &lt;</run>
                <run>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]</rows>
        <cols>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='rent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median rent* per tract over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='adjusted median rent' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_350999341889110017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [median_rent] &gt;= 2000 THEN 2000 ELSE [median_rent] END' />
            </column>
            <column caption='cities_tooltip' datatype='string' name='[Calculation_570690563683786757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([all_cities]) THEN [city] ELSE [all_cities] END' />
            </column>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column caption='All Cities' datatype='string' name='[all_cities]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_570690563683786757]' derivation='Attribute' name='[attr:Calculation_570690563683786757:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='Attribute' name='[attr:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='median rent' datatype='real' datatype-customized='true' name='[median_rent]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_350999341889110017]' derivation='None' name='[none:Calculation_350999341889110017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Year)]'>
            <groupfilter function='member' level='[year]' member='&quot;2010&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]'>
            <groupfilter function='level-members' level='[attr:county_name:nk]' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Year)]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]' max='2000.0' min='250.0' num-steps='7' palette='gray_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='County'>
              <formatted-text>
                <run>County</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' value='Tract id'>
              <formatted-text>
                <run>Tract id</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>median rent:&#9;</run>
                <run bold='true'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>county: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>city/cities:</run>
                <run bold='true' fontcolor='#000000'> &lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='rent change counties'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median rent change between 2010 and 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_counties' name='federated.05t5ue91e38x1p14vzprt1yk1ekm' />
          </datasources>
          <datasource-dependencies datasource='federated.05t5ue91e38x1p14vzprt1yk1ekm'>
            <column aggregation='CountD' caption='name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[rent_change]' role='measure' type='quantitative' />
            <column-instance column='[rent_change]' derivation='Sum' name='[sum:rent_change:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;country&quot;' value='United States' />
                <alias key='&quot;sfba&quot;' value='county in SFBA' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='computed' column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]' direction='ASC' using='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:rent_change:qk]' />
          <filter class='categorical' column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:type:nk]' member='&quot;country&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;sfba&quot;' />
              <groupfilter function='member' level='[none:type:nk]' member='&quot;state&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:rent_change:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]' />
              <text column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:rent_change:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[sum:rent_change:qk]</rows>
        <cols>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='rent changes'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% rent change between 2010 to 2016&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='cities_tooltip' datatype='string' name='[Calculation_570690563683786757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([all_cities]) THEN [city] ELSE [all_cities] END' />
            </column>
            <column caption='GEOID (Census Tract Shapefile Data)' datatype='string' name='[GEOID]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='PointLatitude (Census Tract Shapefile Data)' datatype='real' name='[PointLatitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='PointLongitude (Census Tract Shapefile Data)' datatype='real' name='[PointLongitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Sum' caption='PointOrder (Census Tract Shapefile Data)' datatype='integer' name='[PointOrder]' role='dimension' type='ordinal' />
            <column caption='SubPolygonId (Census Tract Shapefile Data)' datatype='integer' name='[SubPolygonId]' role='dimension' type='ordinal' />
            <column caption='All Cities' datatype='string' name='[all_cities]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_570690563683786757]' derivation='Attribute' name='[attr:Calculation_570690563683786757:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='Attribute' name='[attr:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_adj_change]' derivation='Attribute' name='[attr:rent_adj_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLatitude]' derivation='Avg' name='[avg:PointLatitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PointLongitude]' derivation='Avg' name='[avg:PointLongitude:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='Max X' datatype='string' name='[max_x]' role='dimension' type='nominal' />
            <column-instance column='[GEOID]' derivation='None' name='[none:GEOID:nk]' pivot='key' type='nominal' />
            <column-instance column='[PointOrder]' derivation='None' name='[none:PointOrder:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SubPolygonId]' derivation='None' name='[none:SubPolygonId:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[max_x]' derivation='None' name='[none:max_x:nk]' pivot='key' type='nominal' />
            <column-instance column='[rent_adj_change]' derivation='None' name='[none:rent_adj_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
            <column caption='Rent Adj Change' datatype='real' default-format='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' name='[rent_adj_change]' role='measure' type='quantitative' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' included-values='in-range'>
            <min>-52.87686996547756</min>
            <max>913.00000000000011</max>
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]'>
            <groupfilter function='level-members' level='[none:tract_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]' field-type='quantitative' fold='true' projection='EPSG:3857' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' max='150.0' min='-50.0' num-steps='10' palette='red_black_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:rent_adj_change:qk]' max='200.0' min='-50.0' num-steps='10' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='false' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
            <format attr='map-style' value='tableau-light-gray' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>rent change: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989'>county: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989'>city/cities: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>rent change: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989'>county: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989'>city/cities: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='96' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:max_x:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:GEOID:nk]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:SubPolygonId:ok]' />
              <lod column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' />
              <path column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:PointOrder:ok]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]' />
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:rent_adj_change:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>rent change: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:rent_adj_change:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989'>county: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:county_name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989'>city/cities: </run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:Calculation_570690563683786757:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='188' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk] + [federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk])</rows>
        <cols>([federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk] + [federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk])</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='166'>
            <formatted-text>
              <run fontcolor='#555555' fontsize='9'>Blue tracts are tracts were the rent was $2,000 (max recorded) in 2010, therefore these tracts show a 0% increase. </run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-13610569.003716802'>
                  <node-reference>
                    <axis>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4633708.0372598153'>
                  <node-reference>
                    <axis>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-122.26582161602211' v='38.383246359711258' />
              </visual-coordinate>
            </point>
            <body x='271' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='rented houses'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% of rented houses with a rent of $1,500 or higher</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column caption='default' datatype='integer' name='[Calculation_350999341884243968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='max(0)' />
            </column>
            <column caption='calc_over_1500' datatype='real' default-format='p0%' name='[Calculation_570690563595071490]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='sum([over_1500]) / sum([rented_units])' />
            </column>
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Over 1500' datatype='real' datatype-customized='true' name='[over_1500]' role='dimension' type='ordinal' />
            <column caption='Rented Units' datatype='real' datatype-customized='true' name='[rented_units]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_350999341884243968]' derivation='User' name='[usr:Calculation_350999341884243968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_570690563595071490]' derivation='User' name='[usr:Calculation_570690563595071490:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_570690563595071490:qk]' />
              <text column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_570690563595071490:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#336633' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='sp - y - median y'>
      <table>
        <view>
          <datasources>
            <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
          </datasources>
          <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
            <column-instance column='[tract_id]' derivation='Attribute' name='[attr:tract_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column caption='Median Income X' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income_x]' role='dimension' type='ordinal' />
            <column-instance column='[median_income_x]' derivation='None' name='[none:median_income_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[y_change]' derivation='None' name='[none:y_change:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:nk]' pivot='key' type='nominal' />
            <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
            <column caption='Y Change' datatype='real' name='[y_change]' role='measure' type='quantitative' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]'>
            <groupfilter function='member' level='[io:Set 2:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]'>
            <groupfilter function='member' level='[none:year:nk]' member='&quot;2010&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:Set 2:nk]</column>
            <column>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]' field-type='quantitative' major-origin='0.0' major-spacing='10.0' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</rows>
        <cols>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='y vs rent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median income vs median rent in 2016</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_counties' name='federated.05t5ue91e38x1p14vzprt1yk1ekm' />
          </datasources>
          <datasource-dependencies datasource='federated.05t5ue91e38x1p14vzprt1yk1ekm'>
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column caption='median income' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_income]' role='measure' type='quantitative' />
            <column caption='median rent' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[median_rent]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[median_income]' derivation='None' name='[none:median_income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_rent]' derivation='None' name='[none:median_rent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;country&quot;' value='United States' />
                <alias key='&quot;sfba&quot;' value='county in SFBA' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[Exclusions (median income,median rent,Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:median_income:qk]' />
                <groupfilter function='level-members' level='[none:median_rent:qk]' />
                <groupfilter function='level-members' level='[none:type:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:median_income:qk]' member='55370' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:median_rent:qk]' member='953' />
                  <groupfilter function='member' level='[none:type:nk]' member='&quot;county&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]' included-values='in-range'>
            <min>4</min>
            <max>1861</max>
          </filter>
          <filter class='categorical' column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]'>
            <groupfilter from='&quot;country&quot;' function='range' level='[none:type:nk]' to='&quot;sfba&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]</column>
            <column>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]</column>
            <column>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[Exclusions (median income,median rent,Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]' />
              <shape column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]' />
              <tooltip column='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[attr:name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>county: &#9;</run>
                <run bold='true' fontcolor='#000000'>&lt;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[attr:name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>median income:&#9;</run>
                <run bold='true'>&lt;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_income:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>median rent:&#9;</run>
                <run bold='true'>&lt;[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.69165748357772827' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]</rows>
        <cols>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_income:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Intro'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='3' name='SFBA map' show-title='false' w='49404' x='49998' y='1048'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='97904' id='4' type='text' w='49400' x='598' y='1048'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='22'>Living in the San Francisco Bay Area</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run bold='true' fontalignment='1' fontsize='20'>2010 - 2016</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontsize='20' italic='true'>Increasing rents &amp; commute times</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='232' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='1' param='vert' removable='false' type='layout-flow' w='98804' x='598' y='1048'>
            <zone fixed-size='141' h='18480' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98804' x='598' y='1048' />
            <zone h='79424' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98804' x='598' y='19528'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Introduction' captured-sheet='Intro' id='4'>
                    <capturedDeltas>
                      <dashboard name='Intro'>
                        <zone id='4'>
                          <formatted-text>
                            <run bold='true' fontalignment='1' fontsize='22'>Living in the San Francisco Bay Area</run>
                            <run fontalignment='1'>Æ&#10;</run>
                            <run bold='true' fontalignment='1' fontsize='20'>2010 - 2016</run>
                            <run fontalignment='1'>Æ&#10;</run>
                            <run fontalignment='1' fontsize='20' italic='true'>Increasing rents, commuting time</run>
                            <run fontalignment='1'>Æ&#10;</run>
                            <run fontalignment='1' fontsize='20' italic='true'>and gentrification</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                      <worksheet name='SFBA map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Median rents in the SFBA counties are amongst the highest in the USA.' captured-sheet='s' id='3' />
                  <story-point caption='Rents are on the high side even when median incomes are taken into account, although median incomes are also high.' captured-sheet='d - y vs rent' id='5' />
                  <story-point caption='6 of the 9 SFBA counties saw rent increases ~1.5 times the national median rent change, 2 even 2 times as high.' captured-sheet='d - rent counties' id='6' />
                  <story-point caption='Look up your tract id (neighborhood) &amp; to see the data for your own neighborhood!' captured-sheet='tract id lookup' id='10'>
                    <capturedDeltas>
                      <worksheet name='Sheet 48'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:county_id:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:county_id:qk]</field>
                                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>9</value>
                                <value>0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='High median rents have spread to more and more SFBA tracts (neigborhoods) over time.' captured-sheet='d - rent' id='8'>
                    <capturedDeltas>
                      <worksheet name='filter'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
                                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;2013&quot;</value>
                                <value>0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='rent'>
                        <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[Action (Year)]'>
                          <groupfilter function='member' level='[year]' member='&quot;2013&quot;' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Most tracts experienced a rent increase (grey), except some tract in the outer regions. Average median rent rose to $1,633 in 2016 with 55% of rents being  over $1,500.' captured-sheet='d - rent changes' id='9'>
                    <capturedDeltas>
                      <dashboard name='d - rent changes'>
                        <zone id='10'>
                          <formatted-text>
                            <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Mean commute time has increased over time (darker). Could be caused by people commute longer to find cheaper rents. ' captured-sheet='d - commute' id='2'>
                    <capturedDeltas>
                      <worksheet name='commute'>
                        <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
                          <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
                          <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]'>
                          <groupfilter function='level-members' level='[none:county_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Most tracts experienced an increase in commute time. In minutes the avearge increas is only 2.6 mins, but almost half of the people have to commute more than 30 mins. ' captured-sheet='d - % comm' id='11' />
                  <story-point caption='Longer commutes might affect the higher rent changes in tracts which have bart/caltrain stations. Median rents are quite higher in caltrain tracts.' captured-sheet='d - new transport' id='13' />
                  <story-point caption='Of the 432 tracts that had a median income &lt; $60,000 in 2010 only 183 tracts still fall in this category 6 years later. ' captured-sheet='d - low income' id='14'>
                    <capturedDeltas>
                      <worksheet name='low income'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLatitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:PointLongitude:qk]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Gentrification is visible. Some tracts are having almost twice the income (and increasing rents as by effect). Look at San Francisco, Oakland,  and Martinez.' captured-sheet='d - y change' id='15'>
                    <capturedDeltas>
                      <worksheet name='median y'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - % comm'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
        <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='5' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='3' type='layout-basic' w='55082' x='598' y='1048'>
              <zone h='97904' id='1' name='% comm' w='55082' x='598' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='585' h='97904' id='4' is-fixed='true' param='vert' type='layout-flow' w='43722' x='55680' y='1048'>
              <zone fixed-size='26' forceUpdate='true' h='4456' id='13' is-fixed='true' type='text' w='43722' x='55680' y='1048'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='32' h='5242' id='6' is-fixed='true' mode='checkdropdown' name='% comm' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='43722' x='55680' y='5504'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4193' id='7' is-fixed='true' mode='checkdropdown' name='% comm' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' w='43722' x='55680' y='10746'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4193' id='12' is-fixed='true' mode='pattern' name='% comm' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' w='43722' x='55680' y='14939'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26606' id='9' name='comm time' w='43722' x='55680' y='19132'>
                <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26606' id='10' name='&gt;30 mins' w='43722' x='55680' y='45738'>
                <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26606' id='11' name='&gt;60 mins' w='43722' x='55680' y='72344'>
                <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8676' id='8' name='% comm' pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]' show-title='false' type='color' w='11761' x='1346' y='88584'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - boxplots'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='5' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='3' type='layout-basic' w='98804' x='598' y='1048'>
              <zone h='48952' id='7' name='counties_change' show-title='false' w='79217' x='20185' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48952' id='8' name='counties_rent' show-title='false' w='79217' x='20185' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48952' id='10' name='overall_rent' show-title='false' w='19587' x='598' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48952' id='11' name='overall_change' w='19587' x='598' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='10731' id='9' type='text' w='10754' x='48743' y='5137'>
          <formatted-text>
            <run bold='true' fontcolor='#e15759'>SF tracts with a Caltrain station already have the max rent of $2,000, therefore showing a 0% rent</run>
            <run fontcolor='#e15759'>Æ </run>
            <run bold='true' fontcolor='#e15759'>increase.</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - commute'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
        <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='12' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='5' param='horz' type='layout-flow' w='55530' x='598' y='1048'>
              <zone h='97904' id='3' type='layout-basic' w='55530' x='598' y='1048'>
                <zone h='14047' id='8' name='filter' w='55530' x='598' y='84905'>
                  <layout-cache cell-count-w='3' minheight='143' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='83857' id='10' name='commute' w='55530' x='598' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='579' h='97904' id='11' is-fixed='true' param='vert' type='layout-flow' w='43274' x='56128' y='1048'>
              <zone h='4718' id='18' type='text' w='43274' x='56128' y='1048'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6815' id='13' mode='checkdropdown' name='commute' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='43274' x='56128' y='5766'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='49' h='7470' id='14' is-fixed='true' mode='checkdropdown' name='commute' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' w='43274' x='56128' y='12581'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='102' h='14416' id='17' is-fixed='true' mode='pattern' name='commute' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' w='43274' x='56128' y='20051'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='64485' id='16' name='balls commute' w='43274' x='56128' y='34467'>
                <layout-cache cell-count-w='3' minheight='164' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7529' id='15' name='commute' pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]' show-title='false' type='color' w='15623' x='1404' y='74867'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - house prices'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='12' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone fixed-size='1471' h='97904' id='5' is-fixed='true' param='horz' type='layout-flow' w='86846' x='598' y='1048'>
              <zone fixed-size='473' h='97904' id='4' is-fixed='true' param='horz' type='layout-flow' w='86846' x='598' y='1048'>
                <zone h='97904' id='16' name='Sheet 37' w='67789' x='598' y='1048'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='97904' id='9' name='Sheet 32' w='19057' x='68387' y='1048'>
                  <layout-cache cell-count-w='3' minheight='304' non-cell-size-w='75' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97904' id='11' is-fixed='true' param='vert' type='layout-flow' w='11958' x='87444' y='1048'>
              <zone h='6815' id='17' mode='checkdropdown' name='Sheet 37' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='11958' x='87444' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6815' id='18' mode='checkdropdown' name='Sheet 37' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' w='11958' x='87444' y='7863'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8519' id='19' name='Sheet 37' pane-specification-id='2' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:price_adj_change:qk]' type='color' w='11958' x='87444' y='14678'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - low income'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
        <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='5' param='horz' type='layout-flow' w='43899' x='55503' y='1048'>
            <zone fixed-size='579' h='97904' id='4' is-fixed='true' param='vert' type='layout-flow' w='43899' x='55503' y='1048'>
              <zone forceUpdate='true' h='4718' id='16' type='text' w='43899' x='55503' y='1048'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6815' id='6' mode='checkdropdown' name='low income' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='43899' x='55503' y='5766'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6815' id='12' mode='checkdropdown' name='low income' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' w='43899' x='55503' y='12581'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='70' h='10222' id='13' is-fixed='true' mode='pattern' name='low income' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' w='43899' x='55503' y='19396'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='69334' id='15' name='Sheet 43' w='43899' x='55503' y='29618'>
                <layout-cache minheight='204' type-h='scalable' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='97904' id='11' name='low income' w='54905' x='598' y='1048'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9830' id='14' name='low income' pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]' show-title='false' type='color' w='11410' x='3667' y='83093'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - new transport'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='7' param='horz' type='layout-flow' w='49438' x='49964' y='1048'>
            <zone h='97904' id='5' type='layout-basic' w='24326' x='49964' y='1048'>
              <zone h='48952' id='1' name='Sheet 46' w='24326' x='49964' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48952' id='3' name='Sheet 47' show-title='false' w='24326' x='49964' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='336' h='97904' id='6' is-fixed='true' param='vert' type='layout-flow' w='25112' x='74290' y='1048'>
              <zone h='8387' id='11' type='text' w='25112' x='74290' y='1048'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6815' id='8' mode='checkdropdown' name='Sheet 42' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='25112' x='74290' y='9435'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6815' id='9' mode='checkdropdown' name='Sheet 42' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' w='25112' x='74290' y='16250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='97904' id='4' name='Sheet 42' w='49366' x='598' y='1048'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='12787' id='10' name='Sheet 42' pane-specification-id='1' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' show-title='false' type='color' w='9385' x='1718' y='79167'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - overview rent'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='1' name='overview rent' w='98804' x='598' y='1048'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - rent'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
        <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='11' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='9' type='layout-basic' w='55605' x='598' y='1048'>
              <zone h='17432' id='14' name='filter' w='55605' x='598' y='81520'>
                <layout-cache cell-count-w='3' minheight='143' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='80472' id='21' name='rent' w='55605' x='598' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='578' h='97904' id='18' is-fixed='true' type='layout-basic' w='43199' x='56203' y='1048'>
              <zone h='88926' id='10' param='vert' type='layout-flow' w='43199' x='56203' y='1048'>
                <zone forceUpdate='true' h='4718' id='25' type='text' w='43199' x='56203' y='1048'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='52' h='7863' id='12' is-fixed='true' mode='checkdropdown' name='# rent tracts' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='43199' x='56203' y='5766'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='8519' id='22' is-fixed='true' mode='checkdropdown' name='rent' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' w='43199' x='56203' y='13629'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='80' h='11533' id='24' is-fixed='true' mode='pattern' name='rent' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' w='43199' x='56203' y='22148'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='56293' id='20' name='# rent tracts' w='43199' x='56203' y='33681'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='8978' id='19' param='vert' type='layout-flow' w='43199' x='56203' y='89974'>
                <zone fixed-size='88' forceUpdate='true' h='8978' id='17' is-fixed='true' type='text' w='43199' x='56203' y='89974'>
                  <formatted-text>
                    <run>Æ&#10;</run>
                    <run fontsize='8'>*Median rents higher than $2,000 were marked as $2,000+ for 2010 and 2013. In order to compare 2016 all median rents for 2016 higher than $2,000 are marked as $2,000.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8908' id='23' name='rent' pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]' type='color' w='15415' x='1502' y='71121'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - rent changes'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
        <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='5' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='3' type='layout-basic' w='55381' x='598' y='1048'>
              <zone h='97904' id='12' name='rent changes' w='55381' x='598' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='581' h='97904' id='4' is-fixed='true' param='vert' type='layout-flow' w='43423' x='55979' y='1048'>
              <zone forceUpdate='true' h='4718' id='10' type='text' w='43423' x='55979' y='1048'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4193' id='7' is-fixed='true' mode='checkdropdown' name='rent changes' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='43423' x='55979' y='5766'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4193' id='6' is-fixed='true' mode='checkdropdown' name='rent changes' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' w='43423' x='55979' y='9959'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4193' id='14' is-fixed='true' mode='dropdown' name='rent changes' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' w='43423' x='55979' y='14152'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40303' id='9' name='median rent' w='43423' x='55979' y='18345'>
                <layout-cache cell-count-w='3' minheight='164' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40303' id='11' name='over 1500' w='43423' x='55979' y='58648'>
                <layout-cache cell-count-w='3' minheight='164' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8165' id='13' name='rent changes' pane-specification-id='1' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' show-title='false' type='color' w='17654' x='1137' y='87699'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - rent counties'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='5' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='3' type='layout-basic' w='98804' x='598' y='1048'>
              <zone h='97904' id='6' name='rent change counties' w='98804' x='598' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - y change'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='all (all_newest)' name='federated.0mkjoac1rng4a71c93y7b1sobakz' />
      </datasources>
      <datasource-dependencies datasource='federated.0mkjoac1rng4a71c93y7b1sobakz'>
        <column caption='Calculation1' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Calculation_1289085075229982723]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='IF [low] == &apos;low&apos; THEN [y_change] else NULL END' />
        </column>
        <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column caption='County' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column-instance column='[Calculation_1289085075229982723]' derivation='None' name='[none:Calculation_1289085075229982723:qk]' pivot='key' type='quantitative' />
        <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
        <column-instance column='[county_name]' derivation='None' name='[none:county_name:nk]' pivot='key' type='nominal' />
        <column-instance column='[tract_id]' derivation='None' name='[none:tract_id:nk]' pivot='key' type='nominal' />
        <column caption='Tract Id' datatype='string' name='[tract_id]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='5' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='3' type='layout-basic' w='58221' x='598' y='1048'>
              <zone h='89122' id='1' name='map y change' w='58221' x='598' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8782' id='12' name='map y change' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]' type='filter' w='58221' x='598' y='90170'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='543' h='97904' id='4' is-fixed='true' param='vert' type='layout-flow' w='40583' x='58819' y='1048'>
              <zone h='8387' id='13' type='text' w='40583' x='58819' y='1048'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='15'>Choose a county, city, tract id or click on the map to zoom in. </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='26' h='4456' id='6' is-fixed='true' mode='checkdropdown' name='map y change' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' w='40583' x='58819' y='9435'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4193' id='7' is-fixed='true' mode='checkdropdown' name='map y change' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' w='40583' x='58819' y='13891'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='24' h='4193' id='8' is-fixed='true' mode='pattern' name='map y change' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' w='40583' x='58819' y='18084'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38337' id='10' name='median y' w='40583' x='58819' y='22277'>
                <layout-cache cell-count-w='3' minheight='164' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38337' id='11' name='median rent low' w='40583' x='58819' y='60614'>
                <layout-cache cell-count-w='3' minheight='164' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6553' id='9' name='map y change' pane-specification-id='1' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]' show-title='false' type='color' w='19478' x='2119' y='77851'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='d - y vs rent'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='5' param='horz' type='layout-flow' w='98804' x='598' y='1048'>
            <zone h='97904' id='3' type='layout-basic' w='98804' x='598' y='1048'>
              <zone h='97904' id='1' name='y vs rent' w='98804' x='598' y='1048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13506' id='6' name='y vs rent' pane-specification-id='2' param='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]' show-title='false' type='color' w='16364' x='12095' y='15948'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='s'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='10' param='horz' type='layout-flow' w='98942' x='529' y='1048'>
            <zone h='97904' id='5' param='horz' type='layout-flow' w='98942' x='529' y='1048'>
              <zone h='97904' id='3' type='layout-basic' w='98942' x='529' y='1048'>
                <zone h='97904' id='7' name='overview rent' w='98942' x='529' y='1048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='tract id lookup'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_3' value='left' />
          <format attr='vertical-align' id='dash-text_3' value='top' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone forceUpdate='true' h='89121' id='3' type='text' w='43797' x='55605' y='9831'>
            <formatted-text>
              <run fontsize='14'>1. Enter your address in the form to the left or on </run>
              <run auto-url='true' fontsize='14' hyperlink='tabdoc:load-url url=&amp;quot;https://geocoding.geo.census.gov/geocoder/geographies/address?form&amp;quot;'>https://geocoding.geo.census.gov/geocoder/geographies/address?form</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>2. Click </run>
              <run bold='true' fontsize='14'>FIND</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>3. Scroll down until you see </run>
              <run bold='true' fontsize='14'>Census Tracts:</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>4. Copy the 11 digit number after </run>
              <run bold='true' fontsize='14'>GEOID:</run>
              <run fontsize='14'>, this is your neighborhood id</run>
              <run>Æ&#10;&#10;</run>
              <run fontsize='14'>5.  Add your neighborhood id to the filters throughout the presentation</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='8783' id='4' type='text' w='98804' x='598' y='1048'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='18'>Look up the id and look at the data for your neighborhood (tract).</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='' h='89121' id='6' param='https://geocoding.geo.census.gov/geocoder/geographies/address?form' type='web' w='52616' x='598' y='9831'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='89121' id='7' type='empty' w='2391' x='53214' y='9831'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' name='filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='d - overview rent'>
      <viewpoints>
        <viewpoint name='overview rent'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='overview rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Intro'>
      <viewpoints>
        <viewpoint name='SFBA map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='worksheet' name='SFBA map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='d - rent counties'>
      <viewpoints>
        <viewpoint name='rent change counties'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Tablet'>
        <device name='Medium Desktop Monitor' type='Desktop' />
        <device name='iPad' type='Tablet' />
      </device-preview>
    </window>
    <window class='worksheet' name='rent change counties'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:Calculation_2117043719412518912:nk]</field>
            <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:name:nk]</field>
            <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='d - rent'>
      <viewpoints>
        <viewpoint name='# rent tracts'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='filter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='rent'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='25' />
    </window>
    <window class='worksheet' name='rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_350999341889110017:qk]' type='color' />
          </strip>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Set 2]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='# rent tracts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='rented houses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='d - commute'>
      <viewpoints>
        <viewpoint name='balls commute'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='commute'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='filter'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;2010&quot;</value>
                  <value>0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='worksheet' name='commute'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='balls commute'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='d - y vs rent'>
      <viewpoints>
        <viewpoint name='y vs rent'>
          <zoom type='entire-view' />
          <highlight field='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='y vs rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_income:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_income:qk]</field>
                  <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:median_rent:qk]</field>
                  <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[none:type:nk]</field>
                  <field>[federated.05t5ue91e38x1p14vzprt1yk1ekm].[attr:name:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>55370</value>
                <value>953</value>
                <value>&quot;county&quot;</value>
                <value>&quot;Santa Fe, NM&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='dashboard' name='d - rent changes'>
      <viewpoints>
        <viewpoint name='median rent'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='over 1500'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='rent changes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='rent changes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' />
            <card pane-specification-id='1' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='median rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='over 1500'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='d - % comm'>
      <viewpoints>
        <viewpoint name='% comm'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='&gt;30 mins'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='&gt;60 mins'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='comm time'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='% comm'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' />
            <card mode='pattern' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:comm_change:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='comm time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='&gt;30 mins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='&gt;60 mins'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='tract id lookup'>
      <viewpoints />
      <active id='3' />
    </window>
    <window class='dashboard' name='d - house prices'>
      <viewpoints>
        <viewpoint name='Sheet 32'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 37'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
    </window>
    <window class='worksheet' name='Sheet 37'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:max_y:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:price_adj_change:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 32'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 42'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='d - boxplots'>
      <viewpoints>
        <viewpoint name='counties_change'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='counties_rent'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='overall_change'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='overall_rent'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='worksheet' name='counties_rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='overall_rent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 47'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_rent_adj_x:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='counties_change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='overall_change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 46'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>132.8358208955224</value>
                <value>&quot;06085512035&quot;</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>175.86206896551724</value>
                <value>&quot;06055201402&quot;</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>226.72064777327935</value>
                <value>&quot;06001444100&quot;</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:rent_adj_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>131.74971031286211</value>
                <value>&quot;06001430400&quot;</value>
                <value>%null%</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='dashboard' name='d - new transport'>
      <viewpoints>
        <viewpoint name='Sheet 42'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 46' />
        <viewpoint name='Sheet 47' />
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='sp - y - median y'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>58977.0</value>
                <value>71.44140936297201</value>
                <value>&quot;06085513500&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>56812.0</value>
                <value>65.237977891994646</value>
                <value>&quot;06075040100&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>53542.0</value>
                <value>114.97142430241681</value>
                <value>&quot;06075011000&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52314.0</value>
                <value>63.078716978246739</value>
                <value>&quot;06001400300&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52305.0</value>
                <value>61.902303795048276</value>
                <value>&quot;06085506301&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>52076.0</value>
                <value>60.630616790844151</value>
                <value>&quot;06001400500&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>50980.0</value>
                <value>61.522165555119656</value>
                <value>&quot;06085500800&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>49506.0</value>
                <value>70.56922393245263</value>
                <value>&quot;06075011100&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>49113.0</value>
                <value>61.163032191069576</value>
                <value>&quot;06001436700&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>43212.0</value>
                <value>76.936961955012492</value>
                <value>&quot;06001423400&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>43029.0</value>
                <value>68.491017685746826</value>
                <value>&quot;06001422100&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>41287.0</value>
                <value>65.57754256787851</value>
                <value>&quot;06055200201&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40539.0</value>
                <value>75.645674535632352</value>
                <value>&quot;06001401100&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>40000.0</value>
                <value>164.285</value>
                <value>&quot;06001981900&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>37143.0</value>
                <value>64.528982580836228</value>
                <value>&quot;06001400800&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>34645.0</value>
                <value>65.91138692452013</value>
                <value>&quot;06081610601&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>31719.0</value>
                <value>61.367004003909329</value>
                <value>&quot;06001403100&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>30080.0</value>
                <value>64.803856382978722</value>
                <value>&quot;06081610202&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>29408.0</value>
                <value>84.538220892274211</value>
                <value>&quot;06085501600&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>28966.0</value>
                <value>85.027273354967889</value>
                <value>&quot;06075012100&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>28551.0</value>
                <value>66.915344471296976</value>
                <value>&quot;06001407400&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>28269.0</value>
                <value>60.599950475786201</value>
                <value>&quot;06001402200&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>26311.0</value>
                <value>85.865227471399791</value>
                <value>&quot;06001401500&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>24375.0</value>
                <value>60.332307692307694</value>
                <value>&quot;06075012302&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>23165.0</value>
                <value>116.80552557737967</value>
                <value>&quot;06075011700&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>18908.0</value>
                <value>113.94647768140469</value>
                <value>&quot;06075012402&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>12338.0</value>
                <value>196.34462635759442</value>
                <value>&quot;06013316000&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[attr:tract_id:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11513.0</value>
                <value>67.879788065664897</value>
                <value>&quot;06075012501&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Set 2]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[io:latest:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[student housing]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='bp - y change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='bp - median y'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:mean_commute:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='d - low income'>
      <viewpoints>
        <viewpoint name='Sheet 43'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='low income'>
          <zoom type='entire-view' />
          <highlight field='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
    </window>
    <window class='worksheet' name='low y buckets'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075210919938:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin):ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[under 50k]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 43'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:med Y for low (bin):ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:tract_id:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:med Y for low (bin):ok]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1156</value>
                <value>%null%</value>
                <value>&quot;2016&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075210919938:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:med Y for low (bin):ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin):ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[under 50k]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='low income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' />
            <card mode='pattern' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[Set 1]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_570690563683786757:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin):ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_y:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='d - y change'>
      <viewpoints>
        <viewpoint name='map y change'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='median rent low'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='median y'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='map y change'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' values='relevant' />
            <card mode='pattern' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_1289085075229982723:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Calculation_570690563683786757:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin) 2:ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x (bin):ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_y:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:y_change:qk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='median y'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0mkjoac1rng4a71c93y7b1sobakz].[avg:median_income_x:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:median_income_x:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='median rent low'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:low:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 44'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:city:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_name:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id (Sheet1):nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 45'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Mean Commute (bin):ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Mean Commute (bin):ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:Median Rent Adj X (bin):ok]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id (Sheet1):nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:tract_id:nk]</field>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 48'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:county_id:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[ctd:county_id:qk]</field>
                  <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[usr:Calculation_350999341884243968:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9</value>
                <value>0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mkjoac1rng4a71c93y7b1sobakz].[none:county_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' hidden='true' name='s'>
      <viewpoints>
        <viewpoint name='overview rent'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# rent tracts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='% comm' width='192'>
      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
      K3EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='&gt;30 mins' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABACAYAAABMbHjfAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGeElEQVR4nO3df2jUdRzH8ad1ed538b28OL1VpoJHTGG1FYtGUeofDQaLVYRY+Y/BDGFt
      cAaJmcKw6SaOodRRFlJQLGgxMCa0JIsVUoqZLpl4DjOtq9nu8nt+t8+wP24/bnO5NfZtd5/v
      +/Gfn3lfvyff132/3/t8X/vMuX79+nWEcKlbZnsHhJhNEgDhahIA4WoSAOFqEgDhahIA4WoS
      AOFqEgCHWZY127sg/kUymZQACHeTAAhXkwAIV5MACFfzzPYOOE9hJSzwGhjeG99uorcX5ZlH
      wDQmfrWt8EzwOmUluHJNYQYCeCfZg127dk1nx8X/QOMAKC4cbWP3/kOkhkZ84Uq2RsoIANBL
      247XONgz9LOitezc8PjIwWzHu2h9p4nDv6+koWkNZsaWYx1vU99yHB+QIkxNQ4SCzL8gcoa+
      AbBO8+7+c6zb1kBxvgkkaN+xifc67ieyOp/uT+s5SCV7omUYxPmgZgvRzuVUlwaJtTdS3/oL
      jz5Zgu+vsZtVlzqobzlH1ZtRigPQ3fYGjbvbad5eNumZQGQffe8BjEK2RyNDBz+AyYIA9KOA
      BN8d6WfthjLSFz5Bntu4klOffY0FLHzweRqiTbxYUYq/f2DMZmNfHSJU/jLF6dMI4YoNhC9/
      yRn5uj8n6RuAcbo7mokeD1H5yCKwL3Iy5WdB3ujPvfcuJ9R/FQUYwfz0JU//AHDbmO2oAR/L
      lizMGPFzj9/HNeX8exAzT/8AqDhtjVU0tvxJVd3rFBjA4AA+3zLuzrxmGZz6JtNnkcyBy5y5
      mJiJvRX/M33vAQDsGM3V9ZwKl1O3r4Lg8Lu91Qepk5y3oHDkyx81crM8mbk3DIRYsVjugnOR
      xmcAi/Yd9ZwqWc++SMbBD+C9mwJfH7/2jX6SW2eP0+cPTnojOy8Pfjh9cXRA/ca5vpTmnyT6
      0jcA1lnaL4eIvFCCRymUUih7+IA3eHhViNa3Pyd973qJj/YdZUX5g+MCoICxN8FLH1tF6vD7
      HOtN/7mr7S16QqtYPvE0gshyc3T9rRBWdxu1jQdvGF9cHmFzRZh/nwewaNtROzI+KkykOULY
      C7GOZupbTo2M32wewLIs9u7dO0PvSsw0bQMwNYpE7xUUeQQC/+0j3E4kuKoUeZPMBFuWhWHI
      6SEbJZNJt1+6ejADwWm90muaMvGlAX3vAYSYAgmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNQmA
      cDUXTIQ51Am2LfoHYa5hTPqfKJ3g7KVxAJzpBKtLnWzedoC+jH9pZVUda4qnN6MsZpe+AXCo
      EzzI7TxbU0dxQRAPkIh1sKm+gfv37EqXbURO0TcARiHbo4UZAxN0greO7QRXv/M1VunT6U5w
      WT6m6uLske/HbNabX0hJfsZW77qXEOMfmha5Qt8AjDPcCa5ZtwjsLk6m/Dx0Qyf4BAowg0NH
      +ASdYAA70UvCtvkjdoLW/a3cWRnJaJaJXKJ3ADIrkTXVRFcPj3vwkWIgswc8OPVKpNcMEATm
      m3lUPneeppZP6F65mbA8HppzNP4a1JlKZCaP16Rg9UtU+ns4ckZK8blI3wA4Uom0+OrjT+mK
      j/4SINV7mm/7oOAeKcXnIm0vgayL50lxmcbqqjHjw5XIpRWvUP7Ta9RWpWuTvqK17CwJwgSV
      yE1V35CuRNYw3/iFpi21Y7ZZVBmhNODwGxKOkErktCqRCtvqx1YKr2EywTzZCKlEZi+pRE67
      EunBa3ikEqkBfe8BhJgCCYBwNQmAcDUJgHA1CYBwNQmAcDUJgHA1CYBwNRdMhDlTiUzPIidg
      Xh6mcfMpMalEZi+NA+DcMqn2hU5erztA39BCqYTK2bO9AnngIffoGwCHKpGoGLvrDlC8sY41
      hUHAJh635eDPUfoGwKFK5IUvPqKnqIrNhcPPEHkJBuWpoFylbwDGmalK5N/xv1i84Bqdbfvp
      /OkKty8q4qlnVpMvp4CcpP+3QDO8TKonz0fPoQP8qJawqqyUO35rYVttMzHbiZ0XTtP7DODA
      MqnqKpRs3MP6oRcWFz/A3Fdr+fJMgvWF0grLNRqfARxaJtUPRzt/zhgxWHafn/FrZ4vcoG8A
      nFom9Ymn8B2P0nFhqBfce4wPj/axRG4CcpK2lUgnl0mNH/uYLdHDDE8DrKiMUF0Wnng/ZJnU
      rKZtAKZm+sukoiziV67iNedj3qQULJ3g7JVMJt0eAOdJALJXMpnkH1mtHhH1Cvs1AAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='&gt;60 mins' width='192'>
      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
      IUQVLweW1usAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Intro' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SFBA map' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 32' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 37' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 42' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 43' width='192'>
      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
      SWv/D1y6hlCtn2PUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 44' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 45' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 46' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOg0lEQVR4nO3d3VMU54IG8Kd7umeYD0A+5VODIomfqOsH0TUhVsU9unUkOZXsVrRyLFNJ
      5WJv9jL/RW5SW3uRVFmpSlKViy2jJS7RgyDIkQCiIQoiyLcCDggjzDAz3f3uhQtBj2XMOa9F
      w/v8rmas8bGx+qHf7n6nX00IIUCkIE3TNH2pN4JoKbEApDQWgJTGApDSWABSmlIFSCQScBxn
      qTeDXESpAvCKLz1NqQIQPY0FIKWxAKQ0FoCUxgKQ0lgAUhoLQEpjAUhpLAApjQUgpbEApDQW
      gJTGApDSWABSGgtASmMBSGksACmNBSClGUu9AUTPI4RANBrF+Pg4DMNAQUEBPB6PtHwWgFzN
      sixUV1ejtrYWfr8fH330EbZs2SItn0MgcrVkMon6+npMTExgeHgYTU1NUvNZAHI1j8eDkpIS
      +Hw+BINBlJSUSM3XVHo6dDweh2ma0HX2frkQQmB0dBRtbW3w+/04cOAAvF6vlGxN0zQWgJTF
      x6OT8ngViFxNCIHp6Wn09fXB6/Xi1VdfhWHI221ZAHI1y7Lwww8/oLGxET6fDydOnMDu3bul
      5XMIRK6WTCbR3NyM6elpjI+Po62tTWo+C0CuZhgGysvLEQwGkZGRga1bt0rN51UgcjUhBCYm
      JtDV1QWv14sdO3bANE0p2bwMSkrjZVBSHgtASuNlUHI1IQQGBgZQV1eHYDCIo0ePwufzSctn
      AcjV4vE4vvrqK3R3d0PXdWiahvfee09aPodA5GpCCEQiEQghYNs2IpGI1HwWgFzNNE0cPnwY
      +fn5KC0tRWVlpdR8XgYlVxNCwLIsxGIx6LqOYDAITdOkZGuapvEcgFxN0zSYpint5tfT+KuQ
      lMYCkNJYAFIaC0BKYwFIaSwAKY0FIKXxPgC5GifDkdKengwHAO+//760fA6ByNWengz36NEj
      qfksALmaaZo4cuTIwmS4t956S2o+J8ORq81Phpubm4OmaZwMR2rhZDiil8h1RwAhBIQQ0DTt
      10OdEBAABAANGn79Y/HE4XB+MCfpCEku4DgObt26hZqaGgSDQRw7dgxpaWnS8peuAMLC9Pg9
      jD4CXlm3Bj4dsJNzGOm7g+HxKYSy1qCsbC1SPMDcTBidnT2YdTxYU7oJa7L9mLw3hIGRCYRy
      16JkbTY8wsLInbsIFK1HZkDeGlK0tOLxOL7++mv09/dD0zSkpqbi+PHj0vKXZgjkxNF5rQnn
      fqzB/56pw7T9+I/H+q7hYmMLpmbm0HG5Gi23xuAgjtbqc2jvC2P2QTfOVtdgbHIUTc3NGLx3
      H60Nf0H/RAyx0Q6cr7uJhOMsyY9EL49tP95B5i+FyrRERwAdGXnrsS97Da5XX8b8LjvU2Y7c
      8qM4tKMY92778dcb1zGdV4iWvhD+/J+HkWkk4f3uv3GlvQBGcDX2v74H/dfOY+T+GLqv/oRd
      fzyO3KABITgMWim8Xi/effddnD17FqFQCIcOHZKavzQF0E3kFRbCSkzhZ/3x2B4ANNuLgoLV
      MHQgNa0AftGB2akwfK+9hqwUA4CBsi2v4Gx3FFnGNO7cvo3J0RlY0z8juW4zor80ou5uHraX
      b0RGyAfhOFh8lXf+N4jDo8SyUlFRgYqKioX3lmVJy3bZSbCAWDgeCNh2ErYQABbtsMJBMHsN
      dmY+QGtXJ1KDBdB0G6vu38Lgqi0Ijd3C9UAqKrev+5tDphCCOz89wVUFsEQS01NRID8FSWsG
      lu5FMC0V0aERxLANfgBjvUPI2HgQ6zetQ2HZVnS21WPcUwJnYAC7//Q6UrtiuDwbhRCPVxhc
      vKgyb4QtP/OT4S5duoRgMIiqqqrlPxnOTsxhciKMR7NTmIrMYKR/AMbqHBRsKMWFtku45d2F
      /iuX4C85iszV+XgNX+J8QwfKVz1A/VgI/350FaBrSD4aQNvtKI7++VUM37+Kzs5u+O8+RNa6
      tTwHWCHi8Ti+/PJL3LlzZ+HS+LKfDGfHIui52Y6WtpvwrclC77Wr6B2bQuGGCuwo8qLtSj3s
      3NfxRsU66Jofb7z/BziD13Hl+n28caQKBb7He/fcVARbD76NXJ+B8n85BOv2NcykFaC8tBg6
      G7AiCCEwMzOzMHyVPRnOdXOBHNuGbdvQTROeRTfCbNuCLTSYhueJG2RYfLNMOBDQoevP3vk5
      BFp+bNvGxYsXcf78eQQCAXzyySfSFsvmAhnkekIIRKNRhMNheDwe5OfnP3Fe94/gZDhyPdu2
      cenSJdTU1CAQCODjjz/Ghg0bpOXzVyG5WiKRwI8//oixsTH09fXh8uXLUvNZAHI1XdeRnZ0N
      j8cD0zSRlZUlNZ/nAORqQggMDw+jsbERgUAAhw8fhtfrlZLNk2BSGleJJOXxKhC5mhACs7Oz
      GBsbg2EYKCoqknYZFGAByOUsy8K5c+dQV1eHlJQUnDx5Etu2bZOWzyEQuVoymUR9fT0mJiYw
      MjKCpqYmqfksALmaEALxeHzh/eLXMrAA5GrzzwKaFwqFpOazAORquq4jNTUVwOMyyHwiBMAC
      kMs5joOHDx8CeDwcmpiYkJrPApCrmaaJPXv2IC0tDTk5Odi5c6fUfN4JJlcTQmB6ehp3796F
      aZrYuHEjDEPO1XtOhSClcSoEKY8FIKWxAKQ0FoCUxgKQ0lgAUhoLQEpjAUhpLAApjQUgpfEr
      keRqQghMTU2ht7cXXq8XmzZtkjYXCGAByOUsy8Lp06dx5coVeL1enDhxAnv37pWWzyEQuVoy
      mURLSwsikQjC4TDa29ul5rMA5GqGYWDHjh0IhULIzMyU+kQIgN8HIJcTQmBychLd3d3wer0o
      Ly/n9wH+XiwALcbvA5DyWABSGgtASmMBSGksACmNBSClcSoEuZrjOGhtbUV1dTWCwSBOnjyJ
      7OxsafksALlaPB7H999/j8HBQWiahry8PHz44YfS8jkEItfTNO2Zr2XgEYBczefz4YMPPkB1
      dTVCoRCOHDkiNZ9TIUhZmqZpPAKQqwkhMDo6ira2Nvj9fhw4cEDaOsEAh0DkcolEAt999x3a
      29thGAYcx8Hbb78tLZ8FIFezbRu9vb2Ix+OIx+Po6+uTms/BMLmaaZqorKxEVlYWioqKsG/f
      Pqn5PAkmVxNCIBqNYnx8HIZhoKCgQNpC2fw+AC0LmqbB4/HA4/HwPgCpxbIsVFdXo7a2Fn6/
      HydPnsSWLVuk5fMIQK6WTCZRU1ODcDiMoaEh1NbWSs1nAcjV5s8B5sViMan5LAC5ns/ne+Zr
      GVgAUhoLQK43Nzf3zNcysADkakII2La98N6yLKn5LAC53uIbl7JvYrIA5GoejwclJSULN8PW
      rVsnNZ8FIFdLSUnB8ePHsWHDBuzcuRNVVVVS81kAcjXLstDR0YFwOIyRkRF0d3dLzWcByNWS
      ySQaGhowOTmJe/fu4erVq1LzWQByNV3XkZ6eDuDxpLiMjAy5+VLTiCRzHAeTk5MAHl8SDYfD
      UvNZAHK1xQUAgImJCan5LAC5msfjQVFR0cJl0OLiYqn5/EYYuZoQAj09PWhqaoJpmqiqqkIw
      GJSSzSWSSGn8SiQpjwUgpbEApDQWgJTGApDSWABSGgtASuODscjVbNtGY2Mjzpw5g1AohE8/
      /RQFBQXS8nkEIFdLJBI4ffo0hoaG0NnZiQsXLkjNZwHI1RzHQSQSWXg/NTUlNZ9DoBUkGo1K
      ny6saZr0CWi/9983TXPhvWHI3WVZgBXkxo0b+Pzzz6VmGoaBb7/9Vmrm72GaJvbt24eGhgb4
      fD7s3btXaj4nw60gDx48QFdX1wt99ty5czh48CD8fv9zP6frOvbv3y9j8/4uQghEIhH09/fD
      NE2UlZVJOwpwkbwVJicnBzk5OS/02ebmZlRUVCAtLe0lb9U/RtM0pKeno7y8/KXkr8xfhUQv
      iEcAcjUhBO7fv4/W1lb4/X68+eabXCaVVgbHcX7zYbeJRALffPMNbty4AcMwkEwmUVlZ+dy/
      o2nab57bzGMBaMn09/fjs88+e+HPJxIJnDp1CqdOnXru53Jzc/HFF1+8UCYLQEsmMzMTx44d
      e+5nhBAYHx9HS0sLQqEQ9u/f/8R9gWcJBAIvvA0sAC2ZVatW4Z133nnuZ4QQiMVicBwH27dv
      x549e6QtkwrwKhC5nKZpCAQCCIVCyM7OlrrzAywAKY4FIKWxAKQ0FoCUxgKQ0lgAUhoLQEpj
      AUhpLAApjQUgpbEApDQWgJTGApDSWABSGgtASmMBSGksACmNBSClsQCkNBaAlMYCkNJYAFIa
      C0BKYwFIaSwAKW15FEAIOLYNy3aweD0bx3Ge/hjUWe+GZHDVs0FjkQf4ubUFE3MAdB+KS7di
      c2kuYpMDaGy6jlmho2zHP2NLcRpGbv+CjjsjyCjeip3la2A4SXQ1tyB9824UpD3/4alE81x1
      BHg41o/bPWFk5RUgP381VoV80BBDw/9UI+LPx/pcAxfOncHQ2BCab/YglJmDkZt1uD06i9nB
      q6jtnEHA66ofiVzOXUeA2CP4szegrHQ9/Cl++EwPrLFW3JxZj/84uAc+TcC+/1+o+2kQ6anZ
      eG3bVgTsEYwP9+Nm2x384d/egw82HOGBri31T0PLgasKgPg0JicGcOniPVjeDOzctQtFiSj8
      JYVI0TUAGvJLitHWqyE0N4q/NtRj7sEjGOl9SCldg86Lf8Gt1Gzs2vNPyMsMQDgObNteiBdC
      IJlMQtPYDsdxkEwmkUgklnpTXoht27AsS/r2uqoAhRvfxL/mR2EnY+jpuoHmq23I3K4D+PVk
      N5mMw5dRiH2vZOGXnmFkFL+CqVgU3sE7sDe/Bf9QBzruDmF1RhkA/M3OrmkaC/D/ltP/xfx2
      yt5eVxVA073IyUuH1/DAL5KYbeuHCBVjruc2JhObkeGx0d85iML9h7G6JIjMwrX46dJ5BPN2
      wx4YwNrNZUgzRnAlmoAQgEfXn1gT2LZtGIaxYtcJ/j10XYdhGL+52opbvKzt/T+x43s29koq
      awAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 47' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZ6klEQVR4nO3deXAU993n8Xd3z6lrNNKMbgkEkjiNQJjL2AYMvo0TbxI2ayeV1G4qqdSm
      av/IP1upSv5xpSp/p2qffaqeZNdJPfs8FTv2Gh/xgc1tjAFJgHVwCJAEuo8ZjY45u3/7h7AA
      IUBspFGgv68qVal7en7z69F8ZvrXmv7+NKWUQggb0jRN0xe6E0IsJAmAsDUJgLA1CYCwNdsG
      QMb+AmwcgHg8vtBdEP8AbBsAIUACIGxOAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIg
      bE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbG3BAmCZJpa1UI8uxCRH2h9R
      KZLJOJ3NXxILrqemOAunrmGmkkQnJoilwJuZQYbbiaZp39yJVDLBSGgE5fTgy8nCYWhYqSSR
      8AgpzYnPl43TYYBlEh0fZTSaIDMnlwy3C127a4+EjaU5AIqx/nYOHDlE68V2LPcFntz9bTZX
      eDh5dD+NbQPoKkHcVcgPXn2FPM9k91KxMF98tJeWnnESlkH1o9vZua6crw+/z8nzA5i6g6Ka
      TbywrZZIRyMffH4cy3SguQI898qLlOV7kQyImaQ5ABZdra1E81fx3aoShtwrWFyYA5gEKtfx
      2tYysp1R3v3n/0NvLHU9AIpQVye9CT/f/dGruIZbefOz8/QWO+joSfLcqz+hUPXw7oen6Opf
      TF/rGSo2vMSOR4r46tMPuHipk5K8ZRiSADGDNAdAJ1AWIPzRCY7leVi6YS2+TDe6oVO1JItU
      YoLWU8dot/zs8F7vmoLQaAiXr4Bsrwt3URl+vZORSB9RZ5CAz4uXIAW+HJITUTTTQVlZCU6n
      g6JgMZfjUSyl0Lm9GJY1y0HI7373O7q7u+f4uYDf/OY3BAKBOW/3t7/9LWNjY3Pa5g9/+ENW
      rlw5p20C/PGPf6StrW3O2/35z39ORUXFPbdLcwA08qs28tr3i3jvr//KgffeZPiJZ3h+Uw3W
      xCCHD3xGc6+b3Xuex+e+qWtKw+NwY2jcGBcocBtenBpoSoNv1msa39S81pXJeCyGpcBSFqlU
      aqpJy7JIJBKz6nVVVRX5+fmz2raxsZF169bNaltN02bdh/uxY8cOksnknLaZl5c3L31dv349
      VVVVc95uZmbmrPqb/kEwkBmsYPNjG6g0Mzh85Bw760o4eeBjrqhyvv+9TQRzPLds73G6iEWH
      iZsKPTrGmJXC7cpCxc8znlK4zBjj8QkwDJKpJKNjMcjPJJpKkJmRg6FrGJqBYRhTbcZiMTwe
      z/SuzWjPnj2z3rfXX3+dn/3sZ7Pefj5UVlbO+tNttnJzc2f9fN2PsrIygsHgnLebk5OD2+2+
      53ZpHwN0nj1Fc18Mb2qQcByyCkpIhbpo6UpQt6WYscEexgYVeSWljHZdwfIVESwqJn7yAK0t
      rZj9F1G+fAoLS8jUT3Km/iz5+gBDcSdbgrlQGqS+8Ti+eDlN5y9TvXUNxr07Jmwqzf8H0Cms
      rKLQneBSezchSvjOS5twunysXhKg4/xZ6hvqqW9ooLe3l6+OH6Z/NIY3UM72xx/hamsjHeMZ
      7HhiHT5/Ppuf3MJEVxMtV2Ns2b6VYLaHqtVbWZodp/7UGYpXbWNlVcHU0ZEQ06X9EMidnUfd
      k7vID3hJFG6gMNsFFLF118u3bDc62EN4SR3LSoOAQVH1el5eXAuagcMxmdv88pU8X1yDQsfh
      mHyfd2Xls3nHC2ywLAynU/7VLe5qQcYAABUrHrvr7Vn5RWzML7oxuEXD4XRO20rDcExfB7ph
      oBty4CPubcECoN3juORetwsxF+QIQdiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA
      2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBOAhYQ2cJzY0t9Xg
      7GDBLooXc0GhYqPEm88wdvAApm8l5pOPobwKEjHUYC+cPA3VG9BWlt5613gUdeFraLgIS1bB
      uhXQ3Qhnrt2oxGG54NldaFkOzIFuImdOYWVVkbP9UfSH5K1TAvAgU4pE6zFCbx/BEcxAhTuJ
      fO5EPb0adeEUvLMPYm4Irp5+R1R7E3xwGGqr4fgn4MyEoBMyM0Ep6O2A9jjs3IHqbCfy/jtY
      QxaenX6m1Rh+oEkAHmBKKVI9V1CLNpLzRDZxYzWeHI3+RASV1OHZF+DQAbjtBatgdAL81bB9
      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
      721AygAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 48' width='192'>
      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
      qf0F7jOidMBybKoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='balls commute' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bp - median y' width='130'>
      iVBORw0KGgoAAAANSUhEUgAAAIIAAADACAYAAADIk7uaAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAKxElEQVR4nO3df2zU9R3H8WftL3pIKyzVonOC0IGyFCjYRaJbVrNJJCHKss0YI3+woBGD
      GsqmBrs26wwDDIzYhcusSzRBt8UhJl1qNkDE4VZEWhR/Xfklkdbiij3ot9zdt/3uD74tvfbb
      s4b7Xj/Xvh7/ED53189d+7rvj8/38/28MxzHcZBx74rRfgNiBgVBAAVBXAqCAAqCuBQEARQE
      cWWN9hswkWVZnu09PT0pfiepk6EBpZGxLItAIDDab8M32jUIoCCIS0EQQEEQl4IggIIgLgVB
      AAVBXAqCAAqCuBQEARQEcSkIAigI4lIQBFAQxKUgCKAgiEtBEEBBEJeCIICCIC4FQQAFQVwK
      ggAKgrgUBAEUBHHpbmgDOY7D7vdO0NTSxryZRZSXTiMjI8PXPnU39Ail6m5ox3H47Yv7OPjJ
      6f62BbOu5ekHbvc1DNo1GGb3eyfiQgBw8JPT7D50wtd+FQTDNLW0ebeHvNuTRUEQQEEwzryZ
      Rd7txd7tyaIgGKa8dBoLZl0b17Zw1rWUz5/ma786axihVK6h5DgOuw+doCnUxrziIsrn6/TR
      GFpMS8YFBUEABUFcCoIAaREEGyscxorY3/iV4Y4OOsLey+lKPIOvPtqcanydZ+veoNttySu+
      h8qKxUyJe94Z6h5bR2POnWzesIyLx/UdvP7Mk9SfdF83/z5+/9APyQWwDvObqg9Zs+Fe8t1+
      9m5axe7vVlC9tDg1H81A5gbB+pDn647xQNVGSqfmA2EanlnLC7vmUnHH1P6nffTKc7x/dTEF
      EejbZoT+vp567mFzcDEBzvDSY+sI7r+Z1YsKLz4hGut/feveLWwPlVFTMX5DACbvGgIlVAcr
      3BAA5HP1FIhyaRdht+5iy55vseaRJVzVHXVbw/znrSj3PbTY3ToU8vNVP+LIa/u4tJPIvvgN
      aN1L1fYQy2uWU5iSD2Uuc4MwSGjXVoKHirjn1uvdlg5ervort636JdcHYkT6vuWRz3m/u4Cr
      J156be53bqYo2jUgQl10hk+xrWo785dXsajQ3A1jqpj/G7DP8PqWddSHiniw5mlucgf3TjVs
      4+05ywmWBCCSDTnut7wnRl7eTK7LHfAzBpZZyMyG7kaq1jYCc6hZNJXBhqvXcO7cuSR9KPOY
      HYTIcbauXs+R4iXU1C6l/4vb0UjNjpOULZ9MKBTCPheiO9rOBx8dZ/Z38qD7fU5YUNI/Imz3
      H3DSE4O829i85af861ePs/GVw2y4tySuW6+hZMuymDRpkk8fdPQZvGuwaHhmPUfKVlBbMSAE
      QKSrmznFxXTtr2fnzp3UNxyks/sY9a+8yoH2ydyU18npzks7AqvlEJ0FhQzcSNgEWFr1GHl7
      annpcDh1H8tUjqm6mp1HV1Y6n15wHCcWc2KxmBO7EPN+buxDp3Lty84F97/HdlY6Kyt3Ol2O
      4zjOaef5lSudP/y3vf/nVj76otPZ182nrzorV651mjuH/NT4t9PVdbmfyGjG7hqsz0/QTRub
      Vj8Y137DkgqeGny+7x4oRoBcYPrSR1nywZM8/mA94I4jlA04L+g7ngACxcuouLOZTc82sLV6
      cdxWYzwZw5ehbcIdZ7GZyJQpl3/5eKxfhjZ2i3D5ssifMt5HB0bO4INFSSUFQQAFQVwKggAK
      grgUBAEUBHEpCAIoCOJSEARQEMSlIAigIIhLQRBgTF+GTl+Oltczl5bXk5TS8noCaHk9GWUK
      gmG0vJ4Afcvrxd+Gt3DWVN+X11MQjBR/duDg76kjKAjG0VmDADprkFGmIBhGZw0CaFFu42lR
      bgHG/t3Q2jUIoCCIS0EQQEEQl6aqGUhT1QymqWqSUrroJIAuOiWQuHBHxAoTtiKej6lwx8gZ
      fLCYuHBH5Mxh/ryxlkOdfc+/gRU1aygrzCWdC3fMm1nEW80nh7b7fNHJ3CAkLNxRQP3GF8i+
      +wm2LppOLtC6fxtVv6vne1uW8XkaF+4oL53Gvz84FXeckIqLTuYGIVBCdXDgqukDC3cEWLZh
      S9zTC6dPg+4z2H2FOyrjC3es/tM+rEV9pX4GF+6oNaZwR0ZGBk8/cHvKLzqlwTHCRUMLd1wS
      ad3PU1U7mL9iMfljpXCHM+hfnxn4GxhkmMIdfY7vrWP99kbK7lvHirJCsFrTunCH4zhs+tu7
      NB9tB+Ct5pPsbTpOxc8W+rpVMDsIwxXuAMCmsa6CusYCVlRtpmyqm5DM9C7csevdY/0h6NN8
      tJ0DoS+5Y8GNvvVr8K5h+MIdAK17/0hd4408sbX6UggAcq9L68Idbxw45tnecOCor/2aGwSr
      hYa2IiruLyPLtrFtG7t/LMHinR1HKFt1P9NzbSK2jW1HsG2AAN8vL2LHtn+4Vd1aebm2kTlL
      FgytxRC4iV9X3MnbtTWYkoWz57s92786d8HXfo3dNSQu3HEdWQXQWPskjQMfLFrC5uqlaV24
      Y/KVE2g/2zW0fdIEX/sdwxed0rNwxz8PHOW5HQeGtD+y7BZ+vHCGb/2au2u4bBcLdyQjBKn0
      8Wf/824/9aWv/Y7hIKSnw8e+8G5vafdsTxYFQQAFwTglN3pfXCqZeY2v/SoIhnn47lKyMjPj
      2rIyM3l46QJf+1UQDPNm02fYPT1xbXZPD282f+ZrvwqCYTRDSVzDDev4O9yjIBgmJyvbuz3H
      30FgBcEwUdt7bmY02uPZniwKggAKgnHmzvAeL5ircYTxZbg5SH4vsKcgGKbpqPe1hqYW7/Zk
      URAEUBCMo1XVBNCqasbTqmoCaFU1GScUBAEMns4+nmkNJYNpDSVJKa2hJIBmKMkoUxAMk5Pl
      ffyek5Pp2Z4sCoJhonbMuz3qPXMpWRQEARQE42jyqgCavCqjTEEwjCamCKCJKcbTxBQBNDFF
      xok0mI9gY4UtyA0QyB36dsMdHdhZE5iSP/Tbmugxk2k+QpzE9RoS1mTwoV6D5iOMlgH1GoLB
      IMHgRhZHd/DCrlYAQv01GYIEgzUs+Hg7wf1nvvYxwLNewyMGFO0AzUcYKlBCdbDCLdoB8fUa
      3JoMD8XXZDjy2j6shI/1GVyvYbkx9Ro0H+FrxNVrSFSTYazUa0gx838DXvUarNjwNRl6EjwG
      xtdrmP3tqzxrOs2+/ipf+zc7CMPVa0hUkyHN6zXctWg2B1vaOfhJa3/bwllTuevW2eP0YDFR
      vYZENRnSvF7DRfF/cMf31RFMDkLCeg2JajKkd72G0TprMHbXkLheQ3HCmgzpXK8h0VnDHaXT
      fevX4AGlkUhUkyE96zU8+5d3PA8WfzD3Btb84lbf+jV31zAiiWoypGe9Bi2mJYAW0xKXFtOS
      UaUgGEZzFgXQnEXjac6iAGN/zqKxI4vjmaaqGUxT1SSlNFVNAE1Vk1GmIBhGA0oCaEDJeKkc
      R+jt7aX2tXc5fPQLSmZcw6q7F3LFFf5+ZxWEEdLpo6SUTh8FgKaWVu/2kHd7sigIhvmiw/vm
      mrazXb72qyAYprPrgmd7uCvia78KgmF6hzl27+1VtfhxZfKVE7zbJ3m3J4uCYJif3DLjG7Un
      i4JgmPLSaeRPjP/2F0yc4PvIooJgmD2HThIedMDY2XWBPU1D735KJgXBMLoMLQC0dZz/Ru3J
      oiAYZrjxgrClcYRxpfO89x/8q/PeA03JoiAYJtrjXZchZvf62q+CYJpRmhSgIBgmO8u7mlt2
      lr9/qv8DrMDhnT/kPYsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='bp - y change' width='123'>
      iVBORw0KGgoAAAANSUhEUgAAAHsAAADACAYAAAAkyhzJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJ0klEQVR4nO3df0yc9R3A8Teb7XnXCRODHlRXaDhr7eIKdWxpbBrJNruRNJlZTNP5YwkL
      uLnYGmFpCSqNP8YEU2zmlChp7BJrWCqzSSdNlFp/dIYEqHMdwWuAxgkM4m0cu+c8eJrv/rgr
      3MFd5Q/gnuvn8/qrfJ/nuLu8uee5h3CfZhljDEqEr6X7AaiVo7EF0diCaGxBNLYgGlsQjS2I
      xo5jWVa6H8Ky0tiCaGxBNLYgGlsQjS2IxhZEYwuisQXR2IJobEE0tiAaWxCNLYjGFkRjC6Kx
      BdHYgmhsQTIidsQKErQiSbcFAwECweR/TmRbQSYCAZLfUp6r0v0ALicy8XcON71A3+SllXVU
      PvUoZXkuIMDxZ/Zz4kJ0i7tkN79/cDuu2J5D77xEY3sfbiCMj71NNWzMXvGn4CzGsULmWO0e
      88qHg+bL2MrIhy+aqj3HTMgY8+mxWlP19FsmZIwxZtwc2VNlnv9w3BhjzMzI26aqqtb0fBG9
      3advPm6qHn9r9vukvMdQaFmeiVM4+DDu4e5nW6jcWjT7as0rKoRwCJsgH703ze4Hd+CJbuGe
      h+7k3F/exwKGTp/EW/ErSnOjt/PtfBDfWBcDV/Yfj34lB8dOFBk9Q11DByWVO8iOfM4n4Ryu
      XzO33fWtW/FOh7ABe8ZNceENcbfO4cYcN1/aK/2oncXR5+xLhk630fhaN2W766ksywNrFLe7
      mLWuuJ0uJt5mmnllp8cY+DxIWXb0xJ3qb8SnpqaW8JE7i8Nj23S31dDWnUNlw0HK8qMHbb7u
      hvAnDFtwm2du33DcLVfP/1arvWxaN/cOzePxzN8Dy7K45pprlvDxO4ujD+Ojp/9IW/d69h06
      MBcawLWWje5JRibnXr3W+T4mc/JwAVevgZ5/fj63v/1vBifDTv/JXnYOjm3xt45zlD10L0Uu
      m4htY9sRbBvAw/fKvXS89FeiB+NRjr7QzaaKLbiAom3lhE8dpjcQ/U79x1/kgrecWxe+mEXJ
      MsapM1Usjj/xCCfG5i17Kzh4YCeer7zOPkRj+7nYV4u7zrYsK+nhfTkYY+jqHebs+TE2F3sp
      Ly0kKytrWe/TwbEXwyYY+A82a8jNXRgpEgwSsm3W5ObiSnLr+VYqtjGGJ4+8T8/AyOzalg0F
      PHb/tmUN7uDD+GJcRXZuXtLQAK7sbHIXGXoldfUOJ4QG6BkYoatveFnvN8NjZ6az5+efm2Lr
      /uTrS0VjC6Kx02BzsTf5ui/5+lLR2GlQXlrIlg0FCWu3byigvKRwWe83w9+NL60Vv/TqG+as
      f4zNPi/lJXrptaJWMnY66GFcEI0tiMYWRGMLorEF0diCaGxBNLYgGlsQjS2IxhZEYwuisQXR
      2IJobEE0tiAaWxCNLYjGFkRjC6KxBdHYgmhsQTS2IBpbEI0tiMYWRGMLkjGx7Ujy8YQRy8JK
      sU2nEidy/GiwyEQ/HS+3cGr8TppadnFp4JE90UtLfSv+SzvmlLGvoZKi2IcwdSpxEmkakLso
      g281maqqPebIsVfMntqjZnJ2S8gc21Nlnn97MPb1l6bnaK2pevpdM2N0KnEqjj6M37Dl5zS1
      tnDfzq3kTM/EbbEJheE7JUWxr13ccvN6GP+Ci+hU4lQcfRj35OVH/zE9A6yK25LNjuo7qd//
      W77Y/TO89gDt7YPsrr8fFzqVOBVHx76cawtvJodTnOx6j3VhP2E2UXDd3NQEnUq8UGbGtj+j
      ZX8rpXub2BV71zV65hANdW9wsOVuQKcSJ+Poc3ZK0xOMU8ZP4t5e52/9Md7wOCF0KnEqGRLb
      BuLeoHnyuZFuXjvz2ez2/uN/Zsx9PWvQqcSpOHhaksXxZx6ZnTo8x0fNoRrWjpymofE1JuPW
      q5/aS2le9PXr9KnE6eDg2IthYwWD2FxNdnbmTCVOlwyPvbSu9NgZcs5WS0FjC6KxBdHYgmhs
      QTS2IBpbEI0tiMYWRGMLorEF0diCaGxBNLYgGlsQjS2IxhZEYwuisQXR2IJobEE0tiAaWxCN
      LYjGFkRjCyL9U6xpY4yhq3eYs+fH2Fzspby0kKysrGW9T/2sV5yV+qyXMYYnj7xPz8DI7NqW
      DQU8dv+2ZQ2uh/E06OodTggN0DMwQlff8LLer8ZOg7Pnx5Kv+5OvLxWNLYjGToPNxd7k677k
      60tFY6dBeWkhWzYUJKzdvqGA8pLCZb1ffTceZyUnLxhj6Oob5qx/jM0+L+Uleum1onTMhkOk
      GkFNxCIQCGIl2awjqBM5/jdoqUZQA/g7D9HccY7YnGnWVdRQt9MH6AjqZBwde6izmcaOf3HH
      XWW4/5u4Ldj/J5o7pqlpasWXDUQCDAWiT8cefYfG9kGqf9dKaS74jz9B83OdHDqwY1Ejsq5U
      jj6Mpx5BHeHdwx9w17690dAArlyK8qNf6Ajq5Bz9yk49gvoi1rSb1RO9vHHyIwb/B+u/+0Mq
      tm/UEdSX4ejYKUUu0B8OM9b2NhW7f0D5qgCdr7bw3vlqWipLAR1BnUxmxnatpdjtZVdzHRtj
      z6D027lU176J/95obB1BvZCjz9mpXcUaxvh4KO6iypOHlzDhizqCOpUMiT1vBDUetv10E6ea
      2xmNHa1Hu08y5v4+xR4dQZ2Kg3+DdvkR1D6XxZm2Bl7tnoxdS3t5oKGOrfnRiysdQb2Qg2Mv
      TiQYIBiB7LyFY6Z1BHWijI+9lK702BlyzlZLQWMLorEF0diCaGxBNLYgGlsQjS2IxhZEYwui
      sQXR2IJobEE0tiAaWxCNLYjGFkRjC6KxBdHYgmhsQTS2IBpbEI0tiMYWRGMLorEF0diCaGxB
      NLYgGlsQjS2IxhZEYwuisQXJmNgpR1Bf7jY6gjqB4+fAXW4EddQEbXvr6V59FwefvZtL4290
      BPVCjn5lD3U283B9KzO3lOFeMJ8yqv/1P/DJ9T5y3MxOK40fQd3S2kpNxRQtz3WKf4U7Onbq
      EdRR9ug7tJy6jkd/U8E3w9Oz6zqCOjlHx/bk5UcP2wtGUAMEONrQzh0P/ZKbPDNE4n4YdAR1
      co4/Z6fyWedLfLDpAVpv80BkFaxelfBkdAT1QpkZO9DNUx0XKHvgWvx+P/aUn/D0OP/oH+IW
      XxGgI6iTycjYkVCYTT4foTMneBNgeorJ8CQnXj/G1C9+zfrYCOr7bovFjY2gvjWdD9oBMiR2
      4ghq103bebhme9zmfp6o+5i6A7uiA2m/UU64/jC9P3qW0lwdQX2Jg2MvHEFdW/0BcyOo43aN
      vTmLQDR23nb23fMxjfurYzv42Nu0w8lPdkVc0VOJdQR1oiv6h92VnS36//Gaz9HX2WppaWxB
      NLYgGlsQjS2IxhZEYwuisQXR2IJobEE0tiAaWxCNLcj/AaVXZy01Mq7WAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='64' name='comm time' width='192'>
      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
      Aw5HFS/7amlLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='commute' width='192'>
      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
      sIznBvggAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='counties_change' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='counties_rent' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='d - % comm' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='d - boxplots' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='d - commute' width='192'>
      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
      L1Q1EQChqv0T4hnKeicwVdAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='d - house prices' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='d - low income' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z5Ac15ag92Vmed/VttobeMKQIEiC3ptH8j3y2eHb93ZGEzux0qxmdrSa
      3VCMYiLEP9I/KRQbq5UUo92d3Zm3z/E5egcSIAhHgiDhTaO70b6rfXmfVz+qs5BVXe0bQJv8
      IhCozsrKzOo+595zzj3nXEkIITAw2KTId/oBDAzuJIYCGGxqDAUw2NSY7vQDGBjcboKDNxiP
      ZfFapPWvAKGpKVy+ChTp5rFEPIHdYV/xtXOZFPG0itu58msZrA2ufnGY//X//RWPP3YQT2wM
      5fXXX39de/P0ma+pra1DlqR5LpHn3Pmz1NbWrfiBenpvUOHzzXtOKjbNaCiJ22krOp5Lx/nl
      79/jnr27kSRBOBxl+EYn/98//CNmqwuvXeKXv/4doxNxvOY0P//t75mK5WhvrgfgvTff4PMT
      X9K2bReHP/gDR49/QevWnRz96C0+O/4FzR1befvNN9m9ZzeyJJX9zgM3Onnz7fe5cK2b5jof
      P//lrxkYDdEaqORXP/9HvLVtmHNRfvaLX9E7PMmOre0r/p0ZLJ9f/eIX/OTP/5rnH3+QrjMn
      ixXg5Jdn2L5tK2RT/Pznv+DsucvIahzJWclbv/kFHa0NXLjaT6C2ir6BAQZ6rnHs5BcMBqcg
      OcF7H3yK3ebig/fe5sKVbvxuE79/6wO+OHWKq5cvIsxeus6f5OjJr/DWNmJR4/zbf/d/kcPC
      UF8nx45/gZpKcvjwYdKSlcGu8xz5/AuGeq/zwZETBGqqee+ddwhOTtPR1sLl059Tt+M+RCTI
      W2++TTQj033tCr7qep5+7GHeffdtdu65m23bOvjs6DF+8KN/wtenPmPnXbsR6WnOXBvnlSf2
      8fnpbwgnTLz61H6OfvE1oYTCq08f4PjZLho9kLXXUOGy0TcwwHDvdY6eOMXA8ARb2lswmW3s
      u3sfZ0+fYGJiisee+w5DV76isr4JJR0DZzXXz3/JvU+8zNj1bwh07MKqLDzAGNwahrvPcW0k
      SlutnxsXz5Z3gvuunGXrvU9y344AkwnB0UMfMTw0woeHPsdRWQ3AwEg/E5FpvvPdHxBPjHHm
      XDev/eTHZKZ7ueex59lV7+Zadw97Hnyc5sYWvv+d5wkO9nDyi4tUuExcvnARu9vP/oP38uyT
      j3Ctp4uXXv0usiKw2sxcvHKe631TvPbaD3nwwXs4+PhTNNX5iCUS2OxOAMbGJ2lprOark18g
      uf3sv3s33371FcYHu/mHX/2WeDoFquC//vxXyFYZsyJhddgQAtRMEofXhdPrJZUI4fC6cLg9
      pJPhwutsLk2gPsDoZPTmdw5P8vKr3yeRmgDAJKv8/X/4O+59+GnMZoHTbsXptmN1V1Jd4QYg
      K7K4nDZcbjvprHrL/8gGc/Pij/6U1Mhl/p+//xltd99brAAiEeHDD94nnJX55sSnnPjmEtt2
      7ubr40f40U9e4+ixM7TXVRTOl6T8P1mSqbRLfPDhh6SEjVNHjnD6cjdelw0JkBUZSZJAMlFT
      6UK2OGluaQQgG4py5vwl/NXVeB1Wzl+6gNvjRpIVTJkwH3/8MbGUiatff8X4dISmllZOf30G
      gAq/l4HhSV760Wu8+Nj9fHn6NGe/+ZJ4OoMkVHY3N9M1MITJYqHB5eatt95lYiLNYPclRhMO
      Ri5+wxu/fosdex4iePksv3njLbbddZDRK+f5zRtv0dayleDIGJU+J/ovLUkSspT/1X328bvg
      8DPUf4PGmnre+t0f6OyZIjkxyInT3/DFqRPUVtXz1m9+x+Xr4/jsyi3+ExvMh8li51/8y3/N
      3/zrv2Lfg4+D0JFKJkQoFBKpdFqEQ1NiOhwRqhAikUgIVVVFIpG4eW46JdLplFBVVaTTaZHL
      ZcXk5KTIZLMiNDUpQpGYyGYzIpPNiXQ6LVQ1J9LpjMikk2J8YlJkszkhhBDpZEJMh8IilU4J
      IYRIJuJiYnJKpNJpkc2kxeTkpMjlciI0lT82OTEuorG4EEKITDIs/tM//kqouu+Qy2XFsePH
      RCabFUJVxcT4mIgn8s85NhoUqXRGHP7kkEhlcyIRj4qJyWmhqqpIxqNiYnJq5nVMjE9OiVwm
      Jf7LP/xnkcmpZb+zEEKkUkkRCoVEOBwRqqqKyfExEU+mRCadEqFQSITCYZHN5cTUxLiIJ5LC
      YG0hCbG+UyEmJibwV1ait6qFEPkZZ4VkUnGiSZUKr2vF1zJYm6x7BTAwWAlF6wDZbPZOPYeB
      wS1DlmVkWSYVD/HhJ0fYf9+DmBUFr9tZPAMkk0nMZvOdfFYDg1Unm81itVrpvvglaU8bI5dP
      MxmJ462pK54BJElCUYwohcHGQrNsmjp28tGhT/H6q3HIZuxyungGSKVSWK3WO/agBga3gvnk
      et3nAhkYLIVEZJqJSBazDEIRhgIYbC6uXb3GaCxLnduPalUNBTDYXCRTWeySiqooWMyK4QMY
      bHzmk2ujIsxgU2MogMGmxlAAg02NoQAGmxpDAQw2NUYY1GDTkE3F+PiTw1Q3bcFrtdDQFDAU
      wGDz0Hf9Eq27H0CMdHPy6x5a+ysNE8hg89DQupWrZ44Rzcns3NFMQ0e7sRBmsPGZS65joUnD
      BDLYXKTiUUKxHIqkIpQN0BnOwGApdHV2MhrNUGn3oFpVwwe43QghMMqw7xwT41OkoiEyIl8q
      uaF9ACEEqiqAfJeIpXaKWI3OEqXEYjEsFgsmk+mWXN9gNpuqIEYbYSVJIhgc5fdvvkt3Ty91
      tTW8/OKzmExKQfBK/9dey7JMXV0diqLcEiEdGBggEAhgNptJJpNYrdZbdi+D+dlwChAOhxke
      HkaSJFRV5aGD95LJZvjqzDmqqiq4Z9/uRQlaPB6ntrYWj8ezqoLpcDhwuVx0dXWhKArZbBZJ
      knA6nbS0tBhKcJtZ0z6ANpov9V82myWTyZDL5ZBlmScfe4gf/+hVjh3/klwut6h7p9Np+vv7
      GR8fX1WbXZIkvF4vcLNYWwhBNBolHo+v2n0MFseangGEEAwPD5PNZosEXHuvVDCFEHMKeF1t
      NWaLmYuXr7Fvz65FP0MwGEQIQXV19YpHZyEEiUSCcDhcVqmmp6dxOBzGLHAbWdMKABCJRGY1
      7JIkacmjsizLeD1uIpHokp8hGo1SXV295M+VIoRgcHCQVCpV9v3p6WkqKyux2Wxl3zdYfe6Y
      AmgCHI/HmZycBGbCUrrRT1XVsiP6XL0/51MKSZJ4/tkneOudj2huaqC5qWHRz6o9o9/vX9Ho
      vFAIVAhBOBw2FOAWMTE8wNFTX/LwE89RPdPx+44pQC6XY3h4mEgkgqouvWd+OUFaaGbwV/j4
      3qsvMjg4vOT7jY2N4fV6MZmW9ysTQjA6Oko6nZ73vFQqtWrNfQ2K8dc14PZc5sIXn2F2uPjk
      vY/unAIoioLZbC4I/3LMmlK0z893La/HjdvlLPvefGSzWUZGRmhoaFiWcCYSicJMNx/RaJR0
      Or2h1mPWCvkAhA+b2UWV10TP1jucDKdFP4LBIMlkclWUQM9qX89qtdLW1rbkWUBVVXp7e4nF
      Yos63+l00traaswCq0R5uRYIcYedYEmScLvdWK1WRkZGCIfDqyq05UwJWZZnVoiXbnalUikm
      JiaoqakpPP9iniEUCi1a+CHfpFhVVaNP6y0gk0wQS6lIqCCtkc5wFouFpqYmBgYGCIVCq64E
      GrIsk8vlVjSyjo2NEY1GMZlMVFVV4XSWN6eEEKTTaaLRKOPj40u6Ry6XI5PJzAoKGKyc7q5O
      gqE0PqsL1baGOsNJkkRDQwPJZHJBR3G56NcQVkIikShcR4vbaxGeRCJBJBIhGo2STCaXfY/e
      3l4aGxvnVDCD5TE8OEIkncNZ68QEaysZTgjB1NQUw8PDhZ9XimbyaKkRelZjpmlubkZVVaLR
      KNFodM5NRpZzr/r6evx+/4qez6BYrvMWAKgCJNbYQpgkSVRUVJDJZBgbG1uxgOqFfqHraNmi
      S50lBgYGFvQnZFlels8xOjqKoii43W5keU1nrawbNL9K+22uud+qJEn4/X5MJhNCiBU5gtrI
      P5cdXeokq6palE26WCd3PlZiw2ezWfr7+wmHw8u+hsH8rDkFADCZTIXUg5U6rQsJqPZ+Npsj
      mUzNOj4fc81QmvLofYOVoJlxBqvPmlQAzRTSsiZXY4FsIRNieCRIOBKZdZ5WH7Dc+2r/L6cg
      R2NiYoJodOk5TAYLsyYVAPKjXmVlZZHwrUSIVFWdV5DramuYnAqRyWQKxzQB1tvvizWLymWq
      LjfFIRaLFbJSDVaXNasAAHa7nfb29sLOlcsRAL05Mh8mk8L2re2zfI7Sz+lnk/muudrx+2Qy
      uaKwqkF51rQCSJKE1WrF5XLNOr4U0jPFMblcbl4l0vaT1d9nvvNVVb2tC1WGAqw+ayoMWg5J
      kqiuriaTyRCNRgsCqQnqQuHFRCLJL9/4AwAOhx2z2czde++itaVp1rnatSORKG63qyi5Tnt/
      sesJcymP3gxa6owWjUbx+XzG6vAqsqZnAA2LxUJLSwsVFRWFY6qqzjsCazb3+x99ykhwjJHg
      GN09fVy91sU77x8inc7MMo00obVYLFy8fA24GYHRTJ+FbHvtmvP5HMv1B2Kx2JKURquQ04d3
      53qWzepfrPkZQEOSJOrr6wuJc6XvlfsDnvnmPINDI1it1qIqrFgszvBIkJbmxqJr3FQAMw67
      janpEJX+YqWbC01BlrLgpSnBYoVPq3Wea7VeE/ipqalCwf3U1BSqqmKxWPD7/djtdiRJKtQf
      T05OFko+V7sBwHpg3SgA5IW0srISSZKK0iXm+qNVVfrzgi/yK4BadZmiKDidjqJz9aP70HCQ
      t979iOqqSl5+8VlcTsesleJyxBMJensH2L6to/Bs+lmgnHIsVQkmJiZwOp0IITCbzUW5SIlE
      gr6+vrK+TiKRYHBwECg/YIyPj+PxeBb1DBuJdWEC6dFWiltbWwuJYnMtRjU3NbBtSweZbBaT
      ScFqtWA2m/F4XPgrfEXZlnoz4EZvP4lEkpHgKH946wM+/ex4ITw63wg5OTnN6TNnC/lA+oWw
      +T6nKcpC0SpJkgiFQvT39zMwMEBvb2+hgiwcDtPX1zdnLlLp/cpdezOyrmYADUmScLlcOBwO
      EokEExMTRCKRso7o/nv20Hm9m1QqjSRLmE1m1JxKPJHE5XQU2fiaIFZU+Hj6iUfY0tGKz+dl
      fHySZCpdFI7Vzxia6XG1s4twJDqjcKYiH6XcirZ+JNZXxs2HfhZRVZUbN27gcDiKvv9y7PnN
      6gMor7/++uvaD7lcbtk1r3cCSZKwWCwF2zWRSMz6Q7rdLjKZDAODwyDy3zGZSiFLUsEH0MwU
      7f+qSj/19XXYbDZkWcZms9I3MIjH7cZkUrh8pZNILIbP6yESifLpZ8f59Mhxenr6SKVSSLJM
      lb8Ci8Uy53PP53iWUwJ9VqseVVXn7DKxFLSFx404E8wn1+vOBCqHJElUVVVRU1NT9g84OTk9
      69j5C1f4+psLheow/f+li2dfnP6aQ59+zqHDn5PN5ugfHObwkeNMToU4feYc585fIhS62evn
      5Kmv+PDQkTkFfDEmUbno1GJ8Be25jezR8hw9/Clw0+RdP8P9AmgOssPhoLu7u+i9J594mPHJ
      KaLRKDt3bM2HRUdGOX3mLPfcvbussOmpqa5CAgaHRvjFr/+AzWbl/vvuodLvY++enUxMTtHd
      0wvki+5raqoYHBphdGycutqaOcOPpWHV0tel6dkLjc6l6xUGswlPT3Hx1BG+uj6MKpk2jgJA
      XgDsdjsOh6OozaDX4+ZPfvIDYvEEFT4v4xOTfHn6G+oDdcDN0SCdThONxXG7XFgs5sLnPW43
      doedbCbLxOQUdbXVeaWQJKoq/bzy8vN09fSSSadpbKynwuclmUxht9tm+Qmd13toamrAbrPO
      UgBN4LVwqn4hbqk2+ma16RdDNJLiuW99hy8PfbixFABurhfcuHGjKCJiNpvxefNCXVXp54Xn
      niyK2wsheOe9Q3R29bBz+1ZefvFZFCUvoH6/jx3bOui50U8oFGZoOMixE1/w4gtPY7VYsFjM
      7Ny+pUhQ7XbbrFqD3735Pj03+jCbzdQHarhn3x62bW0vnKNfaS7nIC8GvcItZV1is8wYFpsd
      s8WCLIHFYdsYPkApVqsVn89XdExvF+sFS/vDy7LMyy8+w769u6ipqUSWpaIR+IH79tNQH4CZ
      8691dnP4yHEymeycawSzolIzxzKZDI0N9YyOzm68O5/JM59po1+J1lhOFdpG59kXvsX+x56g
      psLB8y+9sDEVQKsn0KIwmnDqzQoNfQzearXyreee4sEHDpSNySuKjMNuw2azYjabOH/hMpGZ
      PH1NwcoJLcwo2EvPsmP7FrZ0tDIdCnP+0hUuXLxSlIJd7rOlx+ZSAu3+kUjUMIEWyYZUAKCw
      9L8Yx1G/DlBuLQHygndg/z7+9I9f4/uvvojZZCanqkxNhwrKVU7B4GZ41Wa18uLzT1MfqOPi
      pauEwxHe/eATjhw9uezFKU1RE4l8pujA4DCHDh9b8HMGeTacD6ChzQITExNzjrAa8420siyT
      zWZ5652PEELgcjl59OEH2LljK+OTk7Q0NcyK1iSTKWw2a5FppNnjZrOJ+w/czXQozNlzFwG4
      eq2L/Xfvxq/LO1pMmFRz3M+ev8TVa100NTaQTqd57pnHF5W6YbCBFQBm1+bOdc588fp8NqVg
      YnKKRCLJlo5WTCYTTz/5CIlkCkVRCgKZSCQ5euwUV65d55knH6W+vg6f11OUDqEpw1OPP0wo
      FCYSifLoIwe5dr2Hg/dXLDqUqV0rl1M5/dVZcjkVSZJ55dvP43G7Cv7NYjcE2axsaAVIpVIL
      5saUM3lKjymKjM/noamxnl07t2Ey5YXebrMWPgNw9NgpznxzHoB33j/E3t07ee6Zx8umUVss
      Zn7w3ZfI5VQsVgsXLl6Zde+FlBPAarVQX19HIpnk+acfx+1yLroVjMEGV4C5Ck80gSzXNKvU
      ZNGuUVdbU9ip5uz5S5jNZrZv7UCSyuf3q2qOoeEg8UQSh91WeA59aNJsNmO1ylzvvsHJU1/R
      1tKEe2b01p5lrkU6fVTrsYcP0tXTi2um67WWHnH23KX8ubI0kz/lZEt728x1b14/nc5w6fI1
      OrtuoMgKsiKjyAoms4kD++/G4bCv4l9lbbGhFUALh8bj8YJQZTKZwmu9eaB3hkvXBwDuu3cf
      5y5c4Te/f4dkMsWjDz8ACPLBzfznHzx4gGud3USiUYSAaCxGNBotKEC5jhP5rnIxkGA6FMbj
      cRe9N9eMoE/ZqKjwcq9vD3AztJtIpjh89ETR52VZxu1yFj63paONRx66j0QyxTvvH5oVNq0P
      1HH/ffuX/wdYB2xoBdAWxTRyuRydnZ1lzSL9CF4ufm4ymbhn313UVFfy7vuHuHvfXbNMG0WW
      MZlv/krj8QQffnyEhw4eoKO9dVYFm/ZzTXUlDz94P+cvXqGxITDreUqfUf+eJsyaMicSSYaG
      R/BX+GhpbmRwaJhMJlu4XygcKVzvy6++4cq161RX+ct+Z7+/AovZPOv4RmLDhkHLoShKobV5
      OfTmRTkkSaKxIcB3Xn4OVc1HYCRJKgiY1Wrl6ScewWq1FK43NR3iq6/PzxrJtfeFENRUV7Fr
      x1a+9dyTswS73PNp8f7Orh4OHf6cvv5BhoaD+ZlLCCor/Xg8HnxeT+HZ5iISidLd01f2vXg8
      vuH9iA09A5QihKCiooJoNDpnu8GF8m8kSaKutoaR4CjHTpymuqqSxoY6OtpbAUFHewv/zT/9
      Iw4fOY5A8NwzT+DU2dClI3tpUtx8q7d6M21yappPDn+Ow+5gZGQMj8dFfaB25l52QqEwZ89f
      WvovSUc0Gtvw+xRsKgWAfOnfYhaY5ko/1o4H6moLXaG3dLQVmSE+r4eXX3wGIcBsnv0rLpfp
      We6cuZicmuaN376N2WLhh997mfGJSRrq64pCvlarFYfdTmwFew87HI4Nn1a9sb9dGWKx2KKb
      zc4Vi9cE7cD+vQQCtbNWkCVJwmQylRX+uSi17ecjkUgyNR1iS3sLFouZhvqbWa2a4xyLx/H5
      VlbjazJt3JFfY1PNAJIkEQgEuH79+qJXScvNBNrr9rYW1DKmy2Kvq6ec6VMa9tSHaE2Kwp7d
      O+dUmJGRUQaHRsq+t1haW5qNGWCjYbFYqKqqWlLRiF4INXu4cIzyAr+YHKSFzpnLH3HYbezY
      vgXvTMi0HKNjE/Neez4URaamppqHH3pgw6dJb6oZAG7WEcPSW5JoqRHadTS0dAi9KVTO2S13
      vXLPVxruLL2mx+PmpW89M+9zhpa5p0BHeyuvfPtb7N1z14Yf/WETKgCA1+slFAqtqOW4Xnj1
      HR/KObeLHem13qSaOaTvZaSdp60Az6e0uVyOWGzpzm91dRV/9Rf/LRUVvoVP3iBsSgWQZRmn
      01noNboaWZP6ldm5IkdCCAaHRhgbnyiO9yNRV1dDXW1+UxB92LFcVddCz6soCls6WhkcGlnS
      9/rpj3+Az+dd9PkbgU2pAEDRTpRLEZLSaI3+tX4b1rmS7ASCjw59Nkuo3S4n/+xP/wljYxMM
      DY2wa9d2XDPd6/T3XIzvIEkS9917NxcuXmV8YuHd6QEsZjNNjQ0b3uYvZeMbeWUQQhQVzcPi
      a2JLV3G1VVkhRCHFYj4Hu76utqgnqUYmm2V6OsTpM2cJBGoLTbu0e5ZLoZiPRCKJy+VctDnT
      0dFWVI+wWdiUCpBKpWbtRbzYqJBe6OHmxnqpdJpjJ74sElbNptebMbIs88hD989q1JRKpfnD
      2x8SjcbJZDL0DwyRy+WK6pj1cX6YX2kdDjs//N7L80aK9Hzn5W9tCqe3lM33jYFwOFzW7FmM
      EmhCWHqe1WLhrl3bZ123paWF+vp6PB5PwbYP1NWwb++uWdeNRPKba3999iJ9/YOk0zcr2crl
      Bc1nummKuJjCeLPZTF1tNalUmqvXrpPJZDjy2TH+w9//jMNHPr9lG5evBTadDyCEmHcleLFO
      cakSKIpSaLirva9dw+fz4fV6yeVyxONxwuEwjz/yINe7egiFbmZnZrNZwpEIba3N3LNvdyEP
      f65nWug5JUli91076OsfxKQoZHURJVmWObD/bnbs2Eo2m8Pr8/Lp4aP843/9Nc1NjYwER0ml
      Uhz57BgtLc20tTbP+/tYr2w6BVjsXltzZWKWO6blAZWr6NJHe0wmEx6PB7fbTSAQ4N/8q7/k
      8tVrdHf30tvfz/j4JKqqMjQcxOl0FDbZmGsk1zvHuVyO4Og4NdWVRVGk7Vs7cLtc7Nq1k8+P
      n+TYsVO43S5+9INXuXf/vqJzhch/p96+/sIxl9NZqGfYiGw6BVhMHlA5YZ+ryZReyPWOMeRr
      CMo1yNVWlFtammhpaZpxoHN8fvwk//kffoGiyORyKooy+556pdDPDKlUml+98Satrc089MC9
      VFR4MZlMWK0W2lqbkCXBT3/8Q7794vP5DUBm9hXQmJ4O8dnnx2c9q9vjorLSv+DvbL2yqRRg
      IfNnPvQmz1x5PKWLYXa7fVGpxNriVmdnF1WVfr7z0nMoilzYyaamphqrxcLk1DTHT37Jtq0d
      7NqxDVm+KcCyLONw2Om83k1nZxden5cXnn2CpsZ8QVA8Hiebzc6KCqmqyjdnz/PG796iv39w
      9sMJuHDxMvv27l7QP1qPSEL310ylUnNuv7MRiMVi9PT0IEn5TTZsNhvJZJJsNksikVjQ2Ssn
      AKW5/PpzKioqCAQCc5pT+vz+0dFRurp6yKk5/DNCKoTg7fc+pqv7Bm6Xi3QmQzgcwWwy8eTj
      D3PP3buLrhuPJ/j8xJeMjY0XUqJdLiePPfIA1zq7SaezPPTg/VRV+onG4kxPT+Pzejjy2TES
      ySTfnL1IPJGY9Z2bmxr5n/+nf7Vua4Pnk+tNMwMIIZiczC8K1dbWFvXC1yI7kUiEYDA4Zx8h
      baFLj76PZ6k5FAqFUBSlqEud9l5/fz8OR36hKxwOk06nqaysKMwmmqnz+CMHiUZjBEfHeeap
      R7l2rYtINEZNTRWqms/5qfB5kSQJh8POs089WniGs+cvcfTzU9TVVnPi1FdkMlnOnr+IzWol
      HInQUF/Hd7/zLQ7cuw+A1pYmevsGOHbiy8KzSpLE4489tK72jVgKG/NblSESiRCPx5FlmXg8
      TkVFRcE80Wxyr9eLw+Ggv7+fRMlIqDFXfQDM7g6hqirj4+NEo1FaW1uLzKF0Ok04HCabzWGb
      aa9S2stHCIHH4+aPfvAdjp88TVtrM7tnQq2d13v42S9+S2NDgKeeeLhs2vSeu3bidrloaW5g
      dGyCkZFR9u3ZRXV1JQODw6iqQJYV8sX90NRYj8lk4sSpr4rMuvpAoKhb9kZi0yiA2+0ubC6X
      zWbnFGSLxUJTU1NZJZir9aGGPlVa76xqQq0oCplMlrHxMTKZDLFYnDff+YgffPelQie5cr6G
      LMs8/OB9RU24Tn7xFaNjE2zb2j5n1qnJpNDelg9f7r97N8lkitYZp1vzDYQo7kRdU13J/nv2
      0D8whCxJpDNZqqoMJ3jdo8/lX2g615Sgq6trVjZmuWiQJux6c2hsfJILl67w6EMP0NHRgaqq
      jIyM8PXZCxw5epz21ub8Bhp11dhnwoz665YLqepnl+eeeYIrVzsLCpZIJAtVaNo5+izV6qrK
      wnfQrqf/X3styzLPPvVYoddpKpVGkRdfrbbe2JQrwYvBbDbjcrmKjpWO0Br61WFNSWRZoq9v
      AJvdgdlsRlEUpqamCNRWs/euHYTCEaqrKtna0YaqqkXrCNr1Su+tD7M2NgSoD9Rx6fI1Rscm
      SGcy9NzoY2o6VBBe7dn0Qq9v4lt6XmmDX1mWsdttS96gez1hKMAcSJJEdXX1LCWAuXv26B3Y
      qko/P3nt+3jcrsIimNfrxWRSuGvXdtScyujoOMHR8VlVZvNxU1Dz+wT/4Lsv4ZypML8AABeg
      SURBVHDY8HrcdHS04vN6FrWSXZpKoc8DKv1sLBZb1Par65FNYwItB5vNRnNzM9FolMHBwbLF
      KeVWfrVjNpu1qNObtonf+Pg4e/fsJJFMcr3rBkPDQQJ1N/cSK2emlHNyGxsDWC2Wmz7GTEh2
      rjUL/SJdqUlVep/S77RRN9swZoAFkGUZt9uN3X4zBq4XLn1maKmg5nI5hoeHCzu3m0wm/H4/
      ZrOZluZGtm1p54ED9zA8HCzY33MV02jva1VikiRhm4lt65VRr0TlZirNzCn9V66LtPY8Nptt
      w64PbaqFsJWQSqWYmMhXclVWVpLJZAgGg0V7E5euA2hCabVaqa+vx+FwzKQtpJicnJxp0RIh
      Fo9TU11VuFepP2AymWbVIkeiUTKZLP4KX+Fec43S+s3A9dfQ/6xvFFzqM/h8Purr69etEzyf
      XBszwCKxWq0EAgHq6uqwWCw4nU4aGxuxWq2zBEoIQTqdKcwOqVSKYDB4c+S22QgEAnR0dHDx
      cie//f273OjtZ2RklHg8URA8bYbRZhDtPjd6B4B8oppG6Wykp3Q2KJ0Z9HUG+f0Qbs4KQgi8
      Xu+6Ff6FMBRgCehHeMiHS9vb22luvtk/RxO23v6BQuzfYrEQi8WYmpqada3p6RCTU9Mc/uwE
      Vzu7uHDpKplMBkVRikblUlt8YmIKq9UyaxEOih1a/YiuN680P2GuRbxSNGXYaCivv/7669oP
      820pb1AebfHM5XKRTqcLDXMr/RXIsozP56OxsRFZlsva0oFALblsFkmWCI6O89DBAzhnUiTm
      Ekqvx01Pb39+dNZVfJXG9hfqHjHfd9ITiUSYmprCbreXzW5d68wn18YMsArk83AcNDU1YbPZ
      CoKby+UKjXhrampwu2eXJzrsdmqqq+hobyWdyTASHC1cU7PNSzfMkCSJe/btprrKX7Sqrbfh
      FxMKXSza6L8RSyaN4X4VMZlMtLS00NPTU0ioSyaTTExM4PP5UIVA1pkdnde7+d//z39PPB7H
      43HjcjpxluTpa+hzhCCfdqGNappvUZqst1wFKPc5v99fFAnbKBgKsMpoC17j4zc3wc5kMgwO
      DtLd04vL5eKeu/ciSRLB0VGEEDgcdmqqq1GFyoVLV2cS0GpnrSto6CNEenNH+1+fsrHUGH5p
      FAgo1DZsRAwFWGUkScLtdhdCplryXSgcJp3OMDIyQjTajtvt5oH7DqDIeUe4PlBHJpPh/Y8O
      88nhY9hsVu69Zw/tbS3A7AWtcpGcUodX70AvNBvonexyi2gblY1n1K0BNGfXZDKhKAqSJDM2
      Ns7A0DAVPh+RSL4Q3mw2sW3rFpqbGhBCxWqz8sKzT2CzWQmHI/T2D/LRoc8YCY4uKrwJxSvF
      ixn99ZGgcvlDGx1DAW4BWu5PJpMlk8nM9PAP0N7aTNWM46oJqN/vp7W1lbq6OmxWK6NjEzz7
      9GPk1Bxd3b309Q/ywUdHSCSSczqhpeFZ7Zj+/3Ln65Vlswh8KYYJdAuQJKmQux+PJ7BarQgh
      cDrsZLNZVFWdUQwLsizjcrlwOp243W6GhoO4XS5yuRzpVAaz2YTNbiOn3lwJLmej6xtvabvb
      az/rZ4KNnNezHIwZ4BaRT4GWsdqshVVWt8fN6NgEnxw+Rv/A4KxEukQyic/rIZfLkUlnicZi
      2Gw2WpubMM/s1li6MKYphF7QhRCFhbRSv6BU+DdqeHOxbN5vfouxWCykUikGBoYJR6Kk02k+
      PXKMUChMS3MDQp2dfFZVWUkimeLjTz4jFo9js1lxOu2Mjo3T2dldMK30uTuacJfrTKFPctM+
      U8pmFn4wTKBbhuYEu11OrBYLyVSatpYmKiq8tDQ343K5ytrtD9x/gEwmS1d3LxaLmfGJKQ7s
      38vgcBC7w059XS0CgdVixWw2zeofqqGqKmazeVYahD6btFSJNiNGNugtIpvNcvbsOd58+wMe
      eeh+GhoCBWFramrC6527D78QgqnpaaLRGJMT41gsFj7+5CjRWAyhCpCgqtLPww/eDxRvs6o3
      kfToF9JKG2tJkrRgwUtLS0vZlez1gJENegfI5wF5+aMfvkogUAvcNE+mpqbmHXUlScJfUUFT
      YwMtLfl1gIMP3Mve3TtRTAojwTHcbheZbKbI7tcoTXMGCjOF5qBrz7jZZwBDAW4RmqApijyT
      siARDufj//F4fM7eQ6XX8Pl8OJ1OnA47/pkEu+qqSmKxOBazuSgFujTlGW4Kvj6zVJsJ9CWc
      mxVDAW4herPkg48/JTMTAtUWyBaLFkbNZXM01Nex564duJxOTn1xhrPnLhHR7XVWWh2m5QeV
      myVKi+A3I4YC3EL0Ycfmxga+PP1NQSC11eCF0ApoADweF16PB5fLSWNjgOlwhGvXu8lmc0Vh
      UQ1NuEudY/3/mxVVVenu7jaiQLcKVVVJp9OFnkG7dm5j65Y2pqZD+LweRkZGcDqdhfj+YlAU
      hdaWxsLs8cKzT5T1AUqLc0pZ7XTp9Ugul+Ps2bPGDHArUFWV6enpIjtcCIHFYkFVBdc6u4Hi
      UsT5KG1lrn0WIByJFjbCK63umqsgpnQleTFsNGUZHR3NF8rc6QfZiGSzWUZnUp2BolG6tqaK
      6io/Qgi6u7vzO8v4/fj9/sK55Si137VUC5fTgdNhL4rv6+85V2an/tk2mnAvhsrKSnbt2mUo
      wK2gVKD0he2akKqqSjabIzVjJkUiEUwmE06nE5/PV6QIJpMJm81GKpWaZb7od6lXFGVWDcBC
      wr1ZzSGLxUJfX59hAt0KTCZToSCl1AzRhFUIgdlswuPOd55LpVJEo1GCwSDhcHhWn9C6urqi
      nH195Zc+3q+/72KZrxh+o5LNZunv7zcU4FZQmqNTrnilnGJoAj44OMjw8HBhN0tJknA6nbhc
      rqJrl47ayWSKRPJm2nS5FeHlstG6QiiKwv79+w0FuBXkcrlZza3K2eD6lVhtQUsb2aempgpd
      5SAvzBUV+Y2sS3N/NCWzWMwkk6llV3TNN2sEg0Gmp6dJJpNlu8itN4QQTExMGApwKzCbzbNq
      aMtFcfT2t36m0MyfTCZDf3//zA6QY0VpDPpyS+16sixTWbLb+2JngHKp0nqy2SyDg4Ncv36d
      UCi0qGuuZUZGRpienjaS4W4VsViM3t7ewqhe6mjqozX6GQAgHI5gt9uQJIlkMsXpM2f56sw5
      vvvKS2zf1l5YX9CUpVxOj94XWOyi12KdYX2rx/XgO5ST67GxsXxnjTv0TBseh8NBc3MzZrOZ
      4eFhojPpCqW+QGkURpIkLl3pJByOsG/vLrq6b3Di1GnMZjM9vX08/9xTCCHIZDJ0d3fPae5o
      gq8pSv/AEPFEAlmSC7lBsiwVXhfPLrqyyZkDRa/J+xt33bVrXShAOcbGxjh37pyhALcKSZIK
      ewv4/X5isRgw94bbeiXweT3YbFay2Rz7796L1Wrj1Jdn6B8YJJFIkkzmt26SZZlEIllopai1
      StRnfmrXv9HbX7L5HYA058+Fn6Sinwr3/ev/4c/XrfADbNmyhRs3bhgKcDvQ2gkuZF5oSrB9
      W0d+dgAUWebuvbtmojAqvb03ZmYO+OjQEbq6bxBPJLFYzNRUV5FMprBYzLz8rWfw+ysKWafb
      trZz/ORpXQQJtM3xyv08H7lcjjd++zZ/9Rf1+Hxz1zWsZcxmMw0NDYYTfDvIt0YpP1pqkRd9
      ZmYhMjRj48fiCe67dx/33Xu3TokEXT29hCNRstks8Xgi32E6OEpf/yDnLlxBCFFYk/BX+Nix
      bcuq9fa83tXNpctXV+Vad4JgMMjU1JShALcDRVHKJr3pq7KAWU5sLpfjo0Of8fa7HxWVMWrv
      P/Pko4VNtTVMJhM2qxUhbu7/Jcv5moRXvv08P/3x93C7nKwUh93Oju1bV3ydO0Uikcj7UEYU
      6NajxZxHRkaKjpeWMpYelySJZCqFLMlYrRay2RyqmiuM4rlcjt+/+T69/QM0BOrYu2cXtbXV
      WK0WbFbrrP0CtPj91WtdvPnOB6jq8he2FEXhz/70pzz80ANr3hcoJ9f5HTBThg9wO9Aqu8bH
      xwvdnEv785S2L9Fe26xWXcaoIJXOl0FaLBYUReGxRw/idDhwOOxFPf9LE+P0K82NDQFMiom0
      unBV2lzkcjk+PfI5zU2NOF1O/BW+Na8IevI7YNqNGeB2IYRgaGioKE26FE1Qy2V26k0l/YbZ
      mnJkMlm+OnOWlpYm6mqri9YWtM9pCpfNZjl67BQnvziz4u+lKAp2u42//Zu/pqE+sOLr3QqM
      ovg1gCTl9xabD30Jo/Zz6Qpt6UyhCbksyyBJ/OGt9+m83lMQfCEEQ8MjDAwMMRIcK5z7+KMP
      smvnthV/r1wuR1VlZdEeZ+sJwwS6jVgsFux2O/F4fM5z9GsCpSO/Vk+sb4KlvW+xmHno4AEc
      Djt9A4Ns6WgFIJVOc+qLr7FYzPj9PoLBMfbu2QnAi88/RSKRpOdG34q+V2ND/brdWciYAW4j
      c3Vn01O6OqxPqNMfK93vVzu+bWs71VWVmEwmItEYh4+coKLCRyqdxu1ysX1bR+GzJpOJB+67
      Z8W2e29fP6lUakXXuFMYCnCbWWwmpd5p1R/TMk31xe2aAqRSKUKhCDXVVXR13+Dy5WuMjI5y
      5dp1AnW1OF1Ounp6CwokSRLNTQ3Uz/QtWi79A4P09g2s6Bp3CkMBbiNaDs9Szi+Hft1A2zxb
      E2qH3Y7JpHDl6nXaWpt57unHaWtpon9gCJOiEIlEi6JQkiRx4N59K/peJpNCbB6zbi1jKMBt
      RD9yL5a5qrvKFd2YTCamQyGSyRQvPP8UNTVVeD1uHn34ARRZJplMcfD+/YVZSFOchkDdsmx4
      SZLYt/cu/vinr3H33t1L/vxaYH16LuuU5SgA3Bzp9XW+pdme2qzQ3NRQFAFyOOxIksTTTz1K
      b+8AiqKQzWaLIk1d3b0L9gYtR2tLE//yv//nmM3mdbUGoMeYAW4j6XR6WZ+TJImampqyM0Fp
      X6DStApNEXxeD3v37CQciRQJuxCCb85dWNZzwfx5TusBQwFuI1FdC8Ol4vP5aGtrK+Tsl6ZQ
      l9YKa+9pWytp/yxmC7J8s5NEOBxlfGJqzvvOh7yE9o5rFUMBbiPLbUdYSIuw2aipqSkc06dT
      6M0efY5RNBordJFQVRWr1YIsS4Us0Vg8hte7vLbnvb39dHX1rOtieUMBbiM+n2/hk2YoVGSV
      xPz9fj+BQKCwIKZvf65PddBs/OrqyqKSSX15piRJdPf0MTU1vazvk81m+T/+7f/N58dPrVsl
      MJzg24h1JkNzoZmgvb29KH26tBje7/fjdDoZHx8vFKiXdpUoXSDT7qvvQqGqKg8dPEA6k+H0
      V2eXJcSxWJz3PviYBx84sC5Xg40Z4DaidXgrRRNQq9WK3W7HbDYX/dP2BdOfb7PZCAQC2O32
      Qr5QaURIHzWaK8ojyzJPPvYQzz39OOZlCnAwOMrE5FThXnpFKtcSZi1hKMBtRIvm6LcakiSJ
      jo4Otm/fzpYtW2hvb1/0SKooSqFXEBR3nSt1iKHYB9FmAe0Z9u3dxfPPPrGsTfMymSyRSBQh
      BB9+/Ck/+/kbZDIZhBCMjo5z9PMTa1YJ1t+ctc7R9gTu6+sjEokURu+lbJihx+124/P5CIVC
      cwqZfmbQXpeeK0kSd+3ajqIoxOMJ3B4XZ89dorund0HhFUIwPBwknU7z81/+llwuR+f1Lrxe
      L1PT04yOjs2kadesuXR7ox7gDjE+Pl6oEGtsbFySg1yKEILx8XGCweC855UrvSzNONVfU1UF
      E5NTvPfBIYZHRue9dkN9gKamBk6eOl32fZOisH//Pv7iz//stq8bGPUAa5DKykpqa/NJaJOT
      kysyESRJoqqqiq1bt+JwOOY9d6FiHL3zrCgytTVVvPrtFxasIx4cGp5T+AGyuRznL1yif2Bo
      4S90GzEU4A6hObKQ3zRvsVsmzXc9q9VKW1sbbW1ti55R9KO/ZiadPX+JM9+cB/Lmk8fj5uAD
      967o+QASiSRfnl55FdpqYijAHcRsNlNfX09HR8eyfYBSJCnfSbqhoYEtW7ZQXV2Nw+EolFGW
      Q191JoRg185tVPi8Redv6WjDtMJnNJlMPPTg/Su6xmpjOMF3EKvVest8Lm2G0a6fSqUIBoPz
      zjT6QvwtHW3AzciRy+lg29Z2Ll3pXPYzvfjCM9TWVC/787cCwwneRAgh6O/vJxwOz3lOadWZ
      PtUiFo9z5cp1orEYN3r7GRqe3+kuxWQy8c//2R9z8IEDt9URnk+uDQXYZKiqytTUVGGTuFLK
      hUhLj+eT6CL8x//yyyVnuNZUV/G3f/PXVFQsP+q1VIwokEEBWZbx+/1s2bKlaBGt9Bz9inK5
      nCSPx82eu7Yv+f5/8k9fW1P9RA0F2IRIkoTZbKaurm5WakbpSvJ0KMzY+EQh1UJ/jfb21kXf
      U5Zl/vinf8TOHdvWVP2AoQCbGEVRCpvv6dGHRuPxBCe/OFNkLiWS+ZbsQ0PFrR7nQ1VVYtHY
      mkuYW/bT9Pf3F0YEt9td2Oe2lGw2u+6rhjYyDocDm81GIpEoOq7lCjXU1xGLxZmYnKamOt/Y
      S5IkPvz4CNeu9yzpXsMjS3OabwfLUoDJG1eYGA9jsuVXHZOxKSanQ/Td6KG1tZXBwUGy2SwN
      DQ2Ew2H8fj/hcJjKykqy2Sxer5exsTGi0Sgej4fx8XG8Xi+SJBEKhUilUrS0tDAwMMDBgwfX
      3KixkcjlcgQCAYLBYGETDw3NDGpvayGn3pwBbFYrTY0NqAKGh0eYml54zzBZlnnh+WdW9+FX
      gWWZQEKo2o4KANzoGuDtN34NipXPPvsMl8vFxMQEgUAAVVXp7e1lYmKCjz/+mI8++oh0Ol3Y
      cfDixYu4XC6CwSDDw8OFkefQoUMMDg4yOTm5al/WYDZmsxmHw0FVVVXZxbh8twkFmy6KUldX
      xyuvvMRf/os/49/8j3+5KKdWVVU+PXx0zTXQWlYYNB0P0zcwjJBmetVbnUi5DBU+D6lUir6+
      Pjo6OgiFQlRUVBCLxYjH4/luvJJEQ0MDU1M388f7+/uLthOCvOnU29vLvn37Vm1TB4O50VaD
      g8Fg0aCjL7NUVRWbzUZ7e3vRVq19/QNc6+xCQgJtf7Gi1zcjSU1NDbS2NK//dYBkMll4PdcG
      EAbrj2w2S3d3d1ETLy0EmsvlqKmpobq6el35dPPJ9bKN63/37/+O5Mx0duDee3jhuafJZrMF
      ez2ZiGGyOpgIjlMdqJ5la01OT+NfQQqwwa1BURRaWlowmUyMjIwQjUYLxS3rUfgXYtkK0Hm9
      h/hM5KCpqRHUJP/x7/4TismCRA5hsbB1xz4siQzvvfs7oskU7S3tRMNhLC4PLquTyxdOYvNU
      ks1KVFVXUVtXSSoUI5ZK4fN56O0d5MXv/5Bqj7E6fbvQskoB6uvrSSaTdHd3U1FRQWVl5YYS
      fljldYCckLGb4EbfDQb6eui+egHFJBMcCiIj0Xn9CrlMjIZALUcOn8Dm8SEyCYb6bxCNTiLJ
      0Ny2jZ3bdmKxSLh8bmwmY6niTqEtmDkcDiorK1ctY3UtsewZoKamikQi7wd43G6QbXzv+6/S
      1dXFC698txBSq6mpoa6lFrvdTjKZJBKJEAqF+O/+4o8xm83Isszk5CRWi4XmlhbdCLOtbKWS
      we1FURRaW1vv9GPcMpbtBI+NjaPOfNRhtxUVehsYrCVuiRP8t//L/1bwAZ55+nH+5KevMTYW
      pLq6uNd8NpkgpUo4HbPbgRgY3GlWdYm169o5vvoqg8nmRVbTeP017O6o48LFS0xMR6muqkSR
      FMbGgjidLsZHp1BsHhxKHIsnwKMP7V/NxzEwWJBV9TDNshkZGa/HRSYtMTkZQhICFIVtW9rJ
      ZgRCBUnICGDrlq20tTSRSiew243FLoPbz7J9gGPHTxW6jdXXB9i6pR2Ye0MHoKigQn9OaWtv
      A4PVxKgIM9jUGBVhBgZzYCiAwabGUACDTY2hAAabGkMBDDY1hgIYbGoMBTDY1BgKYLCpMRTA
      YFNjKIDBpsZQAINNjaEABpuaonqAXC635hoXGRislPm2fi3KBjUw2GwYJpDBpsZQAINNzf8P
      Qo6WoauyrMkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='d - new transport' width='192'>
      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
      /wG1wPFbQootpQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='d - overview rent' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='d - rent' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='d - rent changes' width='192'>
      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
      NP8Pn/WPqAf+GHgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='d - rent counties' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='d - y change' width='192'>
      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
      /wexAsEsjN4LdAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='d - y vs rent' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO296ZMk53kn9sujMrMq6767q/qawQAkABIkCFEgaEOitJK81opaibKOjY1Y
      R/iTvvuTv1j+A+wIh/3J4Q/2ypLWqzNWIr3UUiJIHBSoJSiAIIDBnH1U131lZVXemf5Q87yT
      VX1Md880Bj2dvwgEprvrrcqqyud9n+P3/B4uCIIAESJcUvCP+wIiRHiciAwgwqVGZAARLjUi
      A4hwqREZQIRLjQUD+Ifv/S1+9MEtAMCf/uH/ic7EOrDgjbdeQ7/TwJ2d7rFP/N5P3n10V3lG
      vPbGd9Fv3sVuc/wQzxLg1s077Kf3fvweltNmk94+/viP/hD/9//zR9AmGv7o3/5f+Hd//h/g
      ODa+9Rd/gh99cBe+5+Cv/vRP8Kd/9hcw3Sjx9mmBGP6hPbZgtH6Mz29k8NMbt/DibILvf/Mv
      4MSS+NVfeBl//Tffxk5rH89eeQq24+LN176N23sdfO0X/xn+07f/FpwPfP23fwf5pALLdvCj
      t9/Aje19pHMVPLeZx+tv/wQvvfQy/ulHb8IX4vjFV1/Ct77zBlzLREqN49rzX4Y3uotb+wP8
      7Ku/iErCw4fbY6ymfPSnPt79px9j/enn8OrPfgE/evO7uLXXhqbr4DkBv/6N38R3vvlNIJ7F
      P3/1RfyHb34H2902vrC1Dsv38Np3vomdZh///OvfwN/95Z/ACgT8s1//bdTycXzzT/897EQR
      WWGG5mCGX/jlX8C3/vr/AxcAX/nKi/ijP/z3+NX/5nfw8hefh2vb6DZu4Zt//zYkMYbf+d3f
      gpzM4hu//Xv49p/9O/zorTfx/Cu/DP32j7HdGmLjqWtoDDTsf9yFLeXxpReehSxyj+v7jrCE
      hRPAAw9V4fDa62/jpZe/jL3r76M9CTBp3MZ3/v51/NLXv4HPf+5p2LMxOj0NgetDsHV8+NEd
      5Grr+C++fA2N/ggAsNfaRX/cx6/++jdg2QP88Mcf43f/1e9Bstt45md+Hl96qowPPr6JZ178
      CtbrG/jGv/wX6O3fwQ/+4SfIp+P48L33kEjncfP6u/jHd95FKSvDsF0k4jIAoNkY4zd/67ew
      ubWJLz+7iTe+/yZGjoTenY/wn777Fn7jd38Pz332CqzJAL3BDHB9YDbEx3c6UOIl/Nevvoi7
      d9oAAuw0Ovi1X/kq/vE/X0da8fHB+z9Ffm0DX/3SFXjJMl764s/g5S8+DwBo7OxBn/Txwlde
      RaUowXACiLEY/uKP/y3yT7+AbDyGtKoirSYASKivlBAA0LUJwIn4yQ/+Dh9vH396RvjksGAA
      PMfhlZdewN//6AZq+STy5Sp4z8TK5lWsV/L43nf/Hh9dv+cOcD4++PAWEooMjuPA8RwADhx3
      f3fjOIDjOPAcj3Iqhv/4t3+LiSXgnbfewA/evY5cNgmOA3iBn6/jBFSKKUCUsbG1CY6PoSDz
      GAUpKKKMzY0a3vnh2wvPzXE8OACV1RoCe4a1p55GrZjCd77zHdy4sXPvQjx8+NEdJKQYwAE8
      P18Dfn6ttdoWREFGMZdATM1hrVYBz3EAx4PjeAwH+/j41s7CB8fR3wHc+Kc30NA86N0WCvU1
      fOdbf4O33r2OjGzjtdffwvv/9I9QynX0m3dhWC5kOfbIv8gIZwMXrgQ7jgNRFGHbNgSBB8eL
      MGcTuD6PdErFcDCAHI8jLsvwA8AypvACDvFEHEEQQODnN4XA87AdGxwAUYzBdV2IgoDxeAw1
      lYY5m8DnYkglZPjgEPg+RFGE67rgEGCs6chksxAFHq5tww04yDEeg8EQiVQacVmCY9sQY/Pn
      5jkAvAhjqsGHiFQygUG/D0VVEZdi8MHDnGrwOQGJhIrAcyEIPHzwEAUOju0gJklwLBOTqYFM
      Jg3P99n7sc0ZfAhQE3E4tg1e4BGAR+B7EEURnutgZpgAOKjJJKaTEXhRQUKJQZ/OAAAJVYVl
      TGF7QC6TfjzfdoQD4CIqRITLjCgNGuFS49wM4LCD5WEOm2httPY81p6bAfi+f+B3nued+fmi
      tdHa81gbuUARLjUiA4hwqREZQIRLjcgAIlxqRAYQ4VIjMoAIlxqRAUS41IgMIMKlRmQAES41
      IgOIcKkRGUCES40TG4DvuXj/J+/BtGx0OvOOpn67hd1GC42dOxiOddy++TFmpnNuFxshwqOG
      +OCHzGFOhtjeb2Ft8wq67R7K5RJu37mNqWGhVKmh33wX6uomtm/fxdPPXIHv+wdYer7vw3Xd
      M11otDZaex5rT2wAopxAQvTQ2O+i12tjv52DIMagyDHMtC4kWUW7sYNKdR2CIAAA+z/BdV2I
      4olfMlobrT33tafqCJvOplATKgBAG2tIpVMA5nxsjuPm/7/Xb+t5XmQA0dpP/dpTraKbHwDS
      ob5WaoQPN8RHiHAREGWBIlxqnO3c+JTAtm1omsZ+zmQyiMUiyZEIJ8cFNoAAOzevA1Kc/abT
      6WK9XsGd7QYSiQRyuRwURcFwOMRwOISmaVhZWUG5XIYkSZGxRLjILhCHlY0rC7/x9X38j//T
      /4LvvfVD3Lp1C6+99hpu3bqFv/qrv0K/34dhGHBdF3/5l3/5mK45wqcNF/gEOBh090wJ/91/
      +9to9gZQ4wo2Nzexs7ODL3/5y6jX69B1HbIsI5lMRrt/BADnKIz1SaRB6dJt20ZMFOBzPET+
      4KEWXmvbNnieP/F1XMTUXrT25LjQJ8Ddroa/ePtj9vPvvPIZ1AupIx/vui5ikoTDkrVkTFEq
      93LhQhtAd+rgr6+P2M+/9EUXsd1tfOcH7yDmjFBd38L6lWdw/b33cGt7HxJnYGV1E09d28LK
      +hb67SYMw8CVK1fwzjvvQFVV3L17F5ubm+h0OlhfX8f777+Pr3/965HL9ITiAgfBh+PD6z9B
      vpDF9m4b7/7oB3jzu9/G2//4Op7ayCNeyCNdLOB/+9//Dygijxs3bqDb7eKDDz5ALpdDt9tF
      p9PBZDLBcDjE/v4+bt++jZs3bz7utxXhnHChT4DD8PwXXsbNmzfxs6+8gmKxhLvbd/FLV5/B
      xsYGJpoGBC6+9NLnEYvFcPXqVaiqCt/30e/3kc/nsbW1hUKhAN/3oaoqfv/3fx/dbqTn/6Ti
      wgfBXujyBY471IcPr7UsCxzHQZKkM7/uw1xztPbTtfZCnwDv32nif/7Tv2M//w//6lfw9Fr5
      yMd7rgtJlu8FwQEmYx2pzDxoHvVaGM18+JaGRCqDXm+Ap55+BuP+AOWV8qGBc4SLjwttAIpv
      oG7ssp8l38LN6z9FR3OwffOnyOezSBXXcfunH0GQBJiTEZ77/Au4fvM2fv4XXsUbr/0txlMP
      X/qZl3Hr3R+gsHYVreYOrpbL6E113G10YPRb+MVf+w3kU8pjfKcRzgunMgCiPX+aMeg3ISUr
      +PjjG5CVJDxch6YL+IVXtvCDn96GnBCxvb2PYvbXMBm0IaTX0d8fYa/dwff+4V28/NWX8NYP
      30a7P0ZcSeGrr34VH9+4jZdffPZxv7UI54BTdISN8NY7/4QXv/BFNPZaeO65Z7Bz+yYcQYYx
      6kBRsxiPBlhZu4rVSv48r/lYfPZzP4vvvvYafvM3fhOpdAaDQR/xRAKz6RSv/vzXoKoJZLIF
      mKaBp5/9EupraxgMhnj22efxy//VryLwPQxrNSQSKgzDxCuvfAX8IcW1CE8GThwEe7aB773+
      fTz3xVeg99q4+vRTePv1NxDIIlKpEnythfTmZ2AMBrj29Lwlcvm08H3/zDfTYWt9P4Dr3u9B
      jsVih55Qj/p1o7VPztoTnwCe5yMmKfCsKcYTDddv3kR9vYbxzIUYTKHUtjBs3kVt4+lPrCXy
      1u07+OP/98/Zz//mX/8uVkpF8LIMxzKhKHHo+gQxSYYgCMw4JtoEyZSK2zdvYnV9E4o0Nxzf
      8+YdbSEjuoiZjWjtyXHiVVJcxVe/+l+C53msrlSZ1dVCj1mvr57pIs4K3/dhWXbo5wCdmzeQ
      /MzzuPXO6+hNApS2nsbg7k9Rrq6hM9BQKWVw61YPX/uZK/j4zi46rS5SxRL0XhMzh0OxUobW
      a0JKpsELcXzh+ac/0fcU4ZPFqc6N8DHzafWLpTiP6++/B2NioL5ew/5QQ6FYwmDQw87eLnqj
      IRKKBDGVR0ZyMZ5y4NwpPvjwJzBdEZLo4yc378CYTvDx9es4OOgpwpOEC10I63R7ePuHP2I/
      v/KVLyOfy2I0HCCdzgAc4PlA4DlwPcB2bCQUCZbjI6kqGGs60qkk6xNQk0lYlo3AcyFKMdiO
      BzWuXLhjPVp7clxoA4jWRmsfdu2n04+JEOETQmQAES41IgOIcKkRGUCES43IACJcakQGEOFT
      A8/zDiiKnzciA4jwqYDrutje3oau65/o60YGEOFTAUEQkMlkIMvysY8zDAOj0eiRnRSRAUT4
      VIDjOBQKhQe2qk6nU4zH40f2uhe6IyzC5UOhUEAul3tkVPvoBIhwocBx3AGKzWg0wu7uLnz/
      9NTFkxtAEGAw6MP3A9g2UZDn/zZmUziuh6k+ged/slF8hIuPs9y4YSiKglQqdaZ23RO7QNNh
      G9976x187dWv4tbHd/Cll76A9t4Obu31IQseBATwYhJSag7XnlpHEAQH3thhvzsporVP7tpG
      owFJklAqlc70urIsI5FIIAgCBMF8U7YsC6nU0TKZhJM3xKgZlFMCOgMDsiTAMA20B33Ypo5E
      JgPYM8jxOPx7uVz6bxkPE71Ha5/MtaqqQhCER/a6uq6jNxzDhoh88ng1jxPToQPfw83bd1Bb
      qWIwHMELAqzX12DbFmaTMeRkFvqoj1yxgpjIR3ToaO1jWxsEAf7m3V38xw9a+F9/5yWIwtGe
      ftQPEK19Ite2NQMz28NGQQV/TGwQpUEjPJGopOMPfhCiNGiETwBBEDDV7U8DZrYLzXAQBEFk
      ABE+GTiOA9d1H/o5PM976Gt5/UYH//2fvQPXDyIXKML5g+M41Gq1Bz/wAdjf34ckSVhZWXmo
      53mhnsNWMQmB4yIDiHBxUCqVDiRWTovZbIZ0DKhm0hgOh5EBRLg4SCQSD/0cg8EAHMchkUjA
      tu3IACJcLoTdp0qlEgXBTwKo/P9Jd1OdBzzPw3g8fuTvZTqdotvtguf5BTcqMoAnAJPJBLu7
      uyGS4sPhvAzKdV1omnbs806nU/R6PTiOc+RjwvB9/0B2yXXdA9kix3FgGMaB144M4AmAqqoo
      Fosnnnv2IBiGgd3dXRiGgfF4jJ2dnUeSftR1Hd1u99h0aCqVwtra2rFjaX3fR6fTgWma6Pf7
      2N/fXyDhNZtNtNttAPMTZWdnBxzHYW1t7UDPQBQDPAGgdsJHBUVRUCwWoSgK+/lRTAbKZDJI
      JBLHUh5s28ZoNEKxWDwy4+P7PgzDQDweRyaTgSRJC9dXKBTYzxzHQVGUI2dHRAYQ4QB4nmcG
      lUgkHkn2BcCJpnO6rgvDMOD7/pEGIIoi1tfX2XPySzMdwtfL8zzK5aMHJ0YuUIRTwbIsbG9v
      wzTNc3n+RCKBer2O/f19TKfTIx/HHTES97Q4lQE8CVmGCA8Hnuchy/KZ+m89z0On0zk2WKcd
      XZZlzGazRxJ7HIdTDMkb4q133sUX7w3Je/65Z7C/cxed4RRCYEJRM9DGA6zUr2K1WjjPa47w
      GBGLxVCtVg/922w2w2g0Qq1WW3BfgiDA/v4+YrEYptMpVFU91hXieR6FQgE7OzuQJOmRxjfL
      OLEBxOQ4ONeC7fKIx+7NAOM5yAkRgZuFOWihuPkZaIMBKqUsfN8/cGIclrI6KaK1n/61wNxA
      DvvuRVGELMtM0WH5NZZfl+M4JJNJyLL8wOs5zTUHQYBWq4VkMolUKnWaIXkeREmBZ8/YkDze
      tSErabjuEKn6FQyb21jduPaJDcmL1j6etUEQsMctB5/pdPrQNZVK5VSv6zgOdF2HoigsG/Uw
      10zwfR+SJLET6MiOsMlkAkEQIEkSe/Kw9sqDdFiijrAnd61hGNjf30e1WoWqqufyukEQwLIs
      SJL0wHjjrK9rmubhQXAQBPjWt76FN998cyEIuQhD8iKcP2RZRj6ff+DO/DCg/P153meyLB/u
      AnEch3q9jiAIHpp+GuGTAfndn8T3xfM8crncgdc+Dp7nYTAYIJ1OQxTFM1/naDTCbDbDysrK
      oWnQIAiY93FcmlTTNGiadnQaNJ1OnwspKcL5oN/vY29v77F8X+12G81m89jHeJ4HXdexv7+P
      RqNx5OMMw4BlWdB1/dAU6GEnQhAE6PV6ME0Ts9kMt27dQrfbPfZ6eJ6HKIpHB8Gj0QiNRgO2
      bR/Ly4jw6QBlTD4phE+cdDr9QMOLxWLY2NiAaZoLN3YQBKyoJooi2u02bNuG67qo1WoHUqCJ
      RAK9Xg+aprG/+b4PXdcRi8Wgquo8u/OAmCCZTCKZTB4dBL/33ntIJBK4evXqmSpuURD8ZK9t
      NpvwfX+h1fEsrxsEAba3tyHLMlZWVmBZFhzHgeM4yGQy4HkerusylyYIAoxGI6iqyhIx9N9p
      q8O+7x/tAsXjcTSbzXOvxEW4mEin00emPB+E6XSKTqeDvb09+L6PlZUV5PN5APPANJlMIpfL
      ged5OI6DnZ0dpijBcRxyuRwkSUKn00Gv1wOAA3ygo+C6Lnq9HlzXRavVOtoAyKoinB3T6RSN
      RuOhxV8/KdDuehKej6qqEEURd+/ePTUvaDqdYjabsRtWluUD3kKr1Zr37IoistnsoQWxarW6
      oCdKAfBxsG0bw+EQtm3PA/KjHri/vx8ZwEPiURG2zhMkaCsIAnzfZ/Wfk6Q4TdNkvB7f909s
      6KVSaa7JE7q/TNPEaDRCtVqFKIrgeR6apsE0TVQqFTQaDRiGgaeeego8z7P4g+d5TKdTxONx
      jEYj6Lp+KO8/DPpOksnk0SdAqVRCo9E4cWdOhINIJBJYXV196I3EcRxomnaqk2Q8HqPZbD4w
      OB2NRtjb24PruuB5HrVaDdls9sjHh2/0bDaLq1evQlEUdLtd1oTyoHVEeAuDqNJ0c+ZyOYii
      CE3TMB6PMZlMoKoqOI6D53no9/vY3t6G4zjodrvQdR2qqkJVVZimeeT7jsfjWF1dRTw+V447
      9ARwHIdF1FEd4PHDNE30ej3E4/ETG5MkSSdKiaZSKUiShL29PWSz2Xlm5JhTq91us+A3PKwi
      l8thOp3CcRy2MwNgvjZdy9raGnsu27YxmUyQy+Ugy/JCVXkwGMC2baytrUFRFPi+j1QqBc/z
      sLu7y95fEASo1Wqs4UXTNGxvb2NrawuKosA0TRiGgWw2y07kcL/AoQYwm81w48YNWJb1qT/C
      LwOSySQSicSpNqN4PM52ueNARal0On2ix6dSqUMNazKZoNfrod/vQ1EU1Ov1hb/TZjqbzViF
      dzgcYjgcIpVKQdd1OI6DcrkMjuOQz+eRyWQQBAE0TUM+n2dZoEwmg2QyyQzN8zz0ej0IgsDI
      dpS6n81m0DQNyWQSoijC933Yts263A7dTpLJJGKxGHief2SN1hHOjsPGAj3q58/n85Ak6YFu
      FrEoj/pbuVxGOp2G53kwDAOCICzk8/f396HrOht2FwQBZrMZ282pYuz7PmRZhq7rC0PxOI5D
      NptlhksbNK2PxWILAlqqqiIIAuzs7MCyLIxGI5bCBY44AQRBwNraGq5fvx4VwS4ILMsCz/MP
      9X2NRiOMx2PU63V0u12Iooh4PI5kMvnAtYqiwDCMeWDJ8xiNRuj3+1hfn08L2t3dhed5zM3q
      drvwPA+yLGM8HkNRFOTzeWxvb8P3fUabyOfzLEVKeX/qLahUKtA0DbquH0mNAOanHPUFU18y
      uWhHZoEoXRRRIS4GWq0WZFk+slnlJIjH4/A8DxzHseqqaZqMy+84DtrtNsrlMlzXhe/7SCaT
      CxOB6L/ZbMbcjiAIoCgKEokEK26VSiWIogjHcZg7QpnHWq3GMky7u7uo1WoYDoeYzWZYW1tD
      KpViO/xRk4gmkwmm0ynK5TLq9TpGoxFc150T4O65Qq1W62gD0DQNGxsb7IV8z8H7P/0A1575
      DMajMaqVMobdFnSHA+dMkciUMOzuo1rfghp/NPIcEU6OSqXCdjXP8+B53gG1hOMQBAEkSWLB
      Yq1Wg+/76PV62N3dxdbWFmzbhq7ryGQymE6n8H0f0+kUnuehVqvBsiwMBgMUi0VwHAdZlpmr
      QZQaukbq+iKMRiNYloWVlRXWA+A4DuPshGOg8EC8TCbDskPL74de2/d9jEYjAFigi/i+f7QB
      zGazhbK2NRljr9nGxtZTGHT7qFbKaHYG4OHB42QMWu9BrW1h5842nn7mStQRdo5rp9Mp25UJ
      9F25rruwW57UAMKpxul0itXVVQDzG9f3fUZtof6QYrHIdvrRaIRut8tSnY7joFQqQdd13Llz
      BzzPM/r0Ue9JURSUSiXEYjH2GPL3qYkFmLt6zWYTuVyOuTL0WZGL5DgOJpMJCoUCM4LV1VUI
      grDw+pVK5WgDuHbtGnq9HvsABTmORMzHfrODXq+DRiuHwLMwcThwTheSkkRnbxuV6v1TI+IC
      nc/a0WiEeDy+kDYMI5PJsKM+bAC+7x9ZnEskEiwXP51OEQQBdF1nFATXdRGLxSBJEgRBYLGG
      KIrsNCgUCvA8D41GA+VyGfF4HOl0GjzPI5VKHaArkPtChS3btpnnYVkWgiDAcDhEoVBg7hdd
      ZxAEaDQa7Ma2bRvtdhurq6vMhSPj6PV6jGKxTBg81Yyw6WwG9V4OVdMmSKWSQAAECNhFcTwP
      DhEZ7jzXkp8erpam02kMBgOUy2UmL1iv19kX7rou9vb2kMvljmwyD4IA/X4fo9EI+Xwe6XSa
      0RzCgWMYg8EAw+EQGxsbAOa79mAwYDs3VXV3d3ehquqC20Op03q9jmazCVEUkcvlYFkWut0u
      UqkUHMcBx3GYTCYs9jBNEysrK4wUB8zrHnTdgiBgMplgNpshk8mg2WzCMAxUKpWF1w+CUw7I
      UEMFhHT6XiqMAzjcV+GKcP4Ibyye58GyLAyHQzjOfOxPPB5HqVRCv99HNptlM3Rt2z6UK2Oa
      JsbjMZMhyWazLJ++nAGaTqfsZqQdPbyHCoKAUqkEy7Jw+/Zt5HI5VCoVJJNJRmBTFAXpdJrt
      yoIgQFVVKIqCeDzOpA4pnWlZFmazGSaTCdvxyR27e/cuYrEYVldXF0483/cxm80gyzLq9TqG
      w+EBwx+Px5Ew1kVHLpdDNptlXVIUaCYSCSYSGwQBHMeB7/uHEteGwyH6/T5c12W75FGbGfnb
      dNPH43Fks1nwPA/LsnDn7g4mug5RFJHP5xcMidibdA00HJuU6OLxOIIgwNra2gKfR5Zl1Gq1
      hdoCMD+VCoUC0uk0ms0m+v0+q1slk0lWICN1uOUT9ciWyAiPD0EQoNvtsozMSZBMJhldgII+
      KjL1+304joPBYMAeC4AVmERRZDcRVV1VVWVZm7DGJjAPVnVdZ9whSZKQTCahaRo63R7+6E/+
      HN/4l7+Kz33uOaYEEU6ZqqrKKrx0KhHTs9lsolQqsdMiDOL5UGwiCALi8TgLmqm+YBgGa6Sn
      0++oImI8Ho8M4HEgCAJMJhPIsnxoFxfxaQ6DpmmwLIulGoH7N+fe3h4KhQIzCAAsCPR9Hxsb
      G4zu4Hkek0AXRRGSJKHVakHTNBQKBTQaDcTjcRiGgVwux3qAKfWp6zrq9ToMw2C6+6qq4tf/
      xa9AUSQWNANz/pCu67h69Sosy0Kj0UClUmGB69bWFnODfN9Hs9lEuVxe+AxM02TZL03T4Hke
      FEWBZVlIJBIolUqYTqcYDAaIx+NQFAWpVIoF08vBN31ukQE8BgRBgMFgAFVVF/jswP2BcuF0
      ned58H2f7XaHMXRFUUS5XGb+Pu2YANiNEqY4ZzIZpNNpaJoG27ZhGAarkkqShGKxiFarxeIG
      nueZ3x6Px2GaJgRBYO4M+fLPPvuZAwE8MTtd18X+/j57D5IksV4A3/eRy+XgOA5LvYazRjQz
      QFEUjMdj+L6P8XiMarXKTrVEIsHqGOHWymVS53g8ZhXvyAAeA3ieR71ePzGzs9vtwjRNbG5u
      IpfLHcrP4jiOsSWXT5DDXAoAjFYsSRImkwkSiQSq1SqGw+E8QLzn4jiOg/39feZykPtBFdVS
      qQRJkrCzswNZlpmBkwAVKUwHQYBqtcoMlF7DdV3WiLOxsYFCoYC9vT3G8iR3iV5HkiRWoV5+
      P8PhEMC8fkHBMqVZ6XMi5inP85EBPC6cJj2ay+VY9kbTNJYPD2v4E/r9PqbTKTY3N9mgC6Ij
      1Ov1hceLooi1tTUIggDDMNDpdNDpdOA4DkzTRD6fRzweZwoLjUYD1WqVnUZkyKPRCIZhIJ/P
      I5VKodfrQdd19rt4PM7qALRb+76PdrvN+P0UBLuui3a7zVoh6fqCIIAsy8zdymQybDYAfTbh
      lG0qlUKj0YAgCKw2QWuIKXvqNGiEs4GkBMM8+dMgHCckk0n0er0Dysk0RJr47rqug+M4xONx
      1n5IKcxw/MDzPCaTCVKpFBOtFUURjUYDg8GAVU+pS4zneZimyfx7ysxomsbcDco8pdNppuLA
      8zzG4zEsy0Iul2P061KpBFVV2Y2v6zqAebMNaQBRDEJDMURRPLQfOZFIoFwuQ5Zl2LYNnudR
      qVRYyrTf7zO1uVwuh3a7HRnAJ4EgCLC3t4dkMnnA5z/NcwDzPPvGxsaBnm1qGQTACmQkcOb7
      PjRNg+M4GI1GrGrLcRxrthEEAfq99CXl+GnXpcdSo7okSYzCTL42MUfj8Tib8kLumud5zMUC
      wGIOyvubponBYIBCocDigiAImEYQMK8/WJaF9fX1A9VtyjKFDUOSpAVyX7FYxGAwYME/EGWB
      Hgphn/JB4DiO+a9nRbi6u+w+EcWBgshYLMYqqrIss92ftHMmkwmGwyGSySRqtRrq9TrG4zFy
      uRwGgwGm0ymy2SwjvhElJpPJsFij0+lA13UWaALzG6rX62E8HoPjOJbOpbpBPl3+kr8AACAA
      SURBVJ/HeDyGpmkwDAOe57HXHI/HC7l66gnIZrMLqU/P85hLB8xdPk3TAIDVHej7MU2TuXxE
      nw4jk8lEBnBWkP/6INVj4L7Udxjh6indtMvG5LouZrMZUqkUYrHYQkskrZ9MJmz6YTweZ9ke
      QRAwHA7ZDQvM3ZV0Os3IYrlcjrk3lNWRJAmpVIplh8JTHck4MpkMKpUKM+hSqcROF9d12e/p
      Jo/FYqymQVykUqmETqfD0ph0oozHY7iui/F4zDhNlDUixWhyq4jfT3n/cEebIAhsjNJxiAzg
      jKCd9aygtF4+n8fe3h5kWV64qYD7u348Hmd/B8By6TRwQlEUbGxssF2PAlRqAgHmhmJZFns8
      Nc/s7OwgmUxibW0NlmWh3+8z7gzttul0mvFrqPEmHo+j0+nA932WZkwkEmi1WkilUshkMuh2
      uxiNRqzxhTaMTqcDTdPYNEhd15kr0+v1WO4+l8the3sbtVoNV65cYUoQOzs7LI1aLBYZZfoo
      UCGQushUVcVgMEA+n48M4KwIi8OeBeRHT6dT5HI5tnvSaUC0XqrOKorCKNDk81IxrV6vs52V
      Cky6rrP+WvL/Y7EY0uk0493TqaLrOorFImRZRiqVYuxOACyvPhgMGAktnU5jOBwyEl6j0WCG
      QnTo4XDI0p+6rrOTizJCVBPI5XKMXRqLxbC2tgbP89hJstzpRq5Ut9s9sRRkmEIhSRIURcFo
      NJp/pg/1LUY4MzKZDCzLYsIDdDPevXsXqqoil8uxnXE2m80zFqLIcuNXr15llVFBEOA4DiPF
      0fOS4lq/32cNMp1OB6IozrXx7wW04/EYnU4HlUqFdW6RKiDdjJ7noVKpsIwNGWen02En4Wg0
      giAIGI1GrMJMfb6maaJWq7H+gXq9Dtd1GTmOcv/hrNCdO3eQyWQWahrUI6Cq6pGjT5chyzJj
      qwJg7uJDpUGXy8sRTobwdBWquo7HYxiGgZ2dHbYzDwYD1hEFzKUIZ7MZG/q8srKCTCYDx3HQ
      6XQwHo+RSqUwm81YFZV2zbW1NUwmE7TbbfA8j2q1ilarxdiiwJwblEwmmZYQpT339/dZ9mp3
      dxeyLDPDWKAU3KM9kz9Ps70oHUmv7/s+i1Ecx4GqqrAsi1Eb6GYnWZTDEgfUt0Btu9lslqVr
      l3sg6PHhz53neSbPciYD2N+5i712H3k1Dt3xIQQWFDWD8b0hebVLNCQvCAJMp1PIsnyihnTy
      38vlMnq9HguOiY9DbYyTyYTdZMlkEsVike2KwDyVSFz88LSeUqmEVqvFaA303EQfiMViLH6g
      dGQ2m2XSJHQjEf2BagOxWIxJnKfTaRSLRSZkq+s6VldX2WT5Wq3GGuE5jsPm5ibi8Tj6/T4K
      hQJM02S6oIIgoFqtMkIbx3HMhVIUZYHC7Hke7ty5g1QqhUqlwmYKk9vWbreRzWbn2Z2lmMAw
      DDSbTaysrLCmGuCMBhBPKBgMRvDc+QdQLNVhDloobX4Gk8EA3iUakkcVzXQ6fSAuOGytIAjI
      5/OsgZ2qsBQL6LqOXq/HdkNyg3Z3d1nb4Gg0Yq5MPp9n2ZrRaITNzU0kEgkmJVKpVFgBaTqd
      wrZtxONxlicnl0WSJGiaxjq+TNNkN3+/34dpmiiVShgMBtB1neXniYFKp5iiKGg2myxmcRwH
      jUYDhUIBhmEwyX1VVVmRjjRAKYtDeXtFUQ5IqVOnm+u6sG0b1WqV1T3CVAhinNLJRp8VrSWc
      yQBcx0EykUSlnIdlcxAxQ6p+FcPmNmobT1+qlkjir9PRepK1y4biui7z30k1wfM85PN5TKdT
      JJNJWJYF13VZEzqdHIIgsJZBwzBY9ZeKYsCcS0SdVaIoMtnLIAhQKBRY4YoKY3TTkVsSDqSr
      1SpGoxEmkwkrllH6kk4Gck0oizSbzVhmp1wuYzKZwHEc1svQaDSgKAo6nQ5WVlYAgKVqyXfX
      dR3xeBxra2swDAN7e3vMKDOZDBRFYbs/JRGIHUrx1WGJizPdFaWVOgqVOnh+0ddaq51dkuOi
      gvxRAjWKH6XIQBqfYa5/PB5HsVhEp9NBIpHAxsYGCzSJB5NMJlmmiNidHMdhOByyVsNms4lW
      q8VSndPpFLu7u2zXz+VyjBZBMUKr1WIGQyxTek266SnNaNs2OI5jz0GBvGEYLPtDFG/aadvt
      NusvoGJdLpfDeDxGIpFgwThVfwGwXuR0Oo1ut4tMJoNOp4NsNrswZ5hcOqoaE1GPNiLHcZBO
      pzEajaBpGmv0D+OMQTCHyygc7Xkems0max7hOO4AJyXsEi03tBBLknLY5KP7vs9cCqIAkytE
      XVzEc9nb2wMArK+vsxiA6ghkMKVSCZ7nsSIWx3GwbZspN1D9QZZlxg2idCPd/AQSmk0kEkxr
      kzI8ZDQU+9CNvre3h2q1yuIMRVEgyzIsy8JkMmHuCzX2JxIJltadTqeskh3eLOr1OgRBYGK5
      m5ubAMDeGxXugPsnLJ2I1JVGoPlgq6urURr0NCAXgr6IwwyAhJ1EUWQ72crKCruxSKnAMAzW
      tkiN6BzHwbIsJJNJ1tSh6zp0XWeFHOD+HC26FsqZ085O8oKpVArVapUFo77vY319nakpD4dD
      JqNCdIVcLsfSpmQIsiwjm82i2+2yyrEsy+yk29jYwGg0YrULYpamUil2Y1Og2+l0EATzEagk
      eEsBv2maSCaTmM1mKBQKrN0SAEvjrqysQNM07O3tsYwZaYJqmrbwfZBI2PJJTHWHYyfEPCkg
      jZxHAUohEpc87PPTDUR8czqKTdNkMoCkiEY+v2mauH37Nivrk3sBgAWQRN4KuyB0KpCeJwXL
      4dengJF2aWo0oZ2SJELoZqRCGqUkw6dAEMwHZ9DNRjEJnWL9fp81mVAr5XQ6RavVAsdxTC4F
      uC/gJQgC62UejUaYTqfMFaJq7crKCtP9b7fbTNmNsjyapqHRaGA2myGdTmN9ff1AzeAwN1RV
      VcYSfeINgOT9HiWIckA3CUl2D4dDdkRrmoZer4d0Og1d19kUxbDSGe2CpLdDKgmUWiWxV1mW
      2To6RTiOw87ODmaz2QI9mSgQlPpstVrMOIkfRDcu6XhSxdbzvAUh2nBFmiqp5Fq5rrvgqtm2
      DdM00W63mYtEor4khksnQlhjqFwu49q1a6hWqywRQE389PlSm+etW7cYwW91dZWdep1OhwXl
      R8E0TeZmEi5FSyRJ/J0G4aFsh4FaFKkUT8pnsiwz7jtp2lAjOH2Z9DdWibyXPSLmped5aLVa
      jBRGbZOklNxqtRCLxdDpdNj10I1GhkM8Hkp90jUD84IaEehIKWIymSyoLNNzkgHQdYRZmMD9
      BhRSbaBsD2WSSJ7QsizUajWk02l0Op0FORV6nWQyia2tLciyjHa7jXa7zZphqMfBMIyFrBrF
      JFShBsBOu3g8vvCeSFA3PJ8gCIIn/wQ4blegkTphuK6L3d3dhZ1wGUS/Ja384XAIWZZZwwkp
      JdRqNUbXnc1mzL1ZXV1l2RIynFKphFqtxjhCZLSmaWJ3dxd7e3vsVKB8efhGmk6nLEah3dO2
      bayuri60Feq6zqqo9BrEmSf3gZ4zPP7Itm0Wd4RlCckli8ViLHUZliERRRGVSoX55lTYOmyD
      If7+bDYDz/OM9Nbv99Hr9Vi6mUBy52F3dDwes1OIQIXCwxi5T/wJcBzoZgh/MOSbhqeILIOy
      HaPRiO2olOFQFAXJZJLpaVKPLgCW06diFqU1SRqEGlJSqRTbXSl2MAyD0Z7pxiwUCmxKIl37
      cjP98lxe+h2AhaKQ67pIJpMLRDjXddnfKcNEjSVBEDDaNNUP6N+0M1O7I52Y5IZR8a/RaLA8
      P3WLraysIJfLsdSsKIqwLOtIlQwyIoq1SFYlbFxEjV42OJ7nTyeNeBpcBGnE47QyAbBj/LC1
      w+GQpTuLxSJ6vR4Mw0CtVoNhGCyr47ouK70TD4YkPiiooxy2LMsL7kMY4RZGci2IB083dNit
      oH8vPw9loYh2QScgxRhkrIqisOqwIAjsRqQcPE1yD78WZaHIBSkUCpjNZiyQtSyLUSqI1EaP
      IY7TU089xZ6H0Ol0WGp0+fsLPyfJKVL9gOd5FIvFY++NC+cCUdHjUQzvWxZrDcN1Xezs7LBc
      dKPRWHCXstksarUaVFVFq9WCYRhYX19nBShyGSjQpYkopLgAgNEBSNqP6MvLNwAFe+E0KnFm
      woEd3exhX52acSgrRa4OsUyB+4Uvcp1isRjK5TL7OxkcZYzS6TQqlQpzxRzHYVwmMjqiXler
      VaTTaXYaEAWDsk10jYS9vb2FUw0AyuXyoVXccBMMpWpJeW45S3fkPfDAR3wKQTNkzxPkClFL
      HRVcqKkEmDdhU8qPgkQA7KinG5GOd6qeEjfFMAxMJhPEYjF0u11sb2/DdV2m70MI86qWb5rD
      WLmU9aE1lLEK38i045PLQtdKp9bu7i7bZCgGAOY3+/b2NlOKoOwTGQENr1AUBUEQoNlsQtM0
      1m9ARpVIJFgSgZrjwwpyZ0EikWDzBYrFIpsscxwuZAywsrJyZnfoQdA0DdPplBHVSAJwdXWV
      pTpd12UFnEwmwzgoNHuKdmbi0YRv1tlsxqgDYQnv8I1MhShC2K8PD30gLLs55LaRIYRdOfqZ
      XhfAQp0kbDhUMKJ6BHDfzSL1B1pLje/E86emeGKMxmIxFjNIkoRarcZem9irVDE+Lv6iijWd
      gmEaCqV0T4MLZwC0Y50V5EIBc845DWam3D590ZQeJEU0ACgWi4xYRqJQRCUgghjdbOQGEAmM
      fPdlH/8wn/04945y8fRZUEYn/DxhFmr4uQEwfzksnBv++/JnRf8P1yCoxZB2+bCrQY005GKR
      P27bNkqlEra2tpihk2tIMUw+n2e7P81GDrs+PM+j1Woxsa5YLMbIc2fFhTOAhwWJsIbH9dDv
      9/f3WXV1b28Pq6urmM1mTGDJMIwFjRzaxS3LYrwWKgiR20OGQP41pQEpg0TBJADmtx4WvBKW
      6cGHBczLCKc7aX34VFk2gng8vnCShTM74diC3lP4xCgUCkyBgqgVVOGlQXp0Mk4mkwWKBzXc
      A/Odnpp82u02ZFlGuVxm9Gc6AU4D2oCoeg5c0BjgYSCKIutUIuou7XDVahWpVAqJRIL1znY6
      HUynU+b6AFjgsRDvhnZU4p+TLw1g4cuidkRCuEBGBnWaxNyyQYTXLu/s4ZsXwAEWKzC/+Tc3
      N9kIJAJdMxkTKb3R81EgPZlMUCqV2IQYyvaQXlCz2WTJBIqFALBGGZpIo6oqNjY2WDBNhS5q
      PJJl+dQyMyS8S/PCAED4gz/4gz841bMA8FwHw9EYkshDn5lwHQvgBMymE4gxCXwoY7F8ASdV
      RqPBDxSonWbtMsJraTejeVWkgixJEtrtNlMiIzeEhJvoA1dV9QCl2LIspkUZj8eZgnPYhaDX
      Jx4QZVSWb1giaR0GKnQdV9mmTM9ypTVsaOHTa9lF8n2fjTaitkV6vbAMISm10d/CPxMNmQqE
      rVaLZYmor4FoGJlMBrlcjhn+8khU+r54fj569TA1jpPeG/RcxOUCzugC3fzoQ/R0C0pgQ84V
      YesT8IGHQI4jEc/g6afWWcYhjMN+dxQoZUjVPzruT3vsHfW6pIbA8zyj7FLzhuM4aDabSCQS
      qFQq8DwPqqpib28PmqaxXZx2ePLD+/3+AbpAOIdOTM3j/O3lCS60u1JASxwcei5CWC8oHFDT
      51YoFOC6LiaTyUK8QPO1lmkDNB6JHpfL5aAoCmukISEr0zSZ5CDdsLIsM+oBxSN7e3uMPUuu
      WNj4Wq0Wc0t0XUe322UCAMCcAUtKE8s7/2nuq7BsPHDGE0AUgA/e/wjJVAaWNYMYk8F5LoR4
      AgJ4FPLZI7/kk97AlC8OTwekXtbTDIOmkn+4KEeak1TIoqCuVCohn8+zL4YaTzqdDmveJiow
      BavLbgvtqmGXgk4w+u84hHP5tLNR3v6wAlf48wxndgCwlkKqHlPRLZwmDccC5GYsN5qQ70w3
      MxXsADB2LCm5EXeIcv5EU6Z6RDKZZJ83dZwF96gcNDuY3lM4o0OuELlMNFuAiozEZD2usHkY
      zlQJtgwd7e4Y5WIGU8uFELiQ1Qym4wEyhRJiAv/IK8FE5aWWt5Pi1q1bkCQJ9Xqd9YxSowjl
      66lwQvLgRL11XRf5fB66rkOWZfT7fZZ5oboAMTtJCgQA63giwzvJDrXsr4cLX7RxUIqw3+8D
      AAvGSVUtXOQC5jcnpSmn0+lCdonUHegmo5MNmPvjRLPodDqswEWbQjKZXCDrUSxE+p90QlFa
      kzqy6DSiQRimaWJtbY3RGEgo6ySgNdVqld3wOzs7C8M8ToIz3Y1yPIn19Xm6SgmlXePlB8sE
      nhUnKWsfBo7j2JdPfJ2VlRU2xLnf7yORSMBxHMxmMzbAgW6iRCIBVVVZaR0Acw2AObsyFoux
      6m44r0+vHz4VlmkD5MaEb3666enfFFCHCWyCICCdTjMdTnos7eiCIDB+fjhrQicLke6obzfs
      Q49GIzbrl7JaVHFWFIXNE6PNgz5j6vIiWRcS7Mrlcmy4B20YVBkml5Gq1SeFoiiM2UnXUqlU
      TiyWRXjiuUB0Y9N0ccqB043RbrfZmE4SfyKfliT9bNtmRkLrEokENE1jfi7dyMVikQXB4bz8
      8g5PolThQDifz7OUKhXMKIYgoVee5xlbkjj8dAqE3x/d1OFhGvF4HPl8nvH3k8kkTNNkJ0PY
      hRIEgbFZKVai6TAkr07K0gCYUBVpFRGHKOy2nMf3+7Brn/g06Hg8Rq/XYzQDURQxHA7R7Xah
      KApWVlaYICwVtkhGhHYzURTZDud5Hkql0oIrBCxOag8HpEQ5IFD9gdyv5ewFiUhRYBqenE4C
      toVCAbFYDLPZDLZtYzweswxNpVJBIpFgO314EwqCgHVOkYHQ9ZFB0onGcRxarRaTP6S5AWEl
      OzIM153P7iXtHar6drvdA914RP84Dagr7iR7NQlwnXRff+INgLQoKTdPdARyf2gOFhHsSISW
      hKVImJYyF0SfdhyHnSQUaMZiMcZ6JBcnLDIFgAXOPM8zRTOO41gcQdcR5u3QSUJZlGq1ypQX
      6OShXZyqrpQ8IOOjk8owDBbQGoYB27aZKC/55dSOqKoq+zxWVlZYjy25e9TFRtqbdNrdunUL
      k8mExSPh2EPTtAM8rvF4jH6/f+RN2+/30Wg0TvR9U6B+KQ2AVBvChSbSukyn09jb24Ou62wQ
      A+1s+/v7zL0AwKaukyhVuOhDN/XmPQEqCspJ6558WuqdBe7HAbSzUmBM40aTySQb50kjiMht
      IhEpar6hohzRjGkXJ3eI6MHkqtHpQXNzt7e3sb+/D1EUmSsTZtcWi0WsrKwsTFqnmVrUwkjV
      WjIYum6KMei5NjY22JimRqOBZrOJQqGASqXCkgZUDzls7hkhm82eSIYemDfc1Gq1E9eMLpwB
      HEcTCKcmCb1eD7u7u+j3++xLJA49VSlLpRKT4aOdUFVVVhmmIhh9uVT5nc1mEEURq6urrGkl
      7P6Qi0BFIDII2vnDLE1N09gMLHJDqHG9UqmwwRjUk6soCqrVKlNNIAPiuLlCdKVSYYQ4cllo
      HCkZDu3S9FrkvlHzP/2OwHEc8/UBLAytI8Vnih3ITcvn86zyTm4d5fnpuelzPCp9ST3Mx6U3
      yZBO2/56obhAQTAfNUQTwqkgQyV1URQPDEWgDAQd5wAW8s/tdps1fqiqygbEkQjTZDJhasWU
      daFmFvrQqVGE+lHpWjluLmJLRknqbBRX0ElF1VFyZ0hFgVKO1OBO10FT1Ok0ocxK2K0itTUy
      AOohFkVxQRad4pByubzQuUWqzyRTQs9FagxEe87n8yzWqVQqrOBFGwG1fhYKBfa5EJGNag3U
      B/Ew8Lz5ILzTpkHPVAg7CR6WCrGMcJGFdmTbtlmgRpmaZVALHulP0g2QzWbZv0mCO51OI5VK
      QRRF9sXpus70dajhGwDLdpBkH2n8A/MbmHZrqh/MZjN2M5IPvkxtIE5SLpdjuXLS8On3++w6
      6Ll3d3fZbFzq4CI9IqIiBEHA9HNIT0iWZaTTaabOkMvl2GR6Iu71ej02ypRiJqoJUAKBXi+s
      3U8uJ7l5JO5FxcO9vT1IksTkUWhDIKMht/M0WR0K9omqcpp77EK5QORLj8dj5jYc5kOSWxHm
      4pBawvLzxeNx7O/vYzweYzKZsDRfOp1maUSSFSe+Tzilms1msbq6yoRmATDKMMUG4bI/UQ/o
      BCHD3tjYYBz56XSKTqfDCHv0GJJAocIdCWeRZmgikcB0OmV5egIFzMDcx0+lUizmCbtt4dQr
      DdImo02lUiiXy1BVFevr6ywtHB6hBIC5mQQ63QiUWDjqBieNobPcG2Fy3UlxoVwgAEw4CZh/
      uKlUilGYCcsD5cg3ppx7eCZXOKdPRkN8f5oiQjFDMplcoFaQP57L5Zh2D1EXyuUyU16mYhBp
      abZaLTZXi9KMdHrRqUHZJ6Jhk/ERHWR1dZXp9VDDOsmgKIrCpseQ8dAmQfx8Sl1alsUkWajZ
      fW1tjbVE+r6PfD6/QEGh/5O6HKVdl8Fx8ymV4Z/JFToKpwlgHwUuXCEsCAL0+33mHx8Gy7Iw
      GAwA3N+NTdNEvV5nAyVogDORo6i4JIoitre3GSuRupvC2Q8CpRQzmQzjtq+trbGMj+d5TGUh
      PL2Q5n7R9YeNcvnzc935TADf91Gr1ZgUCLlqk8kEvu9jbW2NnRz1eh2SJLGNoFarsfdJlGVS
      xDBNk8kQhlO99FgKbMklItdsMpkw9QvXdaFpGjOUh/l+P+m1F+4EAMBcgKNAOjskJEv0XuKS
      l0olNuOKOopoB6agjI7p8XjMikTUE0w1BSqWUUWUmr1brRbL1S8bDRHLwl8YFevy+TyrL6RS
      KQwGAzaz1/M89Pt9bG5uIpvNstMmmUyi2+2i3W5jZWVlgaJNHW/kf9ONQjfs6urqAr1kWRg3
      TM8mKURgvsH0ej2IoghVVdlGECbNnbY18XHhwhnA8rHqeR56vR6y2ewCD0QURWzeUxDudrsL
      g+KI+nwYt4j8XQJlj6i6GAQBC/IIxBClJhLqNyDXZJmxGVYno9fodDos80IuBZ1QJGhLMUzY
      eEgNgTYF8tupCttut7G1tQXP87Czs8N26VMFikvXTDwc2u2pnhJWfz7JiNJPAy6cASyDKpqU
      Mz8MRFkIS3ufRFal2WyC5+eCttTySJQDymAAYAEySQySZn6r1WIV1eNAtQQqSlGGhYo/kiSh
      Wq0y9yXcv0B6osvuINU2CCSbTsE6ZXyO+kyps40CZQALE1yWOfkk+16v109chf004MLFAACY
      ClmxWGRdR6qqHplLDscPyyB6RPgxvV4PqVSK6XxSdgaYB9jNZpOlPhOJBCt6hekJxMakzqqH
      eb9h9Pt9xumnYthJ1z4Ivu+zcaimaWJ1dRWJRII1wYRP3mUQCe+0bMyHveaHXXumVcNeG9uN
      Dj7/3NO4s9MB3AkSmRKGnX2sbFxDLn2+/h8xPMPiTifRkjnKQGjAGnUg0S5Mp0u4fkGaM+Px
      mJ0iy24TPZaKRQ8CuXGUj6ffEYsVAMvZh4Pzs2ZLSL+fiIDh3/f7fTZ7mG7mk9AQluOHi4Iz
      nQD7O3dxY6eJXCoOzwdkJQVPayG9+QyMwRDXnr5yaNf+o+rrfRCWd4QHraWsBimYAXM5Pmre
      WB6CsYxer4cgCFAqlc50zY7joNVqoVgsMjeDWkLr9Tq7MSmt+yA86HVpCmOhUDhgoES7Pgs+
      qe/3Ua490wkQiwmw9BmKV9bRavVgT3tQ0gW07t7E6trVxzokz7ZtNBoNNhEwPIb0OCznpyn/
      f1xxhVKEpG9Duf/w7nySaxYEgQXsYcYq8ZCIJ3NYQ/hhoJPpqNemAPswUGxxFnzatF9PgjMP
      yfu5XAWyImF1tbZ49D0kp+NhEYvFUCgUWOmeClSnRdjVOAxERchkMigWiyxgpN+n0+kDKdCj
      QDf1cDjEcDhktAs6kURRPDBv7DgQW3RjY+OhOTZPOs48JE9W7vuOj+tDdhwH+/v7KJVKLO9M
      DM8gCBhzcVlp4VGA53kUCgWWsSFfOvz704LYkpQ+fVD26CjQjLEID8aFToNSgeqwQJNchvMC
      Nacc9/ujTg+iISxnrsrlMvv3UfSCk4BIahEejAtFhluGIAiswf0igdr2DtMACv8X4fwRbROP
      AdRueZb6QIRHi8gAHgNIYSHC48eFdoEiPBxO0zz+pCIygEsKmgITVkq+jIhcoEsKQRAYl+ky
      IzKASwqql1x2RC5QhEuNyAAiXGpEBhDhUiMygAiXGpEBRLjUONcs0MPMCFtGtDZaex5rz+0E
      OIyD/zAEr2httPY81p7bCXAUo/FhVL+itdHaR732/GKAIMCg34fn+/MhEq4DfTqda3maBkzL
      xlSfwPU8TCYafKbj6d/TtnSgTXQ4toWZMde8mek6HHf+eM/3oC1NGvE8B/3hEI5lYjozYBoz
      GPf0ciaaBt/3oWmTe9eyOLnE91z0BwNYponpbMauked56BMNHlvrYqJPF9+qPxetsi0Lk+kU
      tjV/Dp7nF96j53nQJvrSx+Sj3+/dm+RowXVsTO/pdc6m4fc7f/3lz7jf78EPrZ3o+lxeZTaF
      7bjQ772+pk0WeT9BgEG/d08kawLXdTDRp3MZRWMG03JCrz9h3w9bO+jDdT1M7uktaZoGcBxs
      y4RhWuz1w9/tfOm9a/Z9jEba/P3O7r9f2/UWPu/la6a147EGJ/R+TWMKy3bY533o+x3MR19p
      mgbbsTHRp+d3Apj6EN9780187ed+Djeu30IpI6Fv8fji5z6L69c/gms5gBSDZ5gQ5Tgy5RVc
      qVfQ27uDH17fwcsvfh4fvv8Bkpks3MDFi88/j+s3roNzXXi8guGwj2opjerVF1BMzvVtbn74
      PjpTF5+9soaPbtyF4FlYu/pZlJNjfHy3i2l/hHw+jq4OpBMcXvj8FyEKjvqabAAABUBJREFU
      81Nq++Z13OmO8blrW3jvg49RyGYQCDw+99Q6Pr69DUubIpGMo6+ZyGUkPPPsF5CQ5nTm5vYt
      /ORuEy997rP48bvvI5NKIF9axWatiOs3b8I3LfCSgsFIQ7mgYv3aC8gm5h/9YP8u3vrpHfzc
      yy/iH95+F7VKEYbn4EsvfB7Xr1+HELiwgziGgw5Wq1kUtz6PSmrefaZ3G/j+f34fv/TqK3jj
      9R9irVYApCSefeYpXL/+EfjAh+1L0Cd9FHJZ5OrXUC/OVSYMrY/vvfUDfOn5z2KnNUYhFYfp
      Gnjm2S/g5scfIfACuIEAyxwjkUgjW6ljc3Xe9O+YOl77/vfxlS+/iA8/bmCzkkbXDPDSC8/j
      4+sfwXUDBAHgeVNwQgrpQh7XNufCWuPWNt549waeXq9iOHGRScQwc2z8zIsv4vr1jyDCh+kr
      GA87qJZzKG48i2p23t02HbTw/R/8GJ97ehP7XR2FVAy+qOK5z17D9esfgfMD2H4Ms+kAmUwG
      +dUrWCtn792PI3zv9Tfx6quv4tZH74OLJRETvfM7AURZRTWvotkZQ5FFpAoVeJMB+uMZeEEE
      z/mISTJ834UsKwjuBTHJfBmSr+P2nR3kqjUIPA+Rnw+TEGMSAt+FJM+16hVZWthdqrV1tBsN
      7DcbWNu4go2tLezu3IU5MyDdU2pTFBleECAmLnLxS9UaJoMOLMeHLIoAL0Dg50JVMVmB591b
      6/uQYzGEN5dssYrAHGOs24jHRFRr62g2GjANEzFJQuA7kGUFnutBkWIL16xmy1A5Az9+7xYE
      3oflBRDvDc8QpRiCwEUs/H5DsZ6UyqOYCPDDd64jFgPShQqG3TamMxOCKIKDh5ikwHNdyIq8
      sCPG4ilUsgqGUx9JycdAn0GOxWAYJnhBBMcF88/b8yDLykKQyccUrJZzaHV1VAsJzDgZojFC
      ezQFJwjgeUAQY0DgQ1paG8+UkInZaLTHiGOGoTX/LkzDhBiLAYHLrjmuSPBDn7OkZlFK8dhu
      9JGUfHBqHlq/g8nUBC/GANy7pzwPytLrioqKakFFdzCBnMogm1QgS7HzE8YKfB+3797BarWK
      wXCEVCqJmenAs22k0wkEvATbmCCVLWDY76FUrkDgOXiOjbt7DVSLeYwnM2TSKZiOA8uwoUgc
      EqkcxsMe8sUier0BVqr3NWssY4pmb4hcMg7D8SHxAXiBg+lI4LwZiuUyOp0uCrkMxlMTpcL9
      QQqOZWKv1UE+k4TlAgmJh+t5MCwOImcjWyii3+shn89hNNZRLt1XkXBtC9v7TZTzWUxNFwmJ
      h+MDluVBFgMkMzmMBj3kCwX0B2NUK/flUzzXwZ2dXVzdugLHseG7DqamDcuwEFcEKMksJsMe
      8sUSOt0+Vlfuv1/f83D77l1cuXIFruPAtU3opgvHNJFUZYhKEsZkhHQuj36vj0q1Av5eXBb4
      87X1Wg39wRClQh7DsQ7HspBOxQFRgWNMkEhlMRoO2PcDzN22O3fuoFaro9/vI5/LYDiewndd
      ZDMq3EBE4BqQ4ilMxgMUylWI99b6novbd3ewtbmGVqePYjaNiWHDms2QiEuQ1TT0cR+5Qgnd
      bg8r1QqLJQPfw607d7G1uYFWp4tcSoVuOHAsC6mkAl5KwJyOkcrkMRj05zMI2Nr5/bi+tg7P
      B0Q+QH+onZ8BRIhwERAVwiJcakQGEOFSI+oHiHDJEOD7f/dtDKc2tq4+FZ0AES4bApguB0UR
      8c5bfx8FwREuG4LQYD8uMoAIlxuRCxThUiMygAiXGpEBRLjUiAwgwqXG/w9ks96CMReQSwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='filter' width='184'>
      iVBORw0KGgoAAAANSUhEUgAAALgAAADACAYAAAC3QqlrAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACIUlEQVR4nO3UsQ2AMBAEQaD/ep0+JRDZSKuZCi5Y3T0zc0HU8/cA2EngpAmcNIGTJnDS
      BE6awEn7DHytdWIHbOHBSRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIE
      TprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCk
      CZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprA
      SRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0
      gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4
      aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMm
      cNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQIn
      TeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIE
      TprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCkCZw0gZMmcNIETprASRM4aQInTeCk
      CZw0gZMmcNJesSQIXm/HalQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='low income' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='low y buckets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map y change' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='median rent' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='median rent low' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='median y' width='184'>
      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
      aE0CF1r7P+3SlzDsocatAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='over 1500' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABUCAYAAADUKzhSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAG0klEQVR4nO3df2jUdRzH8ad1ed0t7/Li9Fb+CjxiCrPNWDSKUv9oMFisQsR+/GMwQ1gb
      nEGipjBsuoljKHWYhRQUC1oMjAkt0WKFlFKmSyaeQ03r6nS3/J63fcT+uM3d5tQ19nX7fj7v
      x39+7r7ffQ++r+/n8/l+v28/U65fv34dIQx1z0QfgBATSQIgjCYBEEaTAAijSQCE0SQAwmgS
      AGE0CYAwmgRAGE0CIIwmARBGkwAIo0kAhNEkAMJoEgBhNAmAMJoEQBhNAiCMJgEQRpMACKNJ
      AITRJADCaBIAYTQJgDCaBEAYTQIgjCYBEEaTANjMsqyJPgQj9PT0jGk7CYAwmgRAGM010Qdg
      gm3btk30IYhbkB5AGM2AACisZBIrrUb8NJlIkEjeeqKqbrGdspLEEwnS43KMYqJoPARSnD3c
      wvY9+0n1t3jC5WyMlBAAIEHLlnfY19X/WcFKtq5+Fnf/d9PxDpp3N3DgryXUNazAl7XnWNsH
      1DYdxQOkCFNVFyEv+wvCMfQNgHWCD/ec5vVNdRTm+oAkrVvW8lHbIiLLcun8spZ9lLMjWoKX
      OJ9UrSfavoDK4iCx1npqm8/x9PNFeC4P3a260EZt02kq3otSGIDOlnep395K4+aSG+ERzqHv
      EMibz+ZopP/kB/AxIwC9KCDJj4d6Wbm6BC8AQZavWcLxr77DAmYufoW6aAOvlRXj7+0bstvY
      wf2ESt+kMNONEC5bTfjit5yU2/2OpG8AhulsayR6NET5U7MhfZ5jKT8zcgY/d89ZQKj3Cgrw
      BnMzQ57ePuC+IftRfR7mz5uZ1eJnlt/D1ZGnCmKS0z8AKk5LfQX1Tf9QUbOBPC9wrQ+PZz6P
      ZI9Zro1+l5leJLvhIifPJ8fjaMVdpu8cACAdo7GyluPhUmp2lREc+LX3eiB1jDMW5HsHvqxu
      TJbvZOpNDSEWzpVZsBNp3ANYtG6p5XjRKnZFsk5+APcj5Hm6+aN78EpunTpKtz94x4ns/Tnw
      84nzgw3qT053pzS/kuhL3wBYp2i9GCLyahEupVBKZd3T9/Lk0hDNH3xNZu56gc92HWZh6eJh
      AVDA0Enwo88sJXXgY44kMv/uaHmfrtBSFngRDjRF15Xirc4Wquv33dQ+tzTCurIwt34OYNGy
      pfpG+6AwkcYIYTfE2hqpbTp+o/12zwEsy2Lnzp3j9KvEeNM2AKOjSCYuocghEPh/l/B0MskV
      pcgJBG47bJIATG6GD11d+ALBMW3p9vnkwZcG9J0DCDEKhg+B7GdZFl6vzJDt1tPTw7Rp0/73
      dtIDCKNJAITRJADCaBIAYTTDb4PeHVITPHlJDyCMZkAAbKoJTltYljX8xWjhMBoPgeypCVYX
      2lm3aS/dWX9pSUUNKwrH9kRZTCx9A2BTTfA1HuDlqhoK84K4gGSsjbW1dSzasS1TbCMcRd8A
      ePPZHM3PahihJnjj0Jrgyt3fYRW/mKkJLsnFpzo4deinIbt15+ZTlJu114fnEGL4S9PCKfQN
      wDADNcFVr8+GdAfHUn6euKkm+BcU4Av2n+Ej1AQDpJMJkuk0f8d+oXlPMw+VR7Iqy4ST6B2A
      7JLIqkqiywbaXXhI0ZddB3xt9CWRbl+AIDDdl0P58jM0NH1B55J1hOX1UMfR+C6QPSWR2Vxu
      H3nL3qDc38Whk1IU70T6BsCWkkiLg59/SUd88LapSpzgh27ImyVF8U6k7RDIOn+GFBepr6wY
      0j5QEvlo2VuU/vYO1RWZsklPwUq2FgVhhJLItRXfkymJrGK69xwN66uH7LOgPEJxwOYfJGxh
      eD3AWEsiFWmrl7RSuL0+3Le5jEhJ5OSmbQ8wOmMtiXTh9rqkJFID+s4BhBgFw4dA9pOSyLtD
      SiKFGAMJgDCaBEAYTQIgjGb4bdC7Q0oiJy/pAYTRDAiAPSWRmafICZKWLJTqZBoPgexbJjV9
      tp0NNXvp7l8olVApOzaXIXf7nUffANhUEomKsb1mL4VraliRHwTSxONpOfkdSt8A2FQSefab
      z+gqqGBd/sA7RG6CQXkryKn0DcAw41US+W/8MnNnXKW9ZQ/tv13igdkFvPDSMnKlC3Ak/SfB
      47xMqivHQ9f+vfyq5rG0pJgH/2xiU3UjMZkLO5LePYANy6SqK1C0Zger+jcsLHycqW9X8+3J
      JKvypSrMaTTuAWxaJtUPh9t/z2rxMv8xP/JfxDmTvgGwa5nU517AczRK29n+ZweJI3x6uJt5
      MglwJG3rAexcJjV+5HPWRw8w8BhgYXmEypLwyMchJZGTmrYBGJ2xL5OKsohfuoLbNx3fbYqC
      JQCTm96T4Dsa+zKpuLwEgzLscbr/ANEvN0FkxFOoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='overall_change' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='overall_rent' width='192'>
      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
      F0l63P1/obzL7/uu+WcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='overview rent' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='rent' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='rent change counties' width='192'>
      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
      xvIi/x/EzwOVPHSDlAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='rent changes' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='rented houses' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQZElEQVR4nO3ceXCUZZ7A8e/b3elO0rk6SBIgJBKInAGJiAoolwyljAie5YDHrLrOyrq1
      MqU11jhaHlPiDLOOo0sV44W4OKOFEnUkMbIODiCnEDRyE2IOcnc6pDvd6eN99w/EdV0h3cnb
      Cdbz+/zd/TxvJ8/37fd9++3WDMMwEEJBmqZploHeCCEGkgQglCYBCKX9vwB0XUdOC4QqfjAA
      XdcHYluE6HdyCCSUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCa
      BCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkA
      QmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCU
      JgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkS
      gFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEI
      pUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCa
      BCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkA
      QmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCU
      JgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkS
      gFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEI
      pUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpdkGegOEWgzD
      IKJH6A510x3sJqJH0HUdzaJhtVix2+wk2hOxWW1omhb37ZEARL+I6BFqmmrYc3gPR+qO0Ohu
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sp - y - median y' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='tract id lookup' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='y vs rent' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
